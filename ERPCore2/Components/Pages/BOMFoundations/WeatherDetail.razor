@page "/BOMFoundation/weather/detail/{weatherId:int}"
@inject IWeatherService WeatherService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

@if (isLoading)
{
    <div class="d-flex justify-content-center align-items-center" style="min-height: 400px;">
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">載入中...</span>
            </div>
            <div class="mt-2">載入天氣資料中...</div>
        </div>
    </div>
}
else if (weather == null)
{
    <div class="alert alert-warning">
        <h4>找不到天氣資料</h4>
        <p>指定的天氣不存在或已被刪除。</p>
        <button class="btn btn-primary" @onclick="BackToWeatherList">
            返回天氣列表
        </button>
    </div>
}
else
{
    <GenericHeaderComponent Title="@weather.Name" 
                          Subtitle="@($"天氣代碼：{weather.Code}")"
                          Icon="bi bi-cloud-sun"
                          BreadcrumbItems="@breadcrumbItems">        <ActionButtons>
            <DetailActionButtonsComponent 
                EntityStatus="@weather?.Status"
                IsLoading="@isLoading"
                OnEditClick="@(() => Navigation.NavigateTo($"/BOMFoundation/weather/edit/{weather?.Id}"))"
                OnToggleStatusClick="@ToggleStatusAsync"
                OnDeleteClick="@DeleteAsync"
                OnBackClick="@BackToWeatherList"
                ShowPrintButton="false"
                DeactivateButtonText="停用"
                ActivateButtonText="啟用"
                DeleteButtonText="刪除"
                BackButtonText="返回" />
        </ActionButtons>
    </GenericHeaderComponent>

    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <!-- 基本資訊 -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle me-2"></i>基本資訊
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">天氣代碼</label>
                                    <div>@weather.Code</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">天氣名稱</label>
                                    <div class="fw-bold">@weather.Name</div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(weather.Icon))
                            {
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">圖示</label>
                                        <div>@weather.Icon</div>
                                    </div>
                                </div>
                            }
                            @if (weather.ReferenceTemperature.HasValue)
                            {
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">參考溫度</label>
                                        <div>@weather.ReferenceTemperature°C</div>
                                    </div>
                                </div>
                            }
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">狀態</label>
                                    <div>
                                        @if (weather.Status == Data.Enums.EntityStatus.Active)
                                        {
                                            <span class="badge bg-success">啟用</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">停用</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(weather.Description))
                            {
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">描述</label>
                                        <div>@weather.Description</div>
                                    </div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(weather.Remarks))
                            {
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">備註</label>
                                        <div>@weather.Remarks</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- 系統資訊 -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-gear me-2"></i>系統資訊
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">建立日期</label>
                                    <div>@weather.CreatedAt.ToString("yyyy/MM/dd HH:mm")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">建立者</label>
                                    <div>@(weather.CreatedBy ?? "-")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">最後更新</label>
                                    <div>@(weather.UpdatedAt?.ToString("yyyy/MM/dd HH:mm") ?? "-")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">更新者</label>
                                    <div>@(weather.UpdatedBy ?? "-")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int WeatherId { get; set; }

    private Weather? weather;
    private bool isLoading = true;
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new();

    protected override async Task OnInitializedAsync()
    {
        InitializeBreadcrumb();
        await LoadWeatherData();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (WeatherId > 0)
        {
            await LoadWeatherData();
        }
    }

    private void InitializeBreadcrumb()
    {
        breadcrumbItems = new List<GenericHeaderComponent.BreadcrumbItem>
        {
            new() { Text = "首頁", Href = "/" },
            new() { Text = "BOM 基礎資料", Href = "/BOMFoundation" },
            new() { Text = "天氣管理", Href = "/BOMFoundation/weather" },
            new() { Text = "天氣詳情" }
        };
    }

    private async Task LoadWeatherData()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            weather = await WeatherService.GetByIdAsync(WeatherId);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "載入天氣資料失敗：", ex.Message);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task ToggleStatusAsync()
    {
        if (weather == null) return;

        try
        {
            var result = await WeatherService.ToggleStatusAsync(weather.Id);
            if (result.IsSuccess)
            {
                weather.Status = weather.Status == Data.Enums.EntityStatus.Active 
                    ? Data.Enums.EntityStatus.Inactive 
                    : Data.Enums.EntityStatus.Active;
                    
                StateHasChanged();

                var statusText = weather.Status == Data.Enums.EntityStatus.Active ? "啟用" : "停用";
                await JSRuntime.InvokeVoidAsync("showToast", $"天氣已{statusText}", "success");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("showToast", $"狀態更新失敗：{result.ErrorMessage}", "error");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("showToast", $"狀態更新失敗：{ex.Message}", "error");
        }
    }

    private async Task DeleteAsync()
    {
        if (weather == null) return;

        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "確定要刪除這個天氣資料嗎？此操作無法復原。");
        if (!confirmed) return;

        try
        {
            await WeatherService.DeleteAsync(weather.Id);
            await JSRuntime.InvokeVoidAsync("showToast", "天氣已刪除", "success");
            Navigation.NavigateTo("/BOMFoundation/weather");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("showToast", $"刪除失敗：{ex.Message}", "error");
        }
    }

    private void BackToWeatherList()
    {
        Navigation.NavigateTo("/BOMFoundation/weather");
    }
}
