@page "/BOMFoundation/colors/detail/{colorId:int}"
@page "/colors/detail/{colorId:int}"
@using ERPCore2.Components.Shared
@using ERPCore2.Components.Shared.Details
@using ERPCore2.Components.Shared.Badges
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Data.Entities
@using ERPCore2.Data.Enums
@inject IColorService ColorService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>顏色詳細資料</PageTitle>

<GenericDetailPageComponent TEntity="Color" 
                           TService="IColorService"
                           EntityId="@ColorId"
                           Entity="@color"
                           Service="@ColorService"
                           EntityName="顏色"
                           EntityNamePlural="顏色"
                           IndexRoute="/BOMFoundation/colors"
                           EditRoute="/BOMFoundation/colors/edit"
                           LoadingText="載入顏色資料中..."
                           BreadcrumbItems="@breadcrumbItems"
                           DataLoader="@LoadColorDataAsync"
                           AdditionalDataLoader="@LoadAdditionalDataAsync"
                           EntityTitleSelector="@(c => c.Name)"
                           EntitySubtitleSelector="@(c => $"顏色代碼：{c.Code ?? "未設定"}")"
                           EntityDisplayNameSelector="@(c => c.Name)"
                           OnDataLoaded="@OnColorDataLoaded"
                           UseTabLayout="true"
                           TabSections="@GetTabSections()">
</GenericDetailPageComponent>

@code {
    [Parameter] public int ColorId { get; set; }

    private Color? color;
    private bool _isLoading = false;

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("BOM 基礎資料", "/BOMFoundation"),
        new("顏色管理", "/BOMFoundation/colors"),
        new("顏色詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<Color?> LoadColorDataAsync()
    {
        if (_isLoading)
        {
            Console.WriteLine("[ColorDetail] 載入中，跳過重複調用");
            return color;
        }
        
        try
        {
            _isLoading = true;
            if (ColorId <= 0) return null;
            
            var result = await ColorService.GetByIdAsync(ColorId);
            color = result;
            return result;
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"[ColorDetail] 載入顏色資料失敗：{ex.Message}");
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private Task LoadAdditionalDataAsync()
    {
        return Task.CompletedTask;
    }

    private Task OnColorDataLoaded()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }    // 設定標籤頁結構
    private List<GenericDetailPageComponent<Color, IColorService>.TabSection> GetTabSections()
    {
        return new List<GenericDetailPageComponent<Color, IColorService>.TabSection>
        {
            new GenericDetailPageComponent<Color, IColorService>.TabSection
            {
                Id = "basic",
                Title = "基本資料",
                Content = @<div class="row">
                    <DetailFieldComponent Label="顏色代碼" Value="@color?.Code" IsPrimary="true" EmptyText="未設定" />
                    <DetailFieldComponent Label="顏色名稱" Value="@color?.Name" IsBold="true" />
                    <DetailFieldComponent Label="狀態">
                        @if (color?.Status != null)
                        {
                            <StatusBadgeComponent Status="@color.Status" />
                        }
                    </DetailFieldComponent>
                    @if (!string.IsNullOrEmpty(color?.Description))
                    {
                        <DetailFieldComponent Label="描述" Value="@color.Description" ColSize="12" />
                    }
                    @if (!string.IsNullOrEmpty(color?.Remarks))
                    {
                        <DetailFieldComponent Label="備註" Value="@color.Remarks" ColSize="12" />
                    }
                </div>
            },
              new GenericDetailPageComponent<Color, IColorService>.TabSection
            {
                Id = "system",
                Title = "系統資訊",
                Content = @<div>
                    <SystemInfoDisplayComponent 
                        CreatedAt="@(color?.CreatedAt ?? DateTime.MinValue)"
                        UpdatedAt="@color?.UpdatedAt"
                        CreatedBy="@color?.CreatedBy"
                        UpdatedBy="@color?.UpdatedBy"
                        Remarks="@color?.Remarks"
                        ShowTimeline="true"
                        ShowRemarks="true" />
                </div>
            }
        };
    }
}
