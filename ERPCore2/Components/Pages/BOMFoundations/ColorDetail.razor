@page "/BOMFoundation/colors/detail/{colorId:int}"
@page "/colors/detail/{colorId:int}"
@inject IColorService ColorService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@using ERPCore2.Components.Shared.Alerts
@rendermode InteractiveServer

@* 顯示警告訊息 *@
<AlertComponent 
    Message="@alertMessage" 
    Type="@alertType" 
    IsVisible="@showAlert" 
    IsDismissible="true"
    OnDismiss="@(() => showAlert = false)" />

@if (isLoading)
{
    <div class="d-flex justify-content-center align-items-center" style="min-height: 400px;">
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">載入中...</span>
            </div>
            <div class="mt-2">載入顏色資料中...</div>
        </div>
    </div>
}
else if (color == null)
{
    <div class="alert alert-warning">
        <h4>找不到顏色資料</h4>
        <p>指定的顏色不存在或已被刪除。</p>
        <button class="btn btn-primary" @onclick="BackToColorList">
            返回顏色列表
        </button>
    </div>
}
else
{
    <GenericHeaderComponent Title="@color.Name" 
                          Subtitle="@($"顏色代碼：{color.Code}")"
                          Icon="bi bi-palette"
                          BreadcrumbItems="@breadcrumbItems">        
                          <ActionButtons>
            <DetailActionButtonsComponent 
                EntityStatus="@color?.Status"
                IsLoading="@isLoading"
                EntityName="顏色"
                EntityId="@ColorId.ToString()"
                EntityDisplayName="@color?.Name"
                EntityService="@ColorService"
                ListRoute="/BOMFoundation/colors"
                EditRoute="/BOMFoundation/colors/edit"
                OnShowAlert="@((tuple) => ShowAlert(tuple.message, Enum.Parse<AlertComponent.AlertType>(tuple.type, true)))"
                OnReloadData="@LoadColorData"/>
        </ActionButtons>
    </GenericHeaderComponent>

    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <!-- 基本資訊 -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle me-2"></i>基本資訊
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">顏色代碼</label>
                                    <div>@color.Code</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">顏色名稱</label>
                                    <div class="fw-bold">@color.Name</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">狀態</label>
                                    <div>
                                        @if (color.Status == Data.Enums.EntityStatus.Active)
                                        {
                                            <span class="badge bg-success">啟用</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">停用</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(color.Description))
                            {
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">描述</label>
                                        <div>@color.Description</div>
                                    </div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(color.Remarks))
                            {
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">備註</label>
                                        <div>@color.Remarks</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- 顏色資訊 -->
                @if (!string.IsNullOrEmpty(color.HexCode) || (color.RedValue.HasValue || color.GreenValue.HasValue || color.BlueValue.HasValue))
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-palette me-2"></i>顏色資訊
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                @if (!string.IsNullOrEmpty(color.HexCode))
                                {
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label text-muted">十六進位色碼</label>
                                            <div class="d-flex align-items-center">
                                                <span class="me-2">@color.HexCode</span>
                                                <div style="width: 30px; height: 30px; background-color: @color.HexCode; border: 1px solid #ddd; border-radius: 4px;"></div>
                                            </div>
                                        </div>
                                    </div>
                                }
                                @if (color.RedValue.HasValue || color.GreenValue.HasValue || color.BlueValue.HasValue)
                                {
                                    <div class="col-md-6">
                                        <div class="mb-3">
                                            <label class="form-label text-muted">RGB 值</label>
                                            <div>
                                                R: @(color.RedValue ?? 0), 
                                                G: @(color.GreenValue ?? 0), 
                                                B: @(color.BlueValue ?? 0)
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }

                <!-- 系統資訊 -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-gear me-2"></i>系統資訊
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">建立日期</label>
                                    <div>@color.CreatedAt.ToString("yyyy/MM/dd HH:mm")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">建立者</label>
                                    <div>@(color.CreatedBy ?? "-")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">最後更新</label>
                                    <div>@(color.UpdatedAt?.ToString("yyyy/MM/dd HH:mm") ?? "-")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">更新者</label>
                                    <div>@(color.UpdatedBy ?? "-")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int ColorId { get; set; }

    private Color? color;
    private bool isLoading = true;
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new();

    // Alert 相關變數
    private bool showAlert = false;
    private string alertMessage = string.Empty;
    private AlertComponent.AlertType alertType = AlertComponent.AlertType.Info;

    protected override async Task OnInitializedAsync()
    {
        InitializeBreadcrumb();
        await LoadColorData();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (ColorId > 0)
        {
            await LoadColorData();
        }
    }

    private void InitializeBreadcrumb()
    {
        breadcrumbItems = new List<GenericHeaderComponent.BreadcrumbItem>
        {
            new() { Text = "首頁", Href = "/" },
            new() { Text = "BOM 基礎資料", Href = "/BOMFoundation" },
            new() { Text = "顏色管理", Href = "/BOMFoundation/colors" },
            new() { Text = "顏色詳情" }
        };
    }

    private async Task LoadColorData()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            color = await ColorService.GetByIdAsync(ColorId);
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "載入顏色資料失敗：", ex.Message);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void BackToColorList()
    {
        Navigation.NavigateTo("/BOMFoundation/colors");
    }

    private void ShowAlert(string message, AlertComponent.AlertType type)
    {
        alertMessage = message;
        alertType = type;
        showAlert = true;
        StateHasChanged();
    }
}
