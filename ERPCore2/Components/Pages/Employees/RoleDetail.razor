@page "/roles/detail/{roleId:int}"
@inject IRoleService RoleService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>角色詳細資料</PageTitle>

<GenericDetailPageComponent TEntity="Role" 
                           TService="IRoleService"
                           EntityId="@RoleId"
                           Entity="@role"
                           Service="@RoleService"
                           EntityName="角色"
                           EntityNamePlural="角色"
                           IndexRoute="/roles"
                           EditRoute="/roles/edit"
                           LoadingText="載入角色資料中..."
                           BreadcrumbItems="@breadcrumbItems"
                           DataLoader="@LoadRoleDataAsync"
                           AdditionalDataLoader="@LoadAdditionalDataAsync"
                           EntityTitleSelector="@(r => r.RoleName)"
                           EntitySubtitleSelector="@(r => $"權限數量：{r.RolePermissions?.Count ?? 0} 個")"
                           EntityDisplayNameSelector="@(r => r.RoleName)"
                           OnDataLoaded="@OnRoleDataLoaded"
                           UseTabLayout="true"
                           TabSections="@GetTabSections()">
</GenericDetailPageComponent>

@code {
    [Parameter] public int RoleId { get; set; }

    private Role? role;
    private bool _isLoading = false; // 防止重複載入

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("基礎資料", "#"),
        new("角色維護", "/roles"),
        new("角色詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<Role?> LoadRoleDataAsync()
    {
        // 防止重複載入
        if (_isLoading)
        {
            Console.WriteLine("[RoleDetail] 載入中，跳過重複調用");
            return role;
        }
        
        try
        {
            _isLoading = true;
            if (RoleId <= 0) return null;
            var result = await RoleService.GetByIdAsync(RoleId);
            role = result; // 保持本地變數同步
            
            return result;
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"[RoleDetail] 載入角色資料失敗：{ex.Message}");
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }
    
    private Task LoadAdditionalDataAsync()
    {
        // 由於GetByIdAsync已經Include所有關聯資料，這裡不需要額外查詢
        return Task.CompletedTask;
    }

    private Task OnRoleDataLoaded()
    {
        // 資料載入完成後的處理
        StateHasChanged();
        return Task.CompletedTask;
    }

    // 設定標籤頁結構
    private List<GenericDetailPageComponent<Role, IRoleService>.TabSection> GetTabSections()
    {
        return new List<GenericDetailPageComponent<Role, IRoleService>.TabSection>
        {
            new GenericDetailPageComponent<Role, IRoleService>.TabSection
            {
                Id = "basic",
                Title = "基本資料",
                Content = @<div class="row">
                    <DetailFieldComponent Label="角色名稱" Value="@role?.RoleName" IsPrimary="true" IsBold="true" />
                    <DetailFieldComponent Label="角色描述" Value="@role?.Description" EmptyText="無描述" ColSize="12" />
                    <DetailFieldComponent Label="系統角色">
                        @if (role?.IsSystemRole == true)
                        {
                            <span class="badge bg-primary">系統角色</span>
                        }
                        else
                        {
                            <span class="badge bg-secondary">自訂角色</span>
                        }
                    </DetailFieldComponent>
                    <DetailFieldComponent Label="員工數量" Value="@(role?.Employees?.Count.ToString() ?? "0")" />
                </div>
            },            new GenericDetailPageComponent<Role, IRoleService>.TabSection
            {
                Id = "permissions",
                Title = "權限設定",
                Content = @<div>
                    <RolePermissionDisplayComponent RolePermissions="@role?.RolePermissions" />
                </div>
            },
            
            new GenericDetailPageComponent<Role, IRoleService>.TabSection
            {
                Id = "employees",
                Title = "使用員工",
                Content = @<div>
                    @if (role?.Employees?.Any() == true)
                    {
                        <div class="row">
                            @foreach (var employee in role.Employees.OrderBy(e => e.FirstName ?? e.LastName))
                            {
                                <div class="col-md-6 mb-3">
                                    <div class="card">
                                        <div class="card-body">                                            <h6 class="card-title">
                                                <i class="fas fa-user text-success me-2"></i>
                                                @($"{employee.FirstName} {employee.LastName}".Trim())
                                            </h6>
                                            <p class="card-text">
                                                <small class="text-muted">員工編號：@employee.EmployeeCode</small>
                                            </p>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-muted p-3 text-center">
                            <i class="fas fa-users fa-2x mb-2 d-block"></i>
                            尚無員工使用此角色
                        </div>
                    }
                </div>
            },

            new GenericDetailPageComponent<Role, IRoleService>.TabSection
            {
                Id = "system",
                Title = "系統資訊",
                Content = @<div class="row">
                    <DetailFieldComponent Label="建立時間" Value="@role?.CreatedAt.ToString("yyyy/MM/dd HH:mm")" />
                    <DetailFieldComponent Label="建立者" Value="@role?.CreatedBy" EmptyText="系統" />
                    @if (role?.UpdatedAt.HasValue == true)
                    {
                        <DetailFieldComponent Label="更新時間" Value="@role.UpdatedAt.Value.ToString("yyyy/MM/dd HH:mm")" />
                        <DetailFieldComponent Label="更新者" Value="@role?.UpdatedBy" EmptyText="系統" />
                    }
                </div>
            }        };
    }
}
