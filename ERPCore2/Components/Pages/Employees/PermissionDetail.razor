@page "/permissions/detail/{permissionId:int}"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]
@using ERPCore2.Helpers
@inject IPermissionManagementService PermissionService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PagePermissionCheck RequiredPermission="Permission.Read">
    <GenericDetailPageComponent TEntity="Permission" 
                            TService="IPermissionManagementService"
                            EntityId="@PermissionId"
                            Entity="@permission"
                            Service="@PermissionService"
                            EntityName="權限"
                            EntityNamePlural="權限"
                            IndexRoute="/permissions"
                            EditRoute="/permissions/edit"
                            LoadingText="載入權限資料中..."
                            BreadcrumbItems="@breadcrumbItems"
                            DataLoader="@LoadPermissionDataAsync"
                            AdditionalDataLoader="@LoadAdditionalDataAsync"
                            EntityTitleSelector="@(p => p.PermissionName)"
                            EntitySubtitleSelector="@(p => $"代碼：{p.PermissionCode}")"
                            EntityDisplayNameSelector="@(p => p.PermissionName)"
                            OnDataLoaded="@OnPermissionDataLoaded"
                            UseTabLayout="true"
                            TabSections="@GetTabSections()">
    </GenericDetailPageComponent>
</PagePermissionCheck>

@code {
    [Parameter] public int PermissionId { get; set; }

    private Permission? permission;
    private bool _isLoading = false; // 防止重複載入

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("基礎資料", "#"),
        new("權限維護", "/permissions"),
        new("權限詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<Permission?> LoadPermissionDataAsync()
    {
        // 防止重複載入
        if (_isLoading)
        {
            return permission;
        }
        
        try
        {
            _isLoading = true;
            if (PermissionId <= 0) return null;
            var result = await PermissionService.GetByIdAsync(PermissionId);
            permission = result; // 保持本地變數同步
            
            return result;
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(LoadPermissionDataAsync), GetType(),
                additionalData: new { PermissionId = PermissionId });
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }
    
    private Task LoadAdditionalDataAsync()
    {
        try
        {
            // 由於GetByIdAsync已經Include所有關聯資料，這裡不需要額外查詢
            return Task.CompletedTask;
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(LoadAdditionalDataAsync), GetType(),
                additionalData: new { PermissionId = PermissionId });
            throw;
        }
    }

    private Task OnPermissionDataLoaded()
    {
        try
        {
            // 資料載入完成後的處理
            StateHasChanged();
            return Task.CompletedTask;
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(OnPermissionDataLoaded), GetType(),
                additionalData: new { PermissionId = PermissionId });
            throw;
        }
    }

    // 設定標籤頁結構
    private List<GenericDetailPageComponent<Permission, IPermissionManagementService>.TabSection> GetTabSections()
    {
        try
        {
            return new List<GenericDetailPageComponent<Permission, IPermissionManagementService>.TabSection>
            {
                new GenericDetailPageComponent<Permission, IPermissionManagementService>.TabSection
                {
                    Id = "basic",
                    Title = "基本資料",
                    Content = @<div>
                        <BasicInfoDisplayComponent 
                            Title="權限基本資訊"
                            IconClass="fas fa-key"
                            IconColor="text-primary"
                            Fields="@GetPermissionBasicFields()"
                            ShowFieldCount="false" />
                    </div>
                },

                new GenericDetailPageComponent<Permission, IPermissionManagementService>.TabSection
                {
                    Id = "roles",
                    Title = "使用角色",
                    Content = @<div>
                        @if (permission?.RolePermissions?.Any() == true)
                        {
                            <div class="row">
                                @foreach (var rolePermission in permission.RolePermissions.OrderBy(rp => rp.Role.RoleName))
                                {
                                    <div class="col-md-6 mb-3">
                                        <div class="card">
                                            <div class="card-body">
                                                <h6 class="card-title">
                                                    <i class="fas fa-user-tag text-primary me-2"></i>
                                                    @rolePermission.Role.RoleName
                                                </h6>
                                                <p class="card-text">
                                                    @if (!string.IsNullOrEmpty(rolePermission.Role.Description))
                                                    {
                                                        <small class="text-muted">@rolePermission.Role.Description</small>
                                                    }
                                                    else
                                                    {
                                                        <small class="text-muted">無描述</small>
                                                    }
                                                </p>
                                                @if (rolePermission.Role.IsSystemRole)
                                                {
                                                    <span class="badge bg-primary">系統角色</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">自訂角色</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div class="text-muted p-3 text-center">
                                <i class="fas fa-user-tag fa-2x mb-2 d-block"></i>
                                尚無角色使用此權限
                            </div>
                        }
                    </div>
                },
                
                new GenericDetailPageComponent<Permission, IPermissionManagementService>.TabSection
                {
                    Id = "system",
                    Title = "系統資訊",
                    Content = @<div>
                        <SystemInfoDisplayComponent 
                            CreatedAt="@(permission?.CreatedAt ?? DateTime.MinValue)"
                            UpdatedAt="@permission?.UpdatedAt"
                            CreatedBy="@permission?.CreatedBy"
                            UpdatedBy="@permission?.UpdatedBy"
                            Remarks="@permission?.Remarks"
                            ShowTimeline="true"
                            ShowRemarks="true" />
                    </div>
                }
            };
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(GetTabSections), GetType(),
                additionalData: new { PermissionId = PermissionId });
            return new List<GenericDetailPageComponent<Permission, IPermissionManagementService>.TabSection>();
        }
    }

    // 取得權限基本資料欄位
    private IEnumerable<BasicInfoDisplayComponent.BasicInfoField> GetPermissionBasicFields()
    {
        try
        {
            return new List<BasicInfoDisplayComponent.BasicInfoField>
            {
                new()
                {
                    Label = "權限代碼",
                    Value = permission?.PermissionCode,
                    IsPrimary = true,
                    ValueBold = true,
                    IconClass = "fas fa-key",
                    IconBgClass = "bg-primary bg-opacity-10",
                    IconTextClass = "text-primary"
                },
                new()
                {
                    Label = "權限名稱",
                    Value = permission?.PermissionName,
                    ValueBold = true,
                    IconClass = "fas fa-tag",
                    IconBgClass = "bg-info bg-opacity-10",
                    IconTextClass = "text-info"
                },
                new()
                {
                    Label = "模組",
                    Value = permission?.Module,
                    IconClass = "fas fa-cube",
                    IconBgClass = "bg-success bg-opacity-10",
                    IconTextClass = "text-success"
                },
                new()
                {
                    Label = "動作",
                    Value = permission?.Action,
                    IconClass = "fas fa-cog",
                    IconBgClass = "bg-warning bg-opacity-10",
                    IconTextClass = "text-warning"
                },
                new()
                {
                    Label = "權限群組",
                    Value = permission?.PermissionGroup,
                    EmptyText = "未分組",
                    IconClass = "fas fa-layer-group",
                    IconBgClass = "bg-secondary bg-opacity-10",
                    IconTextClass = "text-secondary",
                    ColSize = 12
                }
            };
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(GetPermissionBasicFields), GetType(),
                additionalData: new { PermissionId = PermissionId });
            return new List<BasicInfoDisplayComponent.BasicInfoField>();
        }
    }
}
