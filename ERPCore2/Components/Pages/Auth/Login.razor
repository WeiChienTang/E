@page "/auth/login"
@page "/login"
@layout AuthLayout
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using System.Security.Claims
@using System.ComponentModel.DataAnnotations
@inject NavigationManager Navigation
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>登入 - 美莊磚業</PageTitle>

<div class="min-vh-100 d-flex align-items-center justify-content-center bg-light">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-md-6 col-lg-4">
                <div class="card shadow-lg border-0">
                    <div class="card-body p-5">
                        <!-- 公司 Logo 和標題 -->
                        <div class="text-center mb-4">
                            <h2 class="h3 text-primary fw-bold">美莊磚業</h2>
                            <p class="text-muted">企業資源管理系統</p>
                        </div>

                        <!-- 登入表單 -->
                        <form method="post" action="/auth/signin">
                            @if (!string.IsNullOrEmpty(errorMessage))
                            {
                                <div class="alert alert-danger" role="alert">
                                    <i class="bi bi-exclamation-triangle me-2"></i>
                                    @errorMessage
                                </div>
                            }
                            
                            <div class="mb-3">
                                <label for="account" class="form-label">
                                    <i class="bi bi-person me-1"></i>帳號
                                </label>
                                <input type="text" name="account" class="form-control form-control-lg" 
                                       id="account" placeholder="請輸入帳號" autocomplete="username" required />
                            </div>

                            <div class="mb-3">
                                <label for="password" class="form-label">
                                    <i class="bi bi-lock me-1"></i>密碼
                                </label>
                                <input type="password" name="password" class="form-control form-control-lg" 
                                       id="password" placeholder="請輸入密碼" autocomplete="current-password" required />
                            </div>

                            <div class="mb-3 form-check">
                                <!-- 修復記住我功能：確保 checkbox 值能正確傳送 -->
                                <input type="hidden" name="rememberMe" value="false" />
                                <input type="checkbox" name="rememberMe" value="true" class="form-check-input" 
                                       id="rememberMe" onchange="saveRememberMeState(this.checked)" 
                                       @(ShouldCheckRememberMe() ? "checked" : "") />
                                <label class="form-check-label" for="rememberMe">
                                    記住我
                                </label>
                            </div>

                            <input type="hidden" name="returnUrl" value="@(ReturnUrl ?? "/")" />

                            <!-- 登入按鈕 -->
                            <div class="d-grid">
                                <button type="submit" class="btn btn-primary btn-lg">
                                    <i class="bi bi-box-arrow-in-right me-2"></i>
                                    <span>登入</span>
                                </button>
                            </div>
                        </form>

                        <!-- 版權資訊 -->
                        <div class="text-center mt-4">
                            <small class="text-muted">
                                © @DateTime.Now.Year 美莊磚業. All rights reserved.
                            </small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private string errorMessage = string.Empty;

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    [SupplyParameterFromQuery]
    private string? Error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // 檢查是否已經登入
        var httpContext = HttpContextAccessor.HttpContext;
        if (httpContext?.User?.Identity?.IsAuthenticated == true)
        {
            // 記錄已登入用戶資訊以便調試
            var userName = httpContext.User.Identity.Name;
            var userId = httpContext.User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
            
            Navigation.NavigateTo(ReturnUrl ?? "/", true);
            return;
        }
        else
        {
            // 記錄未認證狀態以便調試
        }

        // 從查詢參數顯示錯誤訊息
        if (!string.IsNullOrEmpty(Error))
        {
            errorMessage = Error switch
            {
                "invalid" => "使用者名稱或密碼錯誤",
                "locked" => "帳號已被鎖定，請聯絡管理員",
                "disabled" => "帳號已停用",
                _ => "登入失敗，請稍後再試"
            };
        }
        
        await Task.CompletedTask;
    }

    private bool ShouldCheckRememberMe()
    {
        // 在 Blazor Server 中，我們需要在伺服器端檢查記住我狀態
        // 這個方法會在頁面初始化時被調用
        return false; // JavaScript 會在客戶端處理實際的狀態
    }
}

<script>
    // 記住我功能的 JavaScript 函數
    function saveRememberMeState(isChecked) {
        localStorage.setItem('rememberMe', isChecked.toString());
        console.log('保存記住我狀態:', isChecked);
    }

    function loadRememberMeState() {
        const rememberMe = localStorage.getItem('rememberMe');
        const checkbox = document.getElementById('rememberMe');
        if (checkbox && rememberMe === 'true') {
            checkbox.checked = true;
            console.log('載入記住我狀態: true');
        } else {
            console.log('載入記住我狀態: false 或不存在');
        }
    }

    // 確保表單提交時記住我狀態正確
    function ensureRememberMeOnSubmit() {
        const form = document.querySelector('form[action="/auth/signin"]');
        if (form) {
            form.addEventListener('submit', function(e) {
                const checkbox = document.getElementById('rememberMe');
                const hiddenInput = document.querySelector('input[name="rememberMe"][type="hidden"]');
                
                console.log('表單提交 - Checkbox 狀態:', checkbox ? checkbox.checked : 'checkbox not found');
                console.log('表單提交 - Hidden input 存在:', !!hiddenInput);
                
                // 確保記住我狀態正確傳送
                if (checkbox && checkbox.checked) {
                    // 如果 checkbox 被勾選，我們需要確保值正確傳送
                    console.log('記住我已勾選，確保值正確傳送');
                    saveRememberMeState(true);
                } else {
                    console.log('記住我未勾選');
                    saveRememberMeState(false);
                }
            });
        }
    }

    // 使用多種方式確保在正確時機載入狀態
    function initializeRememberMe() {
        loadRememberMeState();
        ensureRememberMeOnSubmit();
    }

    if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initializeRememberMe);
    } else {
        initializeRememberMe();
    }

    // 額外的備用方案：使用 setTimeout 確保 DOM 元素已準備好
    setTimeout(initializeRememberMe, 100);
    setTimeout(initializeRememberMe, 500); // 再次確保
</script>
