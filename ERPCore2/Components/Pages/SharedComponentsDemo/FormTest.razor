@page "/form-test"
@using ERPCore2.Components.Shared.Forms

<h3>通用表單組件測試</h3>

<GenericFormComponent TModel="TestFormModel"
                     Model="@formModel"
                     FieldDefinitions="@fieldDefinitions"
                     FieldSections="@fieldSections"
                     FormTitle="客戶資料表單"
                     FormIconClass="fas fa-user"
                     OnFormSubmit="HandleFormSubmit"
                     OnCancel="HandleCancel"
                     IsSubmitting="@isSubmitting" />

<hr />

@if (submitResult != null)
{
    <div class="alert alert-success">
        <h4>提交成功！</h4>
        <pre>@submitResult</pre>
    </div>
}

@code {
    private TestFormModel formModel = new();
    private List<FormFieldDefinition> fieldDefinitions = new();
    private Dictionary<string, string> fieldSections = new();
    private bool isSubmitting = false;
    private string? submitResult;

    protected override void OnInitialized()
    {
        // 初始化表單模型
        formModel = new TestFormModel
        {
            Name = "測試客戶",
            Email = "test@example.com",
            IsActive = true,
            CreatedDate = DateTime.Today
        };

        // 建立欄位定義
        fieldDefinitions = new List<FormFieldDefinition>
        {
            new FormFieldDefinition
            {
                PropertyName = "Name",
                Label = "姓名",
                FieldType = FormFieldType.Text,
                IsRequired = true,
                Placeholder = "請輸入姓名"
            },
            new FormFieldDefinition
            {
                PropertyName = "Email",
                Label = "電子郵件",
                FieldType = FormFieldType.Email,
                IsRequired = true,
                Placeholder = "請輸入電子郵件"
            },
            new FormFieldDefinition
            {
                PropertyName = "Phone",
                Label = "電話",
                FieldType = FormFieldType.Text,
                Placeholder = "請輸入電話號碼"
            },
            new FormFieldDefinition
            {
                PropertyName = "Age",
                Label = "年齡",
                FieldType = FormFieldType.Number,
                Min = 0,
                Max = 120
            },
            new FormFieldDefinition
            {
                PropertyName = "CreatedDate",
                Label = "建立日期",
                FieldType = FormFieldType.Date,
                IsRequired = true
            },
            new FormFieldDefinition
            {
                PropertyName = "CustomerType",
                Label = "客戶類型",
                FieldType = FormFieldType.Select,
                Options = new List<SelectOption>
                {
                    new SelectOption { Value = "Individual", Text = "個人" },
                    new SelectOption { Value = "Company", Text = "公司" },
                    new SelectOption { Value = "Government", Text = "政府機關" }
                }
            },
            new FormFieldDefinition
            {
                PropertyName = "IsActive",
                Label = "啟用狀態",
                FieldType = FormFieldType.Checkbox
            },
            new FormFieldDefinition
            {
                PropertyName = "Description",
                Label = "描述",
                FieldType = FormFieldType.TextArea,
                Rows = 4,
                Placeholder = "請輸入客戶描述"
            }
        };

        // 設定欄位分組
        fieldSections = new Dictionary<string, string>
        {
            { "Name", "基本資料" },
            { "Email", "基本資料" },
            { "Phone", "基本資料" },
            { "Age", "基本資料" },
            { "CreatedDate", "系統資料" },
            { "CustomerType", "系統資料" },
            { "IsActive", "系統資料" },
            { "Description", "其他資料" }
        };
    }

    private async Task HandleFormSubmit(TestFormModel model)
    {
        isSubmitting = true;
        StateHasChanged();

        // 模擬提交延遲
        await Task.Delay(1000);

        submitResult = $@"表單提交成功！
姓名: {model.Name}
電子郵件: {model.Email}
電話: {model.Phone}
年齡: {model.Age}
建立日期: {model.CreatedDate:yyyy-MM-dd}
客戶類型: {model.CustomerType}
啟用狀態: {(model.IsActive ? "是" : "否")}
描述: {model.Description}";

        isSubmitting = false;
        StateHasChanged();
    }

    private async Task HandleCancel()
    {
        submitResult = null;
        formModel = new TestFormModel();
        StateHasChanged();
        await Task.CompletedTask;
    }

    public class TestFormModel
    {
        public string Name { get; set; } = string.Empty;
        public string Email { get; set; } = string.Empty;
        public string? Phone { get; set; }
        public int? Age { get; set; }
        public DateTime CreatedDate { get; set; } = DateTime.Today;
        public string? CustomerType { get; set; }
        public bool IsActive { get; set; } = true;
        public string? Description { get; set; }
    }
}
