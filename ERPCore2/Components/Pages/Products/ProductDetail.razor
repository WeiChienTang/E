@page "/products/detail/{productId:int}"
@using ERPCore2.Components.Shared
@using ERPCore2.Components.Shared.Details
@using ERPCore2.Components.Shared.Badges
@using ERPCore2.Data.Entities
@using ERPCore2.Services
@using ERPCore2.Components.Shared.Headers
@inject IProductService ProductService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>產品詳細資料</PageTitle>

<GenericDetailPageComponent TEntity="Product" 
                           TService="IProductService"
                           EntityId="@ProductId"
                           Entity="@product"
                           Service="@ProductService"
                           EntityName="產品"
                           EntityNamePlural="產品"
                           PageIcon="box"
                           IndexRoute="/products"
                           EditRoute="/products/edit"
                           LoadingText="載入產品資料中..."
                           BreadcrumbItems="@breadcrumbItems"
                           DataLoader="@LoadProductDataAsync"
                           AdditionalDataLoader="@LoadAdditionalDataAsync"
                           EntityTitleSelector="@(p => p.ProductName)"
                           EntitySubtitleSelector="@GetProductSubtitle"
                           EntityDisplayNameSelector="@(p => p.ProductName)"
                           OnDataLoaded="@OnProductDataLoaded"
                           UseGenericDetails="false">
    <CustomDetailContent>
        @* 基本資料 *@
        <DetailCardComponent Title="基本資料" Icon="box">
            <div class="row">
                <DetailFieldComponent Label="產品名稱" Value="@product?.ProductName" IsBold="true" />
                <DetailFieldComponent Label="產品編號" Value="@product?.ProductCode" IsPrimary="true" />
                <DetailFieldComponent Label="分類" Value="-" />
                <DetailFieldComponent Label="單位" Value="@GetUnitName()" />
                <DetailFieldComponent Label="狀態">
                    <ChildContent>
                        @if (product?.Status == Data.Enums.EntityStatus.Active)
                        {
                            <StatusBadgeComponent Status="Data.Enums.EntityStatus.Active" />
                        }
                        else
                        {
                            <StatusBadgeComponent Status="Data.Enums.EntityStatus.Inactive" />
                        }
                    </ChildContent>
                </DetailFieldComponent>
                @if (!string.IsNullOrEmpty(product?.Description))
                {
                    <DetailFieldComponent Label="描述" Value="@product.Description" ColSize="12" />
                }
                @if (!string.IsNullOrEmpty(product?.Remarks))
                {
                    <DetailFieldComponent Label="備註" Value="@product.Remarks" ColSize="12" />
                }
            </div>
        </DetailCardComponent>

        @* 規格資訊 *@
        <DetailCardComponent Title="規格資訊" Icon="gear">
            <div class="row">
                <DetailFieldComponent Label="重量" Value="@(product?.Weight?.ToString("F2") + " kg" ?? "-")" />
                <DetailFieldComponent Label="長度" Value="@(product?.Length?.ToString("F2") + " cm" ?? "-")" />
                <DetailFieldComponent Label="寬度" Value="@(product?.Width?.ToString("F2") + " cm" ?? "-")" />
                <DetailFieldComponent Label="高度" Value="@(product?.Height?.ToString("F2") + " cm" ?? "-")" />
                <DetailFieldComponent Label="最小庫存" Value="@(product?.MinStockLevel?.ToString() ?? "-")" />
                <DetailFieldComponent Label="最大庫存" Value="@(product?.MaxStockLevel?.ToString() ?? "-")" />
            </div>
        </DetailCardComponent>

        @* 供應商資訊 *@
        <DetailCardComponent Title="供應商資訊" Icon="truck">
            <div class="row">
                <DetailFieldComponent Label="主要供應商" Value="@(product?.MainSupplier?.CompanyName ?? "-")" />
                <DetailFieldComponent Label="供應商產品編號" Value="@(product?.SupplierProductCode ?? "-")" />
                <DetailFieldComponent Label="採購價格" Value="@(product?.PurchasePrice?.ToString("C") ?? "-")" />
                <DetailFieldComponent Label="銷售價格" Value="@(product?.SalePrice?.ToString("C") ?? "-")" />
            </div>
        </DetailCardComponent>
    </CustomDetailContent>
</GenericDetailPageComponent>

@code {
    [Parameter] public int ProductId { get; set; }

    private Product? product;
    private List<HeaderComponent.BreadcrumbItem> breadcrumbItems = new();
    private bool _isLoading = false;

    private async Task LoadProductDataAsync()
    {
        if (_isLoading) return;
        _isLoading = true;

        try
        {
            product = await ProductService.GetByIdAsync(ProductId);
            
            // 設定麵包屑
            breadcrumbItems = new List<HeaderComponent.BreadcrumbItem>
            {
                new() { Text = "首頁", Link = "/" },
                new() { Text = "產品管理", Link = "/products" },
                new() { Text = "產品詳細資料", IsActive = true }
            };
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task LoadAdditionalDataAsync()
    {
        // 產品的額外資料已經在 GetByIdAsync 中載入
        await Task.CompletedTask;
    }

    private void OnProductDataLoaded()
    {
        StateHasChanged();
    }

    private Func<Product, string> GetProductSubtitle => p => 
        $"產品編號：{p.ProductCode ?? "未設定"}";

    private string GetUnitName()
    {
        return product?.Unit?.UnitName ?? "-";
    }
}
