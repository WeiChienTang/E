@page "/warehouses/detail/{id:int}"
@page "/inventory/warehouses/detail/{id:int}"
@using ERPCore2.Data.Entities
@using ERPCore2.Services
@using Microsoft.AspNetCore.Components
@inject IWarehouseService WarehouseService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

@if (isLoading)
{
    <div class="d-flex justify-content-center align-items-center" style="min-height: 400px;">
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">載入中...</span>
            </div>
            <div class="mt-2">載入倉庫資料中...</div>
        </div>
    </div>
}
else if (warehouse == null)
{
    <div class="alert alert-warning">
        <h4>找不到倉庫資料</h4>
        <p>指定的倉庫不存在或已被刪除。</p>
        <button class="btn btn-primary" @onclick="BackToWarehouseList">
            返回倉庫列表
        </button>
    </div>
}
else
{
    <GenericHeaderComponent Title="@warehouse.WarehouseName" 
                          Subtitle="@($"倉庫代碼：{warehouse.WarehouseCode}")"
                          Icon="bi bi-building"
                          BreadcrumbItems="@breadcrumbItems">        <ActionButtons>
            <DetailActionButtonsComponent 
                EntityStatus="@warehouse?.Status"
                IsLoading="@isLoading"
                OnEditClick="@(() => Navigation.NavigateTo($"/warehouses/edit/{warehouse?.Id}"))"
                OnToggleStatusClick="@ToggleStatusAsync"
                OnDeleteClick="@DeleteAsync"
                OnBackClick="@BackToWarehouseList"
                ShowPrintButton="false"
                DeactivateButtonText="停用"
                ActivateButtonText="啟用"
                DeleteButtonText="刪除"
                BackButtonText="返回" />
        </ActionButtons>
    </GenericHeaderComponent>

    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <!-- 基本資訊 -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-info-circle me-2"></i>基本資訊
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">倉庫代碼</label>
                                    <div>@warehouse.WarehouseCode</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">倉庫名稱</label>
                                    <div class="fw-bold">@warehouse.WarehouseName</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">倉庫類型</label>
                                    <div>@GetWarehouseTypeText(warehouse.WarehouseType)</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">是否為預設</label>
                                    <div>
                                        @if (warehouse.IsDefault)
                                        {
                                            <span class="badge bg-primary">是</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-secondary">否</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(warehouse.ContactPerson))
                            {
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">聯絡人</label>
                                        <div>@warehouse.ContactPerson</div>
                                    </div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(warehouse.Phone))
                            {
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">聯絡電話</label>
                                        <div>@warehouse.Phone</div>
                                    </div>
                                </div>
                            }
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">狀態</label>
                                    <div>
                                        @if (warehouse.Status == Data.Enums.EntityStatus.Active)
                                        {
                                            <span class="badge bg-success">啟用</span>
                                        }
                                        else
                                        {
                                            <span class="badge bg-danger">停用</span>
                                        }
                                    </div>
                                </div>
                            </div>
                            @if (!string.IsNullOrEmpty(warehouse.Address))
                            {
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">地址</label>
                                        <div>@warehouse.Address</div>
                                    </div>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(warehouse.Remarks))
                            {
                                <div class="col-12">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">備註</label>
                                        <div>@warehouse.Remarks</div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>

                <!-- 倉庫位置 -->
                @if (warehouseLocations.Any())
                {
                    <div class="card mb-4">
                        <div class="card-header">
                            <h5 class="card-title mb-0">
                                <i class="bi bi-geo-alt me-2"></i>倉庫位置
                            </h5>
                        </div>
                        <div class="card-body">
                            <div class="table-responsive">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>位置代碼</th>
                                            <th>位置名稱</th>                                            <th>區域</th>
                                            <th>排</th>
                                            <th>層</th>
                                            <th>位</th>
                                            <th>狀態</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var location in warehouseLocations)
                                        {
                                            <tr>
                                                <td>@location.LocationCode</td>
                                                <td>@location.LocationName</td>                                                <td>@(location.Zone ?? "-")</td>
                                                <td>@(location.Aisle ?? "-")</td>
                                                <td>@(location.Level ?? "-")</td>
                                                <td>@(location.Position ?? "-")</td>
                                                <td>
                                                    @if (location.Status == Data.Enums.EntityStatus.Active)
                                                    {
                                                        <span class="badge bg-success">啟用</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-danger">停用</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                }

                <!-- 系統資訊 -->
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-gear me-2"></i>系統資訊
                        </h5>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">建立日期</label>
                                    <div>@warehouse.CreatedAt.ToString("yyyy/MM/dd HH:mm")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">建立者</label>
                                    <div>@(warehouse.CreatedBy ?? "-")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">最後更新</label>
                                    <div>@(warehouse.UpdatedAt?.ToString("yyyy/MM/dd HH:mm") ?? "-")</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label class="form-label text-muted">更新者</label>
                                    <div>@(warehouse.UpdatedBy ?? "-")</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int Id { get; set; }

    private Warehouse? warehouse;
    private List<WarehouseLocation> warehouseLocations = new();
    private bool isLoading = true;
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new();

    protected override async Task OnInitializedAsync()
    {
        InitializeBreadcrumb();
        await LoadWarehouseData();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id > 0)
        {
            await LoadWarehouseData();
        }
    }

    private void InitializeBreadcrumb()
    {
        breadcrumbItems = new List<GenericHeaderComponent.BreadcrumbItem>
        {
            new() { Text = "首頁", Href = "/" },
            new() { Text = "庫存管理", Href = "/inventory" },
            new() { Text = "倉庫管理", Href = "/inventory/warehouses" },
            new() { Text = "倉庫詳情" }
        };
    }

    private async Task LoadWarehouseData()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            warehouse = await WarehouseService.GetByIdAsync(Id);
              if (warehouse != null)
            {
                // 載入倉庫位置 (如果 service 有此方法)
                // warehouseLocations = await WarehouseService.GetWarehouseLocationsAsync(Id);
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "載入倉庫資料失敗：", ex.Message);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private async Task ToggleStatusAsync()
    {
        if (warehouse == null) return;

        try
        {
            var result = await WarehouseService.ToggleStatusAsync(warehouse.Id);
            if (result.IsSuccess)
            {
                warehouse.Status = warehouse.Status == Data.Enums.EntityStatus.Active 
                    ? Data.Enums.EntityStatus.Inactive 
                    : Data.Enums.EntityStatus.Active;
                    
                StateHasChanged();

                var statusText = warehouse.Status == Data.Enums.EntityStatus.Active ? "啟用" : "停用";
                await JSRuntime.InvokeVoidAsync("showToast", $"倉庫已{statusText}", "success");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("showToast", $"狀態更新失敗：{result.ErrorMessage}", "error");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("showToast", $"狀態更新失敗：{ex.Message}", "error");
        }
    }

    private async Task DeleteAsync()
    {
        if (warehouse == null) return;

        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", "確定要刪除這個倉庫嗎？此操作無法復原。");
        if (!confirmed) return;

        try
        {
            await WarehouseService.DeleteAsync(warehouse.Id);
            await JSRuntime.InvokeVoidAsync("showToast", "倉庫已刪除", "success");
            Navigation.NavigateTo("/inventory/warehouses");
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("showToast", $"刪除失敗：{ex.Message}", "error");
        }
    }

    private void BackToWarehouseList()
    {
        Navigation.NavigateTo("/inventory/warehouses");
    }    private string GetWarehouseTypeText(Data.Enums.WarehouseTypeEnum type)
    {
        return type switch
        {
            Data.Enums.WarehouseTypeEnum.Main => "主倉庫",
            Data.Enums.WarehouseTypeEnum.Branch => "分倉庫",
            Data.Enums.WarehouseTypeEnum.Virtual => "虛擬倉庫",
            _ => "未知"
        };
    }
}
