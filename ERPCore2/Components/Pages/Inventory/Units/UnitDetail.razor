@page "/units/detail/{id:int}"
@page "/inventory/units/detail/{id:int}"
@inject IUnitService UnitService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>單位詳細資料</PageTitle>

@if (isLoading)
{
    <div class="d-flex justify-content-center align-items-center" style="min-height: 400px;">
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">載入中...</span>
            </div>
            <div class="mt-2">載入單位資料中...</div>
        </div>
    </div>
}
else if (unit == null)
{
    <div class="alert alert-warning">
        <h4>找不到單位資料</h4>
        <p>指定的單位不存在或已被刪除。</p>
        <button class="btn btn-primary" @onclick="BackToUnitList">
            返回單位列表
        </button>
    </div>
}
else
{
    @* 頁面標題 *@
    <GenericHeaderComponent Title="@GetPageTitle()"
                           Subtitle="@GetSubtitle()"
                           TitleIcon="rulers"
                           HeadingLevel="h1"
                           BreadcrumbItems="@breadcrumbItems"
                           ShowDivider="true">        
        <ActionButtons>
            <DetailActionButtonsComponent 
                EntityStatus="@unit?.Status"
                IsLoading="@isLoading"
                OnEditClick="@EditUnit"
                OnToggleStatusClick="@ToggleUnitStatus"
                OnDeleteClick="@DeleteUnit"
                OnBackClick="@BackToUnitList"
                ShowPrintButton="false"
                DeactivateButtonText="停用"
                ActivateButtonText="啟用"
                DeleteButtonText="刪除"
                BackButtonText="返回列表" />
        </ActionButtons>    </GenericHeaderComponent>

    @* 基本資料 *@
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-rulers me-2"></i>
                        基本資料
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">單位代碼</label>
                                <div class="fw-bold text-primary">@unit?.UnitCode</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">單位名稱</label>
                                <div class="fw-bold">@unit?.UnitName</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">單位符號</label>
                                <div>@(unit?.Symbol ?? "-")</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">是否為基本單位</label>
                                <div>
                                    @if (unit?.IsBaseUnit == true)
                                    {
                                        <span class="badge bg-primary">是</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">否</span>
                                    }
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">狀態</label>
                                <div>
                                    @if (unit?.Status == Data.Enums.EntityStatus.Active)
                                    {
                                        <span class="badge bg-success">啟用</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">停用</span>
                                    }
                                </div>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(unit?.Remarks))
                        {
                            <div class="col-12">
                                <div class="mb-3">
                                    <label class="form-label text-muted">備註</label>
                                    <div>@unit.Remarks</div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* 轉換資訊 *@
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-arrow-repeat me-2"></i>
                        轉換資訊
                    </h5>
                </div>
                <div class="card-body">
                    @if (convertibleUnits.Any())
                    {
                        <div class="row">
                            @foreach (var u in convertibleUnits)
                            {
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">可轉換單位</label>
                                        <div>@($"{u.UnitName} ({u.Symbol})")</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">無可轉換的單位</div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int UnitId { get; set; }

    private Unit? unit;
    private List<Unit> convertibleUnits = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadUnitData();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (UnitId > 0)
        {
            await LoadUnitData();
        }
    }

    private async Task LoadUnitData()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            // 載入單位基本資料
            unit = await UnitService.GetByIdAsync(UnitId);
            
            if (unit != null)
            {
                // 暫時設定空的可轉換單位清單，等後續實作
                convertibleUnits = new List<Unit>();
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "載入單位資料失敗：", ex.Message);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private void EditUnit()
    {
        Navigation.NavigateTo($"/units/edit/{UnitId}");
    }

    private void BackToUnitList()
    {
        Navigation.NavigateTo("/units");
    }

    private async Task ToggleUnitStatus()
    {
        if (unit == null) return;

        var actionText = unit.Status == Data.Enums.EntityStatus.Active ? "停用" : "啟用";
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
            $"確定要{actionText}單位「{unit.UnitName}」嗎？");
        
        if (confirmed)
        {
            try
            {
                var result = await UnitService.ToggleStatusAsync(UnitId);
                
                if (result.IsSuccess)
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "success", $"{actionText}成功");
                    await LoadUnitData();
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "error", result.ErrorMessage ?? $"{actionText}失敗");
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("showToast", "error", $"{actionText}時發生錯誤：{ex.Message}");
            }
        }
    }

    private async Task DeleteUnit()
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
            $"確定要刪除單位「{unit?.UnitName}」嗎？這個操作無法復原。");
        
        if (confirmed)
        {
            try
            {
                var result = await UnitService.DeleteAsync(UnitId);
                if (result.IsSuccess)
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "success", "單位刪除成功");
                    Navigation.NavigateTo("/units");
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "error", result.ErrorMessage ?? "刪除失敗");
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("showToast", "error", $"刪除時發生錯誤：{ex.Message}");
            }
        }
    }

    private string GetPageTitle()
    {
        if (unit == null) return "單位詳細資料";
        return $"{unit.UnitName}";
    }

    private string GetSubtitle()
    {
        if (unit == null) return "";
        return $"單位代碼：{unit.UnitCode ?? "未設定"}";
    }

    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("庫存管理", "/inventory"),
        new("單位管理", "/units"),
        new("單位詳細資料")
    };
}
