@page "/inventory/reservations/detail/{reservationId:int}"
@inject IInventoryReservationService InventoryReservationService
@inject INotificationService NotificationService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<GenericDetailPageComponent TEntity="InventoryReservation" 
                        TService="IInventoryReservationService"
                        EntityId="@ReservationId"
                        Entity="@reservation"
                        Service="@InventoryReservationService"
                        EntityName="庫存預留"
                        EntityNamePlural="庫存預留"
                        IndexRoute="/inventory/reservations"
                        EditRoute="/inventory/reservations/edit"
                        LoadingText="載入庫存預留資料中..."
                        BreadcrumbItems="@breadcrumbItems"
                        DataLoader="@LoadReservationDataAsync"
                        EntityTitleSelector="@(r => r.ReservationNumber)"
                        EntitySubtitleSelector="@(r => $"預留類型：{r.ReservationType.ToString()}")"
                        EntityDisplayNameSelector="@(r => r.ReservationNumber)"
                        OnDataLoaded="@OnReservationDataLoaded"
                        UseTabLayout="true"
                        TabSections="@GetTabSections()"
                        RequiredPermission="InventoryReservation.Read"/>



@code {
    [Parameter] public int ReservationId { get; set; }

    private InventoryReservation? reservation;
    private bool _isLoading = false; // 防止重複載入

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("庫存管理"),
        new("庫存預留管理", "/inventory/reservations"),
        new("庫存預留詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<InventoryReservation?> LoadReservationDataAsync()
    {
        // 防止重複載入
        if (_isLoading)
        {
            return reservation;
        }

        try
        {
            _isLoading = true;
            reservation = await InventoryReservationService.GetByIdWithDetailsAsync(ReservationId);
            return reservation;
        }
        catch (Exception ex)
        {
            await ErrorHandlingHelper.HandlePageErrorAsync(
                ex,
                nameof(LoadReservationDataAsync),
                GetType(),
                additionalData: new { 
                    PageName = "InventoryReservationDetail",
                    Action = "LoadReservationData",
                    ReservationId = ReservationId
                });
            return null;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task OnReservationDataLoaded()
    {
        try
        {
            if (reservation != null)
            {
                // 更新麵包屑中的標題
                if (breadcrumbItems.Count > 3)
                {
                    breadcrumbItems[3] = new($"庫存預留詳細資料 - {reservation.ReservationNumber}");
                }
                StateHasChanged();
            }
        }
        catch (Exception ex)
        {
            await ErrorHandlingHelper.HandlePageErrorAsync(
                ex,
                nameof(OnReservationDataLoaded),
                GetType(),
                additionalData: "處理庫存預留資料載入後事件失敗"
            );
        }
    }

    private List<GenericDetailPageComponent<InventoryReservation, IInventoryReservationService>.TabSection> GetTabSections()
    {
        var tabs = new List<GenericDetailPageComponent<InventoryReservation, IInventoryReservationService>.TabSection>();

        try
        {
            // 基本資訊標籤頁
            tabs.Add(new GenericDetailPageComponent<InventoryReservation, IInventoryReservationService>.TabSection
            {
                Id = "basic-info",
                Title = "基本資訊",
                Content = BuildBasicInfoContent()
            });

            // 預留詳情標籤頁
            tabs.Add(new GenericDetailPageComponent<InventoryReservation, IInventoryReservationService>.TabSection
            {
                Id = "reservation-details",
                Title = "預留詳情",
                Content = BuildReservationDetailsContent()
            });

            // 相關資訊標籤頁
            tabs.Add(new GenericDetailPageComponent<InventoryReservation, IInventoryReservationService>.TabSection
            {
                Id = "related-info",
                Title = "相關資訊",
                Content = BuildRelatedInfoContent()
            });

            // 操作記錄標籤頁
            tabs.Add(new GenericDetailPageComponent<InventoryReservation, IInventoryReservationService>.TabSection
            {
                Id = "action-history",
                Title = "操作記錄",
                Content = BuildActionHistoryContent()
            });
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex,
                nameof(GetTabSections),
                GetType(),
                additionalData: "建立標籤頁失敗"
            );
        }

        return tabs;
    }

    private RenderFragment BuildBasicInfoContent()
    {
        return @<div class="detail-content">
            @if (reservation == null)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">載入中...</span>
                    </div>
                </div>
            }
            else
            {
                <div class="row g-3">
                    <div class="col-md-6">
                        <DetailFieldComponent Label="預留單號" Value="@reservation.ReservationNumber" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="預留類型" Value="@reservation.ReservationType.ToString()" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="預留狀態">
                            <span class="@GetStatusBadgeClass(reservation.ReservationStatus)">
                                @reservation.ReservationStatus.ToString()
                            </span>
                        </DetailFieldComponent>
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="預留日期" Value="@reservation.ReservationDate.ToString("yyyy/MM/dd HH:mm")" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="到期日期" Value="@(reservation.ExpiryDate?.ToString("yyyy/MM/dd HH:mm") ?? "無限期")" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="參考單號" Value="@(reservation.ReferenceNumber ?? "無")" />
                    </div>
                    <div class="col-12">
                        <DetailFieldComponent Label="備註" Value="@(reservation.ReservationRemarks ?? "無")" />
                    </div>
                </div>
            }
        </div>;
    }

    private RenderFragment BuildReservationDetailsContent()
    {
        return @<div class="detail-content">
            @if (reservation == null)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">載入中...</span>
                    </div>
                </div>
            }
            else
            {
                <div class="row g-3">
                    <div class="col-md-6">
                        <DetailFieldComponent Label="產品名稱" Value="@(reservation.Product?.ProductName ?? "未知產品")" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="產品代碼" Value="@(reservation.Product?.ProductCode ?? "無")" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="倉庫名稱" Value="@(reservation.Warehouse?.WarehouseName ?? "未知倉庫")" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="倉庫代碼" Value="@(reservation.Warehouse?.WarehouseCode ?? "無")" />
                    </div>
                    <div class="col-md-6">
                        <DetailFieldComponent Label="倉庫位置" Value="@(reservation.WarehouseLocation?.LocationName ?? "無指定位置")" />
                    </div>
                    <div class="col-md-6">
                        <!-- 空白欄位 -->
                    </div>
                    
                    <!-- 數量資訊 -->
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title mb-0">預留數量資訊</h6>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-md-4">
                                        <DetailFieldComponent Label="預留數量" Value="@reservation.ReservedQuantity.ToString("N0")" IsPrimary="true" />
                                    </div>
                                    <div class="col-md-4">
                                        <DetailFieldComponent Label="已釋放數量">
                                            <span class="text-warning fw-bold">@reservation.ReleasedQuantity.ToString("N0")</span>
                                        </DetailFieldComponent>
                                    </div>
                                    <div class="col-md-4">
                                        <DetailFieldComponent Label="剩餘預留數量">
                                            <span class="@GetRemainingQuantityClass(reservation.RemainingQuantity)">@reservation.RemainingQuantity.ToString("N0")</span>
                                        </DetailFieldComponent>
                                    </div>
                                </div>
                                
                                <!-- 進度條 -->
                                <div class="mt-3">
                                    @{
                                        var progressPercentage = reservation.ReservedQuantity > 0 ? 
                                            (double)reservation.ReleasedQuantity / reservation.ReservedQuantity * 100 : 0;
                                    }
                                    <label class="form-label">釋放進度</label>
                                    <div class="progress">
                                        <div class="progress-bar @GetProgressBarClass(progressPercentage)" 
                                             role="progressbar" 
                                             style="width: @progressPercentage.ToString("F1")%" 
                                             aria-valuenow="@progressPercentage" 
                                             aria-valuemin="0" 
                                             aria-valuemax="100">
                                            @progressPercentage.ToString("F1")%
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>;
    }

    private RenderFragment BuildRelatedInfoContent()
    {
        return @<div class="detail-content">
            @if (reservation == null)
            {
                <div class="text-center">
                    <div class="spinner-border" role="status">
                        <span class="visually-hidden">載入中...</span>
                    </div>
                </div>
            }
            else
            {
                <div class="row g-3">
                    <!-- 相關庫存資訊 -->
                    @if (reservation.InventoryStock != null)
                    {
                        <div class="col-12">
                            <div class="card">
                                <div class="card-header">
                                    <h6 class="card-title mb-0">相關庫存資訊</h6>
                                </div>
                                <div class="card-body">
                                    <div class="row g-3">
                                        <div class="col-md-6">
                                            <DetailFieldComponent Label="庫存編號" Value="@reservation.InventoryStock.Id.ToString()" />
                                        </div>
                                        <div class="col-md-6">
                                            <DetailFieldComponent Label="當前庫存" Value="@reservation.InventoryStock.CurrentStock.ToString("N0")" />
                                        </div>
                                        <div class="col-md-6">
                                            <DetailFieldComponent Label="可用庫存" Value="@reservation.InventoryStock.AvailableStock.ToString("N0")" />
                                        </div>
                                        <div class="col-md-6">
                                            <DetailFieldComponent Label="預留庫存" Value="@reservation.InventoryStock.ReservedStock.ToString("N0")" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-12">
                            <div class="alert alert-info">
                                <i class="bi bi-info-circle me-2"></i>
                                沒有關聯的庫存主檔資訊
                            </div>
                        </div>
                    }
                    
                    <!-- 業務單據資訊 -->
                    <div class="col-12">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title mb-0">業務單據資訊</h6>
                            </div>
                            <div class="card-body">
                                <div class="row g-3">
                                    <div class="col-md-6">
                                        <DetailFieldComponent Label="參考單號" Value="@(reservation.ReferenceNumber ?? "無")" />
                                    </div>
                                    <div class="col-md-6">
                                        <DetailFieldComponent Label="預留類型" Value="@reservation.ReservationType.ToString()" />
                                    </div>
                                </div>
                                
                                @if (!string.IsNullOrEmpty(reservation.ReferenceNumber))
                                {
                                    <div class="mt-3">
                                        <button type="button" class="btn btn-outline-primary btn-sm">
                                            <i class="bi bi-box-arrow-up-right me-1"></i>
                                            查看相關單據
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>;
    }

    private RenderFragment BuildActionHistoryContent()
    {
        return @<div class="detail-content">
            <div class="card">
                <div class="card-header">
                    <h6 class="card-title mb-0">操作歷史記錄</h6>
                </div>
                <div class="card-body">
                    <!-- 這裡可以添加操作歷史記錄的查詢和顯示 -->
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        操作歷史記錄功能正在開發中...
                    </div>
                    
                    <!-- 預留操作按鈕 -->
                    @if (reservation != null && reservation.ReservationStatus == InventoryReservationStatus.Reserved)
                    {
                        <div class="mt-3">
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-warning btn-sm" @onclick="() => ShowReleaseModal()">
                                    <i class="bi bi-unlock me-1"></i>
                                    釋放預留
                                </button>
                                <button type="button" class="btn btn-danger btn-sm" @onclick="() => ShowCancelModal()">
                                    <i class="bi bi-x-circle me-1"></i>
                                    取消預留
                                </button>
                                <button type="button" class="btn btn-info btn-sm" @onclick="() => ShowExtendModal()">
                                    <i class="bi bi-calendar-plus me-1"></i>
                                    延長期限
                                </button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>;
    }

    // 輔助方法
    private string GetStatusBadgeClass(InventoryReservationStatus status)
    {
        return status switch
        {
            InventoryReservationStatus.Reserved => "badge bg-primary",
            InventoryReservationStatus.PartiallyReleased => "badge bg-warning",
            InventoryReservationStatus.Released => "badge bg-success",
            InventoryReservationStatus.Cancelled => "badge bg-danger",
            _ => "badge bg-secondary"
        };
    }

    private string GetRemainingQuantityClass(int remainingQuantity)
    {
        return remainingQuantity switch
        {
            > 0 => "text-success fw-bold",
            0 => "text-muted fw-bold",
            _ => "text-danger fw-bold"
        };
    }

    private string GetProgressBarClass(double percentage)
    {
        return percentage switch
        {
            >= 100 => "bg-success",
            >= 50 => "bg-warning",
            _ => "bg-info"
        };
    }

    // 模態框操作方法（暫時為空，可以後續實作）
    private async Task ShowReleaseModal()
    {
        try
        {
            // TODO: 實作釋放預留的模態框
            await NotificationService.ShowInfoAsync("釋放預留功能正在開發中...");
        }
        catch (Exception ex)
        {
            await ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(ShowReleaseModal), GetType());
        }
    }

    private async Task ShowCancelModal()
    {
        try
        {
            // TODO: 實作取消預留的模態框
            await NotificationService.ShowInfoAsync("取消預留功能正在開發中...");
        }
        catch (Exception ex)
        {
            await ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(ShowCancelModal), GetType());
        }
    }

    private async Task ShowExtendModal()
    {
        try
        {
            // TODO: 實作延長期限的模態框
            await NotificationService.ShowInfoAsync("延長期限功能正在開發中...");
        }
        catch (Exception ex)
        {
            await ErrorHandlingHelper.HandlePageErrorAsync(ex, nameof(ShowExtendModal), GetType());
        }
    }
}
