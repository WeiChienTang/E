@page "/Error"
@page "/Error/{errorId}"
@attribute [Authorize]
@inject IErrorLogService ErrorLogService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>系統錯誤</PageTitle>

<PagePermissionCheck RequiredPermission="System.Admin">
    <div class="error-page">
        <div class="error-container">
            <div class="error-content">
                <div class="error-icon">
                    <i class="fas fa-exclamation-triangle text-warning"></i>
                </div>
                
                <h2 class="error-title">頁面目前有些錯誤</h2>
                
                <div class="error-message">
                    <p class="lead mb-3">
                        請聯繫工程師修復，造成困擾深感抱歉。
                    </p>
                    
                    @if (!string.IsNullOrEmpty(userFriendlyMessage))
                    {
                        <div class="alert alert-info">
                            <strong>錯誤訊息：</strong>@userFriendlyMessage
                        </div>
                    }
                    
                    @if (!string.IsNullOrEmpty(ErrorId))
                    {
                        <div class="alert alert-secondary">
                            <small>
                                <i class="fas fa-code me-1"></i>
                                錯誤編號：@ErrorId
                            </small>
                        </div>
                    }
                </div>
                
                <div class="error-actions">
                    <button class="btn btn-primary me-2" @onclick="GoBack">
                        <i class="fas fa-arrow-left me-1"></i> 返回上一頁
                    </button>
                    <button class="btn btn-secondary me-2" @onclick="GoHome">
                        <i class="fas fa-home me-1"></i> 回到首頁
                    </button>
                    <button class="btn btn-outline-info" @onclick="ReportError">
                        <i class="fas fa-bug me-1"></i> 回報問題
                    </button>
                </div>
                
                @if (showTechnicalDetails)
                {
                    <div class="technical-details mt-4">
                        <div class="card">
                            <div class="card-header">
                                <h6 class="card-title mb-0">
                                    <i class="fas fa-cogs me-2"></i>技術詳情
                                </h6>
                            </div>
                            <div class="card-body">
                                @if (errorLog != null)
                                {
                                    <div class="row">
                                        <div class="col-md-6">
                                            <small class="text-muted">發生時間：</small><br>
                                            <span>@errorLog.OccurredAt.ToString("yyyy/MM/dd HH:mm:ss")</span>
                                        </div>
                                        <div class="col-md-6">
                                            <small class="text-muted">例外類型：</small><br>
                                            <span>@(errorLog.ExceptionType ?? "未知")</span>
                                        </div>
                                    </div>
                                    @if (!string.IsNullOrEmpty(errorLog.Module))
                                    {
                                        <div class="mt-2">
                                            <small class="text-muted">模組：</small><br>
                                            <span>@errorLog.Module</span>
                                        </div>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
                
                <div class="mt-3">
                    <button class="btn btn-sm btn-outline-secondary" @onclick="ToggleTechnicalDetails">
                        <i class="fas @(showTechnicalDetails ? "fa-eye-slash" : "fa-eye") me-1"></i>
                        @(showTechnicalDetails ? "隱藏" : "顯示")技術詳情
                    </button>
                </div>
            </div>
        </div>
    </div>
</PagePermissionCheck>
@code {
    [Parameter] public string? ErrorId { get; set; }
    
    private string userFriendlyMessage = string.Empty;
    private ErrorLog? errorLog;
    private bool showTechnicalDetails = false;
    
    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(ErrorId))
        {
            await LoadErrorDetails();
        }
        else
        {
            userFriendlyMessage = "系統發生未知錯誤";
        }
    }
    
    private async Task LoadErrorDetails()
    {
        try
        {
            errorLog = await ErrorLogService.GetByErrorIdAsync(ErrorId!);
            userFriendlyMessage = TranslateToUserFriendlyMessage(errorLog?.Message);
        }
        catch
        {
            userFriendlyMessage = "系統發生未知錯誤";
        }
    }
    
    private string TranslateToUserFriendlyMessage(string? errorMessage)
    {
        if (string.IsNullOrEmpty(errorMessage)) return "系統發生未知錯誤";
        
        // 根據錯誤訊息內容返回友善訊息
        var message = errorMessage.ToLowerInvariant();
        
        return message switch
        {
            var msg when msg.Contains("timeout") || msg.Contains("逾時") => "系統回應逾時，請稍後再試",
            var msg when msg.Contains("connection") || msg.Contains("連線") => "資料庫連線異常，請稍後再試",
            var msg when msg.Contains("unauthorized") || msg.Contains("權限") => "權限不足，請聯繫管理員",
            var msg when msg.Contains("validation") || msg.Contains("驗證") => "資料驗證失敗，請檢查輸入內容",
            var msg when msg.Contains("file") || msg.Contains("檔案") => "找不到相關檔案，請聯繫技術人員",
            var msg when msg.Contains("memory") || msg.Contains("記憶體") => "系統資源不足，請聯繫技術人員",
            var msg when msg.Contains("sql") || msg.Contains("database") => "資料庫操作異常，請稍後再試",
            _ => "系統發生錯誤，請聯繫技術人員"
        };
    }
    
    private async Task GoBack()
    {
        await JSRuntime.InvokeVoidAsync("history.back");
    }
    
    private void GoHome()
    {
        Navigation.NavigateTo("/");
    }
    
    private async Task ReportError()
    {
        // 這裡可以實作錯誤回報功能
        // 例如發送郵件、建立工單等
        await JSRuntime.InvokeVoidAsync("alert", "感謝您的回報，我們會盡快處理此問題。");
    }
    
    private void ToggleTechnicalDetails()
    {
        showTechnicalDetails = !showTechnicalDetails;
    }
}
