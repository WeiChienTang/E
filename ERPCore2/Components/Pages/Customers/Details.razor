@page "/customers/{CustomerId:int}"
@inject ICustomerService CustomerService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using ERPCore2.Services
@using ERPCore2.Components.Shared.Details
@using static ERPCore2.Components.Shared.Buttons.ButtonComponent
@using static ERPCore2.Components.Shared.Alerts.AlertComponent
@rendermode InteractiveServer

<PageTitle>客戶詳細資料</PageTitle>

<link href="~/css/variables.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="row">
        <div class="col-12">            <div class="card">
                <PageHeaderComponent Title="@GetPageTitle()" IconClass="fas fa-user">
                    <Actions>
                        @if (customer != null)
                        {
                            <ButtonComponent Text="編輯" 
                                           Variant="ButtonVariant.OutlineWarning" 
                                           IconClass="fas fa-edit" 
                                           OnClick="NavigateToEdit" />
                        }
                        <ButtonComponent Text="返回列表" 
                                       Variant="ButtonVariant.OutlineSecondary" 
                                       IconClass="fas fa-arrow-left" 
                                       OnClick="NavigateBack" />
                    </Actions>
                </PageHeaderComponent>
                  <div class="card-body">
                    <LoadingComponent IsLoading="@isLoading" 
                                    LoadingText="載入客戶資料中..." 
                                    ShowText="true" />
                    
                    @if (!isLoading && !string.IsNullOrWhiteSpace(errorMessage))
                    {
                        <AlertComponent Type="AlertType.Danger" 
                                      Message="@errorMessage" 
                                      IconClass="fas fa-exclamation-triangle" />
                        <div class="text-center mt-3">
                            <ButtonComponent Text="返回列表" 
                                           Variant="ButtonVariant.Primary" 
                                           IconClass="fas fa-arrow-left" 
                                           OnClick="NavigateBack" />
                        </div>
                    }
                    else if (!isLoading && customer == null)
                    {
                        <AlertComponent Type="AlertType.Warning" 
                                      Message="找不到指定的客戶資料" 
                                      IconClass="fas fa-exclamation-triangle" />
                        <div class="text-center mt-3">
                            <ButtonComponent Text="返回列表" 
                                           Variant="ButtonVariant.Primary" 
                                           IconClass="fas fa-arrow-left" 
                                           OnClick="NavigateBack" />
                        </div>
                    }                    else if (!isLoading && customer != null)
                    {
                        <!-- 基本資訊 -->
                        <DetailSectionComponent Title="基本資訊" IconClass="fas fa-info-circle text-primary">
                            <div class="col-md-6">
                                <DetailItemComponent Label="客戶代碼" Value="@customer.CustomerCode" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="公司名稱" Value="@customer.CompanyName" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="聯絡人" Value="@customer.ContactPerson" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="統一編號" Value="@customer.TaxNumber" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="客戶類型" Value="@customer.CustomerType?.TypeName" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="行業別" Value="@customer.Industry?.IndustryName" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="狀態">
                                    <StatusBadgeComponent Status="customer.Status" />
                                </DetailItemComponent>
                            </div>
                        </DetailSectionComponent>
                        
                        <!-- 系統資訊 -->
                        <DetailSectionComponent Title="系統資訊" IconClass="fas fa-cog text-secondary">
                            <div class="col-md-6">
                                <DetailItemComponent Label="建立日期" Value="@customer.CreatedDate.ToString("yyyy/MM/dd HH:mm:ss")" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="建立者" Value="@customer.CreatedBy" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="修改日期" Value="@(customer.ModifiedDate?.ToString("yyyy/MM/dd HH:mm:ss"))" />
                            </div>
                            
                            <div class="col-md-6">
                                <DetailItemComponent Label="修改者" Value="@customer.ModifiedBy" />
                            </div>
                        </DetailSectionComponent>                        
                        <!-- 相關資料 -->
                        <DetailSectionComponent Title="相關資料" IconClass="fas fa-link text-info" ShowDivider="false">
                            <div class="col-md-6">
                                <RelatedDataCardComponent Title="聯絡方式" 
                                                        IconClass="fas fa-phone" 
                                                        Count="@(customer.CustomerContacts?.Count ?? 0)"
                                                        HasData="@(customer.CustomerContacts?.Any() == true)">
                                    @if (customer.CustomerContacts?.Any() == true)
                                    {
                                        @foreach (var contact in customer.CustomerContacts.Take(3))
                                        {
                                            <div class="d-flex justify-content-between mb-2">
                                                <span>@contact.ContactType?.TypeName</span>
                                                <span>@contact.ContactValue</span>
                                                @if (contact.IsPrimary)
                                                {
                                                    <span class="badge bg-warning text-dark">主要</span>
                                                }
                                            </div>
                                        }
                                    }
                                </RelatedDataCardComponent>
                            </div>
                            
                            <div class="col-md-6">
                                <RelatedDataCardComponent Title="地址資料" 
                                                        IconClass="fas fa-map-marker-alt" 
                                                        Count="@(customer.CustomerAddresses?.Count ?? 0)"
                                                        HasData="@(customer.CustomerAddresses?.Any() == true)">
                                    @if (customer.CustomerAddresses?.Any() == true)
                                    {
                                        @foreach (var address in customer.CustomerAddresses.Take(3))
                                        {
                                            <div class="mb-2">
                                                <div class="d-flex justify-content-between">
                                                    <span class="fw-bold">@address.AddressType?.TypeName</span>
                                                    @if (address.IsPrimary)
                                                    {
                                                        <span class="badge bg-warning text-dark">主要</span>
                                                    }
                                                </div>
                                                <small class="text-muted">
                                                    @($"{address.PostalCode} {address.City}{address.District} {address.Address}")
                                                </small>
                                            </div>
                                        }
                                    }
                                </RelatedDataCardComponent>
                            </div>
                        </DetailSectionComponent>
                        
                        <!-- 操作按鈕 -->
                        <div class="row mt-4">
                            <div class="col-12">
                                <div class="d-flex justify-content-end gap-2">
                                    @if (customer.Status == EntityStatus.Active)
                                    {
                                        <ButtonComponent Text="停用" 
                                                       Variant="ButtonVariant.OutlineSecondary" 
                                                       IconClass="fas fa-pause"
                                                       OnClick="() => ToggleStatus(EntityStatus.Inactive)" />
                                    }
                                    else
                                    {
                                        <ButtonComponent Text="啟用" 
                                                       Variant="ButtonVariant.OutlineSecondary" 
                                                       IconClass="fas fa-play"
                                                       OnClick="() => ToggleStatus(EntityStatus.Active)" />
                                    }
                                    <ButtonComponent Text="刪除" 
                                                   Variant="ButtonVariant.OutlineDanger" 
                                                   IconClass="fas fa-trash"
                                                   OnClick="ConfirmDelete" />
                                    <ButtonComponent Text="編輯" 
                                                   Variant="ButtonVariant.Warning" 
                                                   IconClass="fas fa-edit"
                                                   OnClick="NavigateToEdit" />
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 載入 Font Awesome 圖示 -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />

@code {
    [Parameter] public int CustomerId { get; set; }
    
    private Customer? customer;
    private bool isLoading = true;
    private string errorMessage = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }
      private async Task LoadDataAsync()
    {
        try
        {
            customer = await CustomerService.GetByIdAsync(CustomerId);
        }
        catch (Exception ex)
        {
            errorMessage = $"載入客戶資料時發生錯誤: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
    
    private string GetStatusBadgeClass(EntityStatus status)
    {
        return status switch
        {
            EntityStatus.Active => "bg-success",
            EntityStatus.Inactive => "bg-warning",
            EntityStatus.Deleted => "bg-danger",
            _ => "bg-secondary"
        };
    }
    
    private string GetStatusText(EntityStatus status)
    {
        return status switch
        {
            EntityStatus.Active => "啟用",
            EntityStatus.Inactive => "停用",
            EntityStatus.Deleted => "已刪除",
            _ => "未知"
        };
    }
      private async Task ToggleStatus(EntityStatus newStatus)
    {
        if (customer == null) return;
        
        try
        {
            // 更新客戶狀態
            customer.Status = newStatus;
            customer.ModifiedBy = "系統管理員";
            customer.ModifiedDate = DateTime.UtcNow;
            
            var result = await CustomerService.UpdateAsync(customer);
            
            if (result.IsSuccess)
            {
                await LoadDataAsync(); // 重新載入資料
                await JSRuntime.InvokeVoidAsync("alert", "狀態更新成功！");
            }
            else
            {
                await JSRuntime.InvokeVoidAsync("alert", $"狀態更新失敗: {result.ErrorMessage}");
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("alert", $"狀態更新時發生錯誤: {ex.Message}");
        }
    }
    
    private async Task ConfirmDelete()
    {
        if (customer == null) return;
        
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", $"確定要刪除客戶「{customer.CompanyName}」嗎？此操作無法復原。");
        
        if (confirmed)
        {
            try
            {
                var result = await CustomerService.DeleteAsync(customer.CustomerId);
                
                if (result.IsSuccess)
                {
                    await JSRuntime.InvokeVoidAsync("alert", "客戶刪除成功！");
                    Navigation.NavigateTo("/customers");
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("alert", $"客戶刪除失敗: {result.ErrorMessage}");
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("alert", $"刪除客戶時發生錯誤: {ex.Message}");
            }
        }
    }
    
    private void NavigateToEdit()
    {
        Navigation.NavigateTo($"/customers/{CustomerId}/edit");
    }
      private void NavigateBack()
    {
        Navigation.NavigateTo("/customers");
    }
      private string GetPageTitle()
    {
        return customer != null 
            ? $"客戶詳細資料 ({customer.CustomerCode})" 
            : "客戶詳細資料";
    }
}
