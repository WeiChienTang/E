@page "/customers/create"
@inject ICustomerService CustomerService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@using ERPCore2.Data.Entities
@using ERPCore2.Data.Enums
@using ERPCore2.Components.Shared.Buttons
@using ERPCore2.Components.Shared.Alerts
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Components.Shared.Loading
@using ERPCore2.Components.Shared.Forms
@using static ERPCore2.Components.Shared.Buttons.ButtonComponent
@using static ERPCore2.Components.Shared.Alerts.AlertComponent
@rendermode InteractiveServer

<PageTitle>新增客戶</PageTitle>

<link href="~/css/variables.css" rel="stylesheet" />

<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="card">                
                <PageHeaderComponent Title="新增客戶" IconClass="fas fa-user-plus">
                    <Actions>
                        <ButtonComponent Text="返回列表" 
                                       Variant="ButtonVariant.OutlineSecondary" 
                                       IconClass="fas fa-arrow-left" 
                                       OnClick="NavigateBack" />
                    </Actions>
                </PageHeaderComponent>                <div class="card-body">
                    <LoadingComponent IsLoading="@isLoading" 
                                    LoadingText="載入表單資料中..." 
                                    ShowText="true" />
                    
                    @if (!isLoading)
                    {
                        <EditForm Model="@customer" OnValidSubmit="@HandleSubmit">
                            <DataAnnotationsValidator />
                              <div class="row">
                                <div class="col-md-6">
                                    <InputComponent Id="customerCode" 
                                                  Label="客戶代碼" 
                                                  @bind-Value="customer.CustomerCode"
                                                  IsRequired="true" />
                                    <ValidationMessage For="@(() => customer.CustomerCode)" class="text-danger" />
                                </div>
                                
                                <div class="col-md-6">
                                    <InputComponent Id="companyName" 
                                                  Label="公司名稱" 
                                                  @bind-Value="customer.CompanyName"
                                                  IsRequired="true" />
                                    <ValidationMessage For="@(() => customer.CompanyName)" class="text-danger" />
                                </div>                            </div>
                            
                            <div class="row">
                                <div class="col-md-6">
                                    <InputComponent Id="contactPerson" 
                                                  Label="聯絡人" 
                                                  @bind-Value="customer.ContactPerson" />
                                    <ValidationMessage For="@(() => customer.ContactPerson)" class="text-danger" />
                                </div>
                                
                                <div class="col-md-6">
                                    <InputComponent Id="taxNumber" 
                                                  Label="統一編號" 
                                                  @bind-Value="customer.TaxNumber" />
                                    <ValidationMessage For="@(() => customer.TaxNumber)" class="text-danger" />
                                </div>
                            </div>
                              <div class="row">
                                <div class="col-md-6">
                                    <SelectComponent TValue="int?"
                                                   Id="customerType" 
                                                   Label="客戶類型"
                                                   @bind-Value="customer.CustomerTypeId"
                                                   Items="customerTypes"
                                                   GetItemText="@(item => ((CustomerType)item).TypeName)"
                                                   GetItemValue="@(item => ((CustomerType)item).CustomerTypeId)"
                                                   EmptyOptionText="請選擇客戶類型..." />
                                    <ValidationMessage For="@(() => customer.CustomerTypeId)" class="text-danger" />
                                </div>
                                
                                <div class="col-md-6">
                                    <SelectComponent TValue="int?"
                                                   Id="industry" 
                                                   Label="行業別"
                                                   @bind-Value="customer.IndustryId"
                                                   Items="industries"
                                                   GetItemText="@(item => ((Industry)item).IndustryName)"
                                                   GetItemValue="@(item => ((Industry)item).IndustryId)"
                                                   EmptyOptionText="請選擇行業別..." />
                                    <ValidationMessage For="@(() => customer.IndustryId)" class="text-danger" />
                                </div>
                            </div><div class="row">
                                <div class="col-md-6">
                                    <InputComponent Id="createdBy" 
                                                  Label="建立者" 
                                                  @bind-Value="customer.CreatedBy"
                                                  IsReadOnly="true" />
                                    <ValidationMessage For="@(() => customer.CreatedBy)" class="text-danger" />
                                </div>
                            </div>                            @if (!string.IsNullOrWhiteSpace(errorMessage))
                            {
                                <AlertComponent Type="AlertType.Danger" 
                                              Message="@errorMessage" 
                                              IconClass="fas fa-exclamation-triangle" />
                            }                            <div class="row">                                
                                <div class="col-12">
                                    <div class="d-flex justify-content-end gap-2">
                                        <ButtonComponent Text="取消" 
                                                       Variant="ButtonVariant.Secondary" 
                                                       IconClass="fas fa-times"
                                                       OnClick="NavigateBack" />
                                                       
                                        <ButtonComponent Text="@(isSubmitting ? "處理中" : "儲存")" 
                                                       Variant="ButtonVariant.Primary" 
                                                       IconClass="@(isSubmitting ? "spinner-border spinner-border-sm" : "fas fa-save")"
                                                       IsDisabled="@isSubmitting"
                                                       IsSubmit="true" />
                                    </div>
                                </div>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- 載入 Font Awesome 圖示 -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet" />

@code {    
    private Customer customer = new();
    private List<CustomerType> customerTypes = new();
    private List<Industry> industries = new();
    
    private bool isLoading = true;
    private bool isSubmitting = false;
    private string errorMessage = string.Empty;
    
    protected override async Task OnInitializedAsync()
    {
        await LoadDataAsync();
    }      private async Task LoadDataAsync()
    {
        try
        {
            // 載入客戶類型和行業別的下拉選項
            customerTypes = await CustomerService.GetCustomerTypesAsync();
            industries = await CustomerService.GetIndustriesAsync();
            
            // 設定預設值
            customer.CreatedBy = "系統管理員"; // 可以從認證系統獲取
        }
        catch (Exception ex)
        {
            errorMessage = $"載入資料時發生錯誤: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }private async Task HandleSubmit()
    {
        if (isSubmitting) return;
        
        try
        {
            isSubmitting = true;
            errorMessage = string.Empty;
            
            var result = await CustomerService.CreateAsync(customer);
            
            if (result.IsSuccess)
            {
                await JSRuntime.InvokeVoidAsync("alert", "客戶新增成功！");
                Navigation.NavigateTo("/customers");
            }
            else
            {
                errorMessage = result.ErrorMessage;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"新增客戶時發生錯誤: {ex.Message}";
        }
        finally
        {
            isSubmitting = false;
        }
    }
    
    private void NavigateBack()
    {
        Navigation.NavigateTo("/customers");
    }
}
