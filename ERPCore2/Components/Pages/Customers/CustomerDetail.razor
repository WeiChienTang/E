@page "/customers/detail/{customerId:int}"
@inject ICustomerService CustomerService
@inject ICustomerContactService CustomerContactService
@inject ICustomerAddressService CustomerAddressService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>客戶詳細資料</PageTitle>

@if (isLoading)
{
    <div class="d-flex justify-content-center align-items-center" style="min-height: 400px;">
        <div class="text-center">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">載入中...</span>
            </div>
            <div class="mt-2">載入客戶資料中...</div>
        </div>
    </div>
}
else if (customer == null)
{
    <div class="alert alert-warning">
        <h4>找不到客戶資料</h4>
        <p>指定的客戶不存在或已被刪除。</p>        
        <button class="btn btn-primary" @onclick="BackToCustomerList">
            返回客戶列表
        </button>
    </div>
}
else
{
    @* 頁面標題 *@
    <GenericHeaderComponent Title="@GetPageTitle()"
                           Subtitle="@GetSubtitle()"
                           TitleIcon="person-badge"
                           HeadingLevel="h1"
                           BreadcrumbItems="@breadcrumbItems"
                           ShowDivider="true">        
        <ActionButtons>
            <DetailActionButtonsComponent 
                EntityStatus="@customer?.Status"
                IsLoading="@isLoading"
                OnEditClick="@EditCustomer"
                OnToggleStatusClick="@ToggleCustomerStatus"
                OnDeleteClick="@DeleteCustomer"
                OnBackClick="@BackToCustomerList"
                ShowPrintButton="false"
                DeactivateButtonText="停用"
                ActivateButtonText="啟用"
                DeleteButtonText="刪除"
                BackButtonText="返回列表" />
        </ActionButtons>    </GenericHeaderComponent>

    @* 基本資料 *@
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-building me-2"></i>
                        基本資料
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">統一編號</label>
                                <div class="fw-bold text-primary">@(customer?.TaxNumber ?? "未設定")</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">公司名稱</label>
                                <div class="fw-bold">@customer?.CompanyName</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">聯絡人</label>
                                <div>@(customer?.ContactPerson ?? "-")</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">客戶類型</label>
                                <div>@(customer?.CustomerType?.TypeName ?? "-")</div>
                            </div>
                        </div>                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">行業類型</label>
                                <div>@(customer?.IndustryType?.IndustryTypeName ?? "-")</div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label class="form-label text-muted">狀態</label>
                                <div>
                                    @if (customer?.Status == Data.Enums.EntityStatus.Active)
                                    {
                                        <span class="badge bg-success">啟用</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">停用</span>
                                    }
                                </div>
                            </div>
                        </div>
                        @if (!string.IsNullOrEmpty(customer?.Remarks))
                        {
                            <div class="col-12">
                                <div class="mb-3">
                                    <label class="form-label text-muted">備註</label>
                                    <div>@customer.Remarks</div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @* 聯絡方式 *@
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-telephone me-2"></i>
                        聯絡方式
                    </h5>
                </div>
                <div class="card-body">
                    @if (customerContacts.Any())
                    {
                        <div class="row">
                            @foreach (var contact in customerContacts)
                            {
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">@contact.ContactType?.TypeName</label>
                                        <div>@contact.ContactValue</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">尚未設定聯絡方式</div>
                    }
                </div>
            </div>
        </div>
    </div>

    @* 地址資料 *@
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-geo-alt me-2"></i>
                        地址資料
                    </h5>
                </div>
                <div class="card-body">
                    @if (customerAddresses.Any())
                    {
                        <div class="row">
                            @foreach (var address in customerAddresses)
                            {
                                <div class="col-md-6">
                                    <div class="mb-3">
                                        <label class="form-label text-muted">@address.AddressType?.TypeName</label>
                                        <div>@BuildAddressText(address)</div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-muted">尚未設定地址</div>
                    }
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public int CustomerId { get; set; }

    private Customer? customer;
    private List<CustomerContact> customerContacts = new();
    private List<CustomerAddress> customerAddresses = new();
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        await LoadCustomerData();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (CustomerId > 0)
        {
            await LoadCustomerData();
        }
    }

    private async Task LoadCustomerData()
    {
        try
        {
            isLoading = true;
            StateHasChanged();

            // 載入客戶基本資料
            customer = await CustomerService.GetByIdAsync(CustomerId);
            
            if (customer != null)
            {
                // 載入聯絡方式
                customerContacts = await CustomerService.GetCustomerContactsAsync(CustomerId);
                
                // 載入地址資料
                customerAddresses = await CustomerAddressService.GetByCustomerIdAsync(CustomerId);
            }
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "載入客戶資料失敗：", ex.Message);
        }
        finally
        {
            isLoading = false;
            StateHasChanged();
        }
    }

    private string BuildAddressText(CustomerAddress address)
    {
        var parts = new List<string>();
        
        if (!string.IsNullOrEmpty(address.PostalCode))
            parts.Add($"({address.PostalCode})");
        
        if (!string.IsNullOrEmpty(address.City))
            parts.Add(address.City);
        
        if (!string.IsNullOrEmpty(address.District))
            parts.Add(address.District);
        
        if (!string.IsNullOrEmpty(address.Address))
            parts.Add(address.Address);

        return parts.Any() ? string.Join(" ", parts) : "地址不完整";
    }

    private void EditCustomer()
    {
        Navigation.NavigateTo($"/customers/edit/{CustomerId}");
    }

    private void BackToCustomerList()
    {
        Navigation.NavigateTo("/customers");
    }    private async Task ToggleCustomerStatus()
    {
        if (customer == null) return;

        var actionText = customer.Status == Data.Enums.EntityStatus.Active ? "停用" : "啟用";
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
            $"確定要{actionText}客戶「{customer.CompanyName}」嗎？");
        
        if (confirmed)
        {
            try
            {
                var result = await CustomerService.ToggleStatusAsync(CustomerId);
                
                if (result.IsSuccess)
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "success", $"{actionText}成功");
                    await LoadCustomerData();
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "error", result.ErrorMessage ?? $"{actionText}失敗");
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("showToast", "error", $"{actionText}時發生錯誤：{ex.Message}");
            }
        }
    }

    private async Task DeleteCustomer()
    {
        var confirmed = await JSRuntime.InvokeAsync<bool>("confirm", 
            $"確定要刪除客戶「{customer?.CompanyName}」嗎？這個操作無法復原。");
        
        if (confirmed)
        {
            try
            {
                var result = await CustomerService.DeleteAsync(CustomerId);
                if (result.IsSuccess)
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "success", "客戶刪除成功");
                    Navigation.NavigateTo("/customers");
                }
                else
                {
                    await JSRuntime.InvokeVoidAsync("showToast", "error", result.ErrorMessage ?? "刪除失敗");
                }
            }
            catch (Exception ex)
            {
                await JSRuntime.InvokeVoidAsync("showToast", "error", $"刪除時發生錯誤：{ex.Message}");
            }
        }
    }

    private string GetPageTitle()
    {
        if (customer == null) return "客戶詳細資料";
        return $"{customer.CompanyName}";
    }    private string GetSubtitle()
    {
        if (customer == null) return "";
        return $"統一編號：{customer.TaxNumber ?? "未設定"}";
    }

    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("客戶管理", "/customers"),
        new("客戶詳細資料")
    };
}
