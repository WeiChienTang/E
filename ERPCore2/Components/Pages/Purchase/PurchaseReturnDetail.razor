@page "/purchase-returns/detail/{purchaseReturnId:int}"

@inject IPurchaseReturnService PurchaseReturnService
@inject NavigationManager Navigation
@rendermode InteractiveServer

<GenericDetailPageComponent TEntity="PurchaseReturn" 
                            TService="IPurchaseReturnService"
                            EntityId="@PurchaseReturnId"
                            Entity="@purchaseReturn"
                            Service="@PurchaseReturnService"
                            EntityName="採購退貨"
                            EntityNamePlural="採購退貨"
                            IndexRoute="/purchase-returns"
                            EditRoute="/purchase-returns/edit"
                            LoadingText="載入採購退貨資料中..."
                            BreadcrumbItems="@breadcrumbItems"
                            DataLoader="@LoadPurchaseReturnDataAsync"
                            AdditionalDataLoader="@LoadAdditionalDataAsync"
                            EntityTitleSelector="@(pr => pr.PurchaseReturnNumber)"
                            EntitySubtitleSelector="@(pr => $"退貨日期：{pr.ReturnDate:yyyy/MM/dd}")"
                            EntityDisplayNameSelector="@(pr => pr.PurchaseReturnNumber)"
                            OnDataLoaded="@OnPurchaseReturnDataLoaded"
                            UseTabLayout="true"
                            TabSections="@GetTabSections()"
                            RequiredPermission="PurchaseReturn.Read"
                            @ref="detailComponent" />

@code {
    [Parameter] public int PurchaseReturnId { get; set; }
    
    // 組件參考
    private GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService> detailComponent = default!;
    
    // 資料模型
    private PurchaseReturn? purchaseReturn;
    private List<ERPCore2.Data.Entities.PurchaseReturnDetail> purchaseReturnDetails = new();
    private bool _isLoading = false; // 防止重複載入
    
    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new();

    protected override void OnInitialized()
    {
        try
        {
            InitializeBreadcrumbItems();
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(OnInitialized),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
            throw;
        }
    }

    private void InitializeBreadcrumbItems()
    {
        breadcrumbItems = new List<GenericHeaderComponent.BreadcrumbItem>
        {
            new() { Text = "首頁", Href = "/" },
            new() { Text = "採購管理", Href = "/purchase" },
            new() { Text = "採購退貨", Href = "/purchase-returns" },
            new() { Text = "退貨詳情" }  // 沒有 Href 會自動設為 IsActive = true
        };
    }

    private async Task<PurchaseReturn?> LoadPurchaseReturnDataAsync()
    {
        // 防止重複載入
        if (_isLoading)
        {
            return purchaseReturn;
        }
        
        try
        {
            _isLoading = true;
            
            if (PurchaseReturnId <= 0) return null;
            
            purchaseReturn = await PurchaseReturnService.GetByIdAsync(PurchaseReturnId);
            
            return purchaseReturn;
        }
        catch (Exception ex)
        {
            await ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(LoadPurchaseReturnDataAsync),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
            
            // 設置預設值避免頁面崩潰
            purchaseReturn = null;
            purchaseReturnDetails = new List<ERPCore2.Data.Entities.PurchaseReturnDetail>();
            
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private async Task LoadAdditionalDataAsync()
    {
        try
        {
            if (purchaseReturn?.Id != null)
            {
                var purchaseReturnWithDetails = await PurchaseReturnService.GetWithDetailsAsync(purchaseReturn.Id);
                if (purchaseReturnWithDetails != null)
                {
                    if (purchaseReturnWithDetails.PurchaseReturnDetails != null)
                    {
                        purchaseReturnDetails = purchaseReturnWithDetails.PurchaseReturnDetails.ToList();
                    }
                    
                    // 更新主要實體的參考資料
                    purchaseReturn = purchaseReturnWithDetails;
                }
            }
        }
        catch (Exception ex)
        {
            // 額外資料載入失敗不應該影響主要功能
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(LoadAdditionalDataAsync),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
        }
    }

    private async Task OnPurchaseReturnDataLoaded()
    {
        try
        {
            // 資料載入完成後的處理
            await Task.Run(() => StateHasChanged());
        }
        catch (Exception ex)
        {
            // 資料載入後處理失敗不應該影響主要功能
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(OnPurchaseReturnDataLoaded),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
        }
    }

    // 設定標籤頁結構
    private List<GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection> GetTabSections()
    {
        try
        {
            return new List<GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection>
            {           
                new GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection
                {
                    Id = "basic",
                    Title = "基本資料",
                    Content = @<div>
                        <BasicInfoDisplayComponent 
                            Title="採購退貨基本資訊"
                            IconClass="fas fa-undo"
                            IconColor="text-primary"
                            Fields="@GetPurchaseReturnBasicFields()" />
                    </div>
                },
                new GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection
                {
                    Id = "amount",
                    Title = "金額資訊",
                    Content = @<div>
                        <BasicInfoDisplayComponent 
                            Title="退貨金額資訊"
                            IconClass="fas fa-dollar-sign"
                            IconColor="text-success"
                            Fields="@GetAmountFields()" />
                    </div>
                },
                new GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection
                {
                    Id = "details",
                    Title = "退貨明細",
                    Content = @<div>
                        @if (purchaseReturnDetails.Any())
                        {
                            <div class="card">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="card-title mb-0">
                                        <i class="fas fa-list-ul me-2"></i>退貨明細
                                    </h5>
                                    <span class="badge bg-primary">@purchaseReturnDetails.Count 項商品</span>
                                </div>
                                <div class="card-body p-0">
                                    <div class="table-responsive">
                                        <table class="table table-hover mb-0">
                                            <thead class="table-light">
                                                <tr>
                                                    <th style="width: 40px;">#</th>
                                                    <th>商品名稱</th>
                                                    <th style="width: 100px;" class="text-center">退貨數量</th>
                                                    <th style="width: 120px;" class="text-end">原始單價</th>
                                                    <th style="width: 120px;" class="text-end">退貨單價</th>
                                                    <th style="width: 120px;" class="text-end">退貨小計</th>
                                                    <th style="width: 100px;" class="text-center">處理數量</th>
                                                    <th style="width: 100px;" class="text-center">待處理數量</th>
                                                    <th style="width: 80px;" class="text-center">狀態</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var (detail, index) in purchaseReturnDetails.Select((d, i) => (d, i + 1)))
                                                {
                                                    <tr>
                                                        <td class="text-muted">@index</td>
                                                        <td>
                                                            <div>
                                                                <div class="fw-medium">@detail.Product?.ProductName</div>
                                                                @if (!string.IsNullOrWhiteSpace(detail.Product?.ProductCode))
                                                                {
                                                                    <small class="text-muted">代碼：@detail.Product.ProductCode</small>
                                                                }
                                                                @if (!string.IsNullOrWhiteSpace(detail.BatchNumber))
                                                                {
                                                                    <br /><small class="text-muted">批號：@detail.BatchNumber</small>
                                                                }
                                                                @if (detail.ExpiryDate.HasValue)
                                                                {
                                                                    <br /><small class="text-muted">到期日：@detail.ExpiryDate.Value.ToString("yyyy/MM/dd")</small>
                                                                }
                                                            </div>
                                                        </td>
                                                        <td class="text-center">
                                                            <span class="badge bg-info">@detail.ReturnQuantity</span>
                                                        </td>
                                                        <td class="text-end">@detail.OriginalUnitPrice.ToString("C")</td>
                                                        <td class="text-end">@detail.ReturnUnitPrice.ToString("C")</td>
                                                        <td class="text-end fw-medium">@detail.ReturnSubtotal.ToString("C")</td>
                                                        <td class="text-center">
                                                            <span class="badge bg-success">@detail.ProcessedQuantity</span>
                                                        </td>
                                                        <td class="text-center">
                                                            <span class="badge @(detail.PendingQuantity > 0 ? "bg-warning" : "bg-secondary")">@detail.PendingQuantity</span>
                                                        </td>
                                                        <td class="text-center">
                                                            @if (detail.IsShipped)
                                                            {
                                                                <span class="badge bg-success" title="已出庫">
                                                                    <i class="fas fa-check-circle"></i>
                                                                </span>
                                                            }
                                                            else
                                                            {
                                                                <span class="badge bg-warning" title="未出庫">
                                                                    <i class="fas fa-clock"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    </tr>
                                                    @if (!string.IsNullOrWhiteSpace(detail.DetailRemarks) || !string.IsNullOrWhiteSpace(detail.QualityCondition))
                                                    {
                                                        <tr class="table-light">
                                                            <td></td>
                                                            <td colspan="8">
                                                                @if (!string.IsNullOrWhiteSpace(detail.QualityCondition))
                                                                {
                                                                    <small class="text-muted">
                                                                        <strong>品質狀況：</strong>@detail.QualityCondition
                                                                    </small>
                                                                    <br />
                                                                }
                                                                @if (!string.IsNullOrWhiteSpace(detail.DetailRemarks))
                                                                {
                                                                    <small class="text-muted">
                                                                        <strong>備註：</strong>@detail.DetailRemarks
                                                                    </small>
                                                                }
                                                            </td>
                                                        </tr>
                                                    }
                                                }
                                            </tbody>
                                            <tfoot class="table-light">
                                                <tr>
                                                    <th colspan="2" class="text-end">合計：</th>
                                                    <th class="text-center">@purchaseReturnDetails.Sum(d => d.ReturnQuantity)</th>
                                                    <th></th>
                                                    <th></th>
                                                    <th class="text-end">@purchaseReturnDetails.Sum(d => d.ReturnSubtotal).ToString("C")</th>
                                                    <th class="text-center">@purchaseReturnDetails.Sum(d => d.ProcessedQuantity)</th>
                                                    <th class="text-center">@purchaseReturnDetails.Sum(d => d.PendingQuantity)</th>
                                                    <th></th>
                                                </tr>
                                            </tfoot>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="card">
                                <div class="card-body text-center py-5">
                                    <i class="fas fa-inbox text-muted" style="font-size: 3rem;"></i>
                                    <p class="text-muted mt-3">尚未新增退貨明細</p>
                                </div>
                            </div>
                        }
                    </div>
                },
                new GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection
                {
                    Id = "related",
                    Title = "相關資訊",
                    Content = @<div>
                        <BasicInfoDisplayComponent 
                            Title="相關單據資訊"
                            IconClass="fas fa-link"
                            IconColor="text-info"
                            Fields="@GetRelatedInfoFields()" />
                    </div>
                },
                new GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection
                {
                    Id = "system",
                    Title = "系統資訊",
                    Content = @<div>
                        <SystemInfoDisplayComponent 
                            CreatedAt="@(purchaseReturn?.CreatedAt ?? DateTime.MinValue)"
                            UpdatedAt="@purchaseReturn?.UpdatedAt"
                            CreatedBy="@purchaseReturn?.CreatedBy"
                            UpdatedBy="@purchaseReturn?.UpdatedBy"
                            Remarks="@purchaseReturn?.ProcessRemarks"
                            ShowTimeline="true"
                            ShowRemarks="true" />
                    </div>
                }
            };
        }
        catch (Exception ex)
        {
            // 標籤頁設定失敗，記錄錯誤但返回基本結構
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(GetTabSections),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
            
            // 返回基本標籤頁結構
            return new List<GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection>
            {
                new GenericDetailPageComponent<PurchaseReturn, IPurchaseReturnService>.TabSection
                {
                    Id = "basic",
                    Title = "基本資料",
                    Content = @<div><p>載入錯誤，請重新整理頁面</p></div>
                }
            };
        }
    }

    // 取得採購退貨基本資料欄位
    private IEnumerable<BasicInfoDisplayComponent.BasicInfoField> GetPurchaseReturnBasicFields()
    {
        try
        {
            return new List<BasicInfoDisplayComponent.BasicInfoField>
            {
                new()
                {
                    Label = "退貨單號",
                    Value = purchaseReturn?.PurchaseReturnNumber,
                    IsPrimary = true,
                    ValueBold = true,
                    IconClass = "fas fa-barcode",
                    IconBgClass = "bg-primary bg-opacity-10",
                    IconTextClass = "text-primary",
                    EmptyText = "未設定"
                },
                new()
                {
                    Label = "退貨日期",
                    Value = purchaseReturn?.ReturnDate.ToString("yyyy/MM/dd"),
                    ValueBold = true,
                    IconClass = "fas fa-calendar",
                    IconBgClass = "bg-info bg-opacity-10",
                    IconTextClass = "text-info"
                },
                new()
                {
                    Label = "供應商",
                    Value = purchaseReturn?.Supplier?.CompanyName,
                    IconClass = "fas fa-building",
                    IconBgClass = "bg-success bg-opacity-10",
                    IconTextClass = "text-success"
                },
                new()
                {
                    Label = "退貨狀態",
                    CustomContent = @<div>
                        @if (purchaseReturn?.ReturnStatus != null)
                        {
                            <span class="badge @GetStatusBadgeClass(purchaseReturn.ReturnStatus)">
                                @GetReturnStatusDisplayName(purchaseReturn.ReturnStatus)
                            </span>
                        }
                    </div>,
                    IconClass = "fas fa-flag",
                    IconBgClass = "bg-warning bg-opacity-10",
                    IconTextClass = "text-warning"
                },
                new()
                {
                    Label = "退貨原因",
                    Value = purchaseReturn != null ? GetReturnReasonDisplayName(purchaseReturn.ReturnReason) : null,
                    IconClass = "fas fa-question-circle",
                    IconBgClass = "bg-secondary bg-opacity-10",
                    IconTextClass = "text-secondary"
                },
                new()
                {
                    Label = "處理人員",
                    Value = purchaseReturn?.Employee?.FirstName + " " + purchaseReturn?.Employee?.LastName ?? purchaseReturn?.ProcessPersonnel ?? "未指定",
                    IconClass = "fas fa-user",
                    IconBgClass = "bg-primary bg-opacity-10",
                    IconTextClass = "text-primary"
                },
                new()
                {
                    Label = "預計處理日期",
                    Value = purchaseReturn?.ExpectedProcessDate?.ToString("yyyy/MM/dd") ?? "未設定",
                    IconClass = "fas fa-calendar-check",
                    IconBgClass = "bg-info bg-opacity-10",
                    IconTextClass = "text-info"
                },
                new()
                {
                    Label = "實際處理日期",
                    Value = purchaseReturn?.ActualProcessDate?.ToString("yyyy/MM/dd") ?? "未處理",
                    IconClass = "fas fa-calendar-day",
                    IconBgClass = "bg-success bg-opacity-10",
                    IconTextClass = "text-success"
                },
                new()
                {
                    Label = "退貨說明",
                    Value = purchaseReturn?.ReturnDescription,
                    Format = BasicInfoDisplayComponent.FieldFormat.MultiLine,
                    IconClass = "fas fa-comment",
                    IconBgClass = "bg-warning bg-opacity-10",
                    IconTextClass = "text-warning",
                    ColSize = 12,
                    VisibilityCondition = () => !string.IsNullOrEmpty(purchaseReturn?.ReturnDescription)
                }
            };
        }
        catch (Exception ex)
        {
            // 基本資料欄位設定失敗，記錄錯誤但返回空列表
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(GetPurchaseReturnBasicFields),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
            
            return new List<BasicInfoDisplayComponent.BasicInfoField>();
        }
    }

    // 取得金額資訊欄位
    private IEnumerable<BasicInfoDisplayComponent.BasicInfoField> GetAmountFields()
    {
        try
        {
            return new List<BasicInfoDisplayComponent.BasicInfoField>
            {
                new()
                {
                    Label = "退貨總金額",
                    Value = purchaseReturn?.TotalReturnAmount.ToString("C"),
                    ValueBold = true,
                    IconClass = "fas fa-money-bill",
                    IconBgClass = "bg-success bg-opacity-10",
                    IconTextClass = "text-success"
                },
                new()
                {
                    Label = "退貨稅額",
                    Value = purchaseReturn?.ReturnTaxAmount.ToString("C"),
                    IconClass = "fas fa-percentage",
                    IconBgClass = "bg-info bg-opacity-10",
                    IconTextClass = "text-info"
                },
                new()
                {
                    Label = "含稅總金額",
                    Value = purchaseReturn?.TotalReturnAmountWithTax.ToString("C"),
                    ValueBold = true,
                    IsPrimary = true,
                    IconClass = "fas fa-calculator",
                    IconBgClass = "bg-primary bg-opacity-10",
                    IconTextClass = "text-primary"
                },
                new()
                {
                    Label = "退款狀態",
                    CustomContent = @<div>
                        @if (purchaseReturn != null)
                        {
                            <span class="badge @(purchaseReturn.IsRefunded ? "bg-success" : "bg-warning")">
                                @(purchaseReturn.IsRefunded ? "已退款" : "未退款")
                            </span>
                        }
                    </div>,
                    IconClass = "fas fa-credit-card",
                    IconBgClass = "bg-warning bg-opacity-10",
                    IconTextClass = "text-warning"
                },
                new()
                {
                    Label = "退款日期",
                    Value = purchaseReturn?.RefundDate?.ToString("yyyy/MM/dd") ?? "未設定",
                    IconClass = "fas fa-calendar",
                    IconBgClass = "bg-secondary bg-opacity-10",
                    IconTextClass = "text-secondary",
                    VisibilityCondition = () => purchaseReturn?.IsRefunded == true
                },
                new()
                {
                    Label = "退款金額",
                    Value = purchaseReturn?.RefundAmount.ToString("C"),
                    ValueBold = true,
                    IconClass = "fas fa-hand-holding-usd",
                    IconBgClass = "bg-success bg-opacity-10",
                    IconTextClass = "text-success",
                    VisibilityCondition = () => purchaseReturn?.IsRefunded == true
                },
                new()
                {
                    Label = "退款備註",
                    Value = purchaseReturn?.RefundRemarks,
                    Format = BasicInfoDisplayComponent.FieldFormat.MultiLine,
                    IconClass = "fas fa-sticky-note",
                    IconBgClass = "bg-warning bg-opacity-10",
                    IconTextClass = "text-warning",
                    ColSize = 12,
                    VisibilityCondition = () => !string.IsNullOrEmpty(purchaseReturn?.RefundRemarks)
                }
            };
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(GetAmountFields),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
            
            return new List<BasicInfoDisplayComponent.BasicInfoField>();
        }
    }

    // 取得相關資訊欄位
    private IEnumerable<BasicInfoDisplayComponent.BasicInfoField> GetRelatedInfoFields()
    {
        try
        {
            var fields = new List<BasicInfoDisplayComponent.BasicInfoField>();

            if (purchaseReturn?.PurchaseOrder != null)
            {
                fields.AddRange(new[]
                {
                    new BasicInfoDisplayComponent.BasicInfoField
                    {
                        Label = "原始採購訂單",
                        CustomContent = @<div>
                            <a href="/purchase/orders/detail/@purchaseReturn.PurchaseOrder.Id" class="text-decoration-none">
                                @purchaseReturn.PurchaseOrder.PurchaseOrderNumber
                            </a>
                        </div>,
                        IconClass = "fas fa-file-contract",
                        IconBgClass = "bg-primary bg-opacity-10",
                        IconTextClass = "text-primary"
                    },
                    new BasicInfoDisplayComponent.BasicInfoField
                    {
                        Label = "訂單日期",
                        Value = purchaseReturn.PurchaseOrder.OrderDate.ToString("yyyy/MM/dd"),
                        IconClass = "fas fa-calendar",
                        IconBgClass = "bg-info bg-opacity-10",
                        IconTextClass = "text-info"
                    },
                    new BasicInfoDisplayComponent.BasicInfoField
                    {
                        Label = "訂單狀態",
                        Value = purchaseReturn.PurchaseOrder.OrderStatus.ToString(),
                        IconClass = "fas fa-flag",
                        IconBgClass = "bg-secondary bg-opacity-10",
                        IconTextClass = "text-secondary"
                    }
                });
            }

            if (purchaseReturn?.PurchaseReceiving != null)
            {
                fields.AddRange(new[]
                {
                    new BasicInfoDisplayComponent.BasicInfoField
                    {
                        Label = "原始進貨單",
                        CustomContent = @<div>
                            <a href="/purchase/receivings/detail/@purchaseReturn.PurchaseReceiving.Id" class="text-decoration-none">
                                @purchaseReturn.PurchaseReceiving.ReceiptNumber
                            </a>
                        </div>,
                        IconClass = "fas fa-truck",
                        IconBgClass = "bg-success bg-opacity-10",
                        IconTextClass = "text-success"
                    },
                    new BasicInfoDisplayComponent.BasicInfoField
                    {
                        Label = "進貨日期",
                        Value = purchaseReturn.PurchaseReceiving.ReceiptDate.ToString("yyyy/MM/dd"),
                        IconClass = "fas fa-calendar",
                        IconBgClass = "bg-info bg-opacity-10",
                        IconTextClass = "text-info"
                    },
                    new BasicInfoDisplayComponent.BasicInfoField
                    {
                        Label = "進貨狀態",
                        Value = purchaseReturn.PurchaseReceiving.ReceiptStatus.ToString(),
                        IconClass = "fas fa-flag",
                        IconBgClass = "bg-secondary bg-opacity-10",
                        IconTextClass = "text-secondary"
                    }
                });
            }

            if (!fields.Any())
            {
                fields.Add(new BasicInfoDisplayComponent.BasicInfoField
                {
                    Label = "相關單據",
                    Value = "此退貨單未關聯到原始採購訂單或進貨單",
                    IconClass = "fas fa-info-circle",
                    IconBgClass = "bg-warning bg-opacity-10",
                    IconTextClass = "text-warning",
                    ColSize = 12
                });
            }

            return fields;
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(GetRelatedInfoFields),
                typeof(PurchaseReturnDetail),
                additionalData: new { PurchaseReturnId }
            );
            
            return new List<BasicInfoDisplayComponent.BasicInfoField>();
        }
    }

    private string GetStatusBadgeClass(PurchaseReturnStatus status)
    {
        return status switch
        {
            PurchaseReturnStatus.Draft => "bg-secondary",
            PurchaseReturnStatus.Submitted => "bg-info",
            PurchaseReturnStatus.Confirmed => "bg-primary",
            PurchaseReturnStatus.Processing => "bg-warning",
            PurchaseReturnStatus.Completed => "bg-success",
            PurchaseReturnStatus.Cancelled => "bg-danger",
            PurchaseReturnStatus.Closed => "bg-dark",
            _ => "bg-secondary"
        };
    }

    private string GetReturnStatusDisplayName(PurchaseReturnStatus status)
    {
        return status switch
        {
            PurchaseReturnStatus.Draft => "草稿",
            PurchaseReturnStatus.Submitted => "已送出",
            PurchaseReturnStatus.Confirmed => "已確認",
            PurchaseReturnStatus.Processing => "處理中",
            PurchaseReturnStatus.Completed => "已完成",
            PurchaseReturnStatus.Cancelled => "已取消",
            PurchaseReturnStatus.Closed => "已關閉",
            _ => status.ToString()
        };
    }

    private string GetReturnReasonDisplayName(PurchaseReturnReason reason)
    {
        return reason switch
        {
            PurchaseReturnReason.QualityIssue => "品質不良",
            PurchaseReturnReason.SpecificationMismatch => "規格不符",
            PurchaseReturnReason.QuantityError => "數量錯誤",
            PurchaseReturnReason.ExpiredProduct => "過期商品",
            PurchaseReturnReason.ShippingDamage => "運送損壞",
            PurchaseReturnReason.SupplierRequest => "廠商要求",
            PurchaseReturnReason.Other => "其他",
            _ => reason.ToString()
        };
    }
}
