@inject ICompanyService CompanyService
@inject INotificationService NotificationService

<GenericEditModalComponent TEntity="Company"
                          TService="ICompanyService"
                          @ref="editModalComponent"
                          Service="@CompanyService"
                          IsVisible="@IsVisible"
                          IsVisibleChanged="@IsVisibleChanged"
                          Id="@CompanyId"
                          ModalTitle="@(CompanyId.HasValue ? "編輯公司" : "新增公司")"
                          EntityName="公司"
                          OnSaveSuccess="@OnSaveSuccess"
                          OnCancel="@OnCancel"
                          ValidationRules="@validationRules"
                          CustomFormFields="@customFormFields" />

@code {
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback<bool> IsVisibleChanged { get; set; }
    [Parameter] public int? CompanyId { get; set; }
    [Parameter] public EventCallback<Company> OnCompanySaved { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    private GenericEditModalComponent<Company, ICompanyService>? editModalComponent;
    private List<FormFieldDefinition> customFormFields = new();
    private Dictionary<string, Func<object?, string?>> validationRules = new();

    protected override void OnInitialized()
    {
        SetupCustomFormFields();
        SetupValidationRules();
    }

    private async Task OnSaveSuccess()
    {
        try
        {
            if (editModalComponent?.Entity != null)
            {
                await OnCompanySaved.InvokeAsync(editModalComponent.Entity);
            }
        }
        catch (Exception)
        {
            // 錯誤處理可以在這裡添加
        }
    }

    private void SetupCustomFormFields()
    {
        customFormFields = new List<FormFieldDefinition>
        {
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Code),
                Label = "公司代碼",
                FieldType = FormFieldType.Text,
                IsRequired = true,
                MaxLength = 10,
                Order = 1,
                HelpText = "公司的唯一識別代碼"
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.CompanyName),
                Label = "公司名稱",
                FieldType = FormFieldType.Text,
                IsRequired = true,
                MaxLength = 100,
                Order = 2
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.CompanyNameEn),
                Label = "公司英文名稱",
                FieldType = FormFieldType.Text,
                MaxLength = 100,
                Order = 3
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.TaxId),
                Label = "統一編號",
                FieldType = FormFieldType.Text,
                MaxLength = 8,
                Order = 4,
                HelpText = "8位數字的統一編號"
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Representative),
                Label = "負責人",
                FieldType = FormFieldType.Text,
                MaxLength = 50,
                Order = 5
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Address),
                Label = "公司地址",
                FieldType = FormFieldType.TextArea,
                MaxLength = 200,
                Order = 6,
                Rows = 2
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Phone),
                Label = "公司電話",
                FieldType = FormFieldType.Text,
                MaxLength = 20,
                Order = 7
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Fax),
                Label = "公司傳真",
                FieldType = FormFieldType.Text,
                MaxLength = 20,
                Order = 8
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Email),
                Label = "公司Email",
                FieldType = FormFieldType.Email,
                MaxLength = 100,
                Order = 9
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Website),
                Label = "公司網站",
                FieldType = FormFieldType.Text,
                MaxLength = 100,
                Order = 10,
                HelpText = "請輸入完整的網址，例如：https://www.example.com"
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.IsPrimary),
                Label = "設為主要公司",
                FieldType = FormFieldType.Checkbox,
                Order = 11,
                HelpText = "主要公司會作為系統預設公司顯示在報表中"
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Description),
                Label = "公司簡介",
                FieldType = FormFieldType.TextArea,
                MaxLength = 1000,
                Order = 12,
                Rows = 4
            },
            new FormFieldDefinition
            {
                PropertyName = nameof(Company.Status),
                Label = "狀態",
                FieldType = FormFieldType.Select,
                IsRequired = true,
                Order = 13,
                Options = EntityStatusHelper.GetEntityStatusOptions()
            }
        };
    }

    private void SetupValidationRules()
    {
        validationRules = new Dictionary<string, Func<object?, string?>>
        {
            {
                nameof(Company.Code),
                value =>
                {
                    var code = value?.ToString();
                    if (string.IsNullOrWhiteSpace(code))
                        return "公司代碼為必填";
                    
                    if (code.Length > 10)
                        return "公司代碼不可超過10個字元";
                    
                    return null;
                }
            },
            {
                nameof(Company.CompanyName),
                value =>
                {
                    var name = value?.ToString();
                    if (string.IsNullOrWhiteSpace(name))
                        return "公司名稱為必填";
                    
                    if (name.Length > 100)
                        return "公司名稱不可超過100個字元";
                    
                    return null;
                }
            },
            {
                nameof(Company.TaxId),
                value =>
                {
                    var taxId = value?.ToString();
                    if (!string.IsNullOrWhiteSpace(taxId))
                    {
                        if (!CompanyService.ValidateTaxId(taxId))
                            return "統一編號格式不正確，請輸入8位數字";
                    }
                    return null;
                }
            },
            {
                nameof(Company.Email),
                value =>
                {
                    var email = value?.ToString();
                    if (!string.IsNullOrWhiteSpace(email))
                    {
                        // 簡單的Email格式驗證
                        if (!email.Contains("@") || !email.Contains("."))
                            return "請輸入正確的Email格式";
                    }
                    return null;
                }
            },
            {
                nameof(Company.Website),
                value =>
                {
                    var website = value?.ToString();
                    if (!string.IsNullOrWhiteSpace(website))
                    {
                        // 簡單的URL格式驗證
                        if (!website.StartsWith("http://") && !website.StartsWith("https://"))
                            return "網站URL應以 http:// 或 https:// 開頭";
                    }
                    return null;
                }
            }
        };
    }
}
