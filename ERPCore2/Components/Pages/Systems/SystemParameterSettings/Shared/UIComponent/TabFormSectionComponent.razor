@* Tab 表單區段元件 - 用於組織相關的表單欄位 *@

<div class="mb-4 @CssClass">
    @if (!string.IsNullOrEmpty(Title))
    {
        <div class="mb-3">
            <h6 class="text-primary border-bottom pb-2 mb-3">
                @if (!string.IsNullOrEmpty(IconClass))
                {
                    <i class="@IconClass me-2"></i>
                }
                @Title
            </h6>
            @if (!string.IsNullOrEmpty(Description))
            {
                <p class="text-muted small mb-0">@Description</p>
            }
        </div>
    }
    
    @* 按鈕區塊 - 放在最上方 *@
    @if (ActionButtons != null || StatusMessage != null)
    {
        <div class="border-bottom mb-2 pb-2 d-flex align-items-center">
            @* 最左側：自訂操作按鈕 *@
            @if (ActionButtons != null)
            {
                <div class="d-flex gap-2 me-auto">
                    @ActionButtons
                </div>
            }
            
            @* 右側：狀態訊息顯示 *@
            @if (StatusMessage != null)
            {
                <div class="@(ActionButtons == null ? "flex-grow-1" : "")">
                    @StatusMessage
                </div>
            }
        </div>
    }
    
    <div class="@ContentCssClass">
        @ChildContent
    </div>
</div>

@code {
    /// <summary>
    /// 區段標題
    /// </summary>
    [Parameter]
    public string Title { get; set; } = string.Empty;

    /// <summary>
    /// 區段說明文字
    /// </summary>
    [Parameter]
    public string Description { get; set; } = string.Empty;

    /// <summary>
    /// 標題圖示 CSS 類別 (Font Awesome)
    /// </summary>
    [Parameter]
    public string IconClass { get; set; } = string.Empty;

    /// <summary>
    /// 區段容器的 CSS 類別
    /// </summary>
    [Parameter]
    public string CssClass { get; set; } = string.Empty;

    /// <summary>
    /// 內容區域的 CSS 類別
    /// </summary>
    [Parameter]
    public string ContentCssClass { get; set; } = string.Empty;

    /// <summary>
    /// 區段內容（通常包含多個 TabFormFieldComponent）
    /// </summary>
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    
    /// <summary>
    /// 自訂操作按鈕區域（顯示在區段頂部的最左側）
    /// </summary>
    [Parameter]
    public RenderFragment? ActionButtons { get; set; }
    
    /// <summary>
    /// 狀態訊息區域（顯示在區段頂部的右側）
    /// </summary>
    [Parameter]
    public RenderFragment? StatusMessage { get; set; }
}
