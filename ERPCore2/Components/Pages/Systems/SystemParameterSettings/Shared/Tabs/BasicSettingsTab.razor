@* 系統參數 - 基本設定標籤頁 *@
@using Microsoft.AspNetCore.Components.Forms
@using ERPCore2.Data.Entities
@using ERPCore2.Components.Pages.Systems.SystemParameterSettings.Shared.UIComponent

<EditForm Model="@Model" OnValidSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary class="text-danger mb-3" />

    <div class="row">
        <div class="col-lg-8">
            @* 使用統一的表單區段元件 *@
            <TabFormSectionComponent Title="基本設定" 
                                    IconClass="fas fa-cog"
                                    Description="設定系統全域的基本參數">
                
                @* 稅率設定欄位 *@
                <TabFormFieldComponent Label="稅率設定" 
                                      IconClass="fas fa-percentage"
                                      IsRequired="true"
                                      HelpText="設定系統預設稅率，範圍為 0% 到 100%">
                    <ChildContent>
                        <div class="input-group">
                            <InputNumber @bind-Value="Model.TaxRate" 
                                       class="form-control" 
                                       placeholder="請輸入稅率" 
                                       step="0.01"
                                       min="0"
                                       max="100" />
                            <span class="input-group-text">%</span>
                        </div>
                    </ChildContent>
                    <ValidationContent>
                        <ValidationMessage For="@(() => Model.TaxRate)" class="text-danger" />
                    </ValidationContent>
                </TabFormFieldComponent>

                @* 備註欄位 *@
                <TabFormFieldComponent Label="備註" 
                                      IconClass="fas fa-comment"
                                      HelpText="可添加關於此設定的說明或備註">
                    <ChildContent>
                        <InputTextArea @bind-Value="Model.Remarks" 
                                     class="form-control" 
                                     placeholder="可選填備註資訊"
                                     rows="3" />
                    </ChildContent>
                </TabFormFieldComponent>

            </TabFormSectionComponent>

            @* 按鈕區域 *@
            <div class="row">
                <div class="col-sm-9 offset-sm-3">
                    <div class="d-flex gap-2">
                        <button type="submit" 
                              class="btn btn-primary" 
                              disabled="@IsSaving">
                            @if (IsSaving)
                            {
                                <span class="spinner-border spinner-border-sm me-2"></span>
                                <span>儲存中...</span>
                            }
                            else
                            {
                                <i class="fas fa-save me-2"></i>
                                <span>儲存設定</span>
                            }
                        </button>
                        
                        <button type="button" 
                              class="btn btn-secondary" 
                              @onclick="HandleReload"
                              disabled="@IsSaving">
                            <i class="fas fa-undo me-2"></i>
                            重新載入
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@code {
    /// <summary>
    /// 系統參數模型
    /// </summary>
    [Parameter]
    public SystemParameter Model { get; set; } = new();

    /// <summary>
    /// 儲存事件回調
    /// </summary>
    [Parameter]
    public EventCallback OnSave { get; set; }

    /// <summary>
    /// 重新載入事件回調
    /// </summary>
    [Parameter]
    public EventCallback OnReload { get; set; }

    /// <summary>
    /// 是否正在儲存
    /// </summary>
    [Parameter]
    public bool IsSaving { get; set; } = false;

    /// <summary>
    /// 處理表單提交
    /// </summary>
    private async Task HandleSubmit()
    {
        await OnSave.InvokeAsync();
    }

    /// <summary>
    /// 處理重新載入
    /// </summary>
    private async Task HandleReload()
    {
        await OnReload.InvokeAsync();
    }
}
