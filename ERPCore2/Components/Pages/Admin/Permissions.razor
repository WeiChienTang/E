@page "/admin/permissions"
@using ERPCore2.Data.Entities
@using ERPCore2.Services.Interfaces
@using ERPCore2.Data.Enums
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Components.Shared.Buttons
@using ERPCore2.Components.Shared.Loading
@using ERPCore2.Components.Shared
@inject IPermissionManagementService PermissionManagementService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>權限管理</PageTitle>

<div class="container-fluid">
    @* 頁面標題 *@
    <UnifiedHeaderComponent Title="權限管理" 
                           IconClass="bi bi-shield-check"
                           IsCardHeader="false"
                           Subtitle="管理系統功能權限設定">
        <Actions>
            <ButtonComponent Text="初始化預設權限" 
                            Variant="ButtonVariant.Success" 
                            IconClass="bi bi-bootstrap-reboot"
                            IsLoading="isInitializing"
                            LoadingText="初始化中..."
                            OnClick="InitializeDefaultPermissions" />
            <ButtonComponent Text="新增權限" 
                            Variant="ButtonVariant.Primary" 
                            IconClass="bi bi-plus-circle"
                            OnClick="ShowCreateModal" />
        </Actions>
    </UnifiedHeaderComponent>

    @* 搜尋和篩選 *@        <AdminPermissionSearchFilterComponent SearchTerm="searchTerm"
                                         FilterGroup="filterGroup"
                                         FilterStatus="filterStatus"
                                         AvailableGroups="availableGroups"
                                         OnSearchChanged="OnSearchChanged"
                                         OnFilterChanged="OnFilterChanged"
                                         OnClearFilters="OnClearFilters" />

    @if (isLoading)
    {
        <LoadingComponent LoadingText="載入權限資料中..." />
    }
    else
    {
        @* 權限列表 *@
        <div class="card">
            <div class="card-header">
                <h5 class="card-title mb-0">
                    <i class="bi bi-list-check me-2"></i>權限列表
                    @if (filteredPermissions != null)
                    {
                        <span class="badge bg-primary ms-2">@filteredPermissions.Count</span>
                    }
                </h5>
            </div>
            <div class="card-body">
                @if (filteredPermissions != null && filteredPermissions.Any())
                {
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>權限代碼</th>
                                    <th>權限名稱</th>
                                    <th>群組</th>
                                    <th>動作</th>
                                    <th>狀態</th>
                                    <th>建立時間</th>
                                    <th>操作</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var permission in filteredPermissions)
                                {
                                    <tr>
                                        <td>
                                            <code class="text-primary">@permission.PermissionCode</code>
                                        </td>
                                        <td>
                                            <div class="fw-semibold">@permission.PermissionName</div>                                            @if (!string.IsNullOrEmpty(permission.Remarks))
                                            {
                                                <small class="text-muted">@permission.Remarks</small>
                                            }
                                        </td>
                                        <td>
                                            <span class="badge bg-info">@permission.PermissionGroup</span>
                                        </td>
                                        <td>
                                            <span class="badge bg-secondary">@permission.Action</span>
                                        </td>
                                        <td>
                                            @if (permission.Status == EntityStatus.Active)
                                            {
                                                <span class="badge bg-success">啟用</span>
                                            }
                                            else
                                            {
                                                <span class="badge bg-secondary">停用</span>
                                            }
                                        </td>
                                        <td>
                                            <small class="text-muted">
                                                @permission.CreatedAt.ToString("yyyy/MM/dd HH:mm")
                                            </small>
                                        </td>
                                        <td>
                                            <div class="btn-group btn-group-sm">
                                                <ButtonComponent Text="編輯" 
                                                                Variant="ButtonVariant.OutlineWarning" 
                                                                Size="ButtonSize.Small"
                                                                IconClass="bi bi-pencil"
                                                                OnClick="@(() => EditPermission(permission.Id))" />
                                                <ButtonComponent Text="刪除" 
                                                                Variant="ButtonVariant.OutlineDanger" 
                                                                Size="ButtonSize.Small"
                                                                IconClass="bi bi-trash"
                                                                OnClick="@(() => DeletePermission(permission.Id))" />
                                            </div>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                }
                else
                {
                    <div class="text-center py-5">
                        <i class="bi bi-shield-x display-1 text-muted"></i>
                        <h5 class="mt-3">沒有找到權限資料</h5>
                        <p class="text-muted">請檢查篩選條件或新增權限</p>
                    </div>
                }
            </div>
        </div>
    }
</div>

@* 錯誤訊息 *@
@if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger mt-3">
        <i class="bi bi-exclamation-triangle me-2"></i>@errorMessage
    </div>
}

@* 成功訊息 *@
@if (!string.IsNullOrEmpty(successMessage))
{
    <div class="alert alert-success mt-3">
        <i class="bi bi-check-circle me-2"></i>@successMessage
    </div>
}

@code {
    private List<Permission>? permissions;
    private List<Permission>? filteredPermissions;
    private List<string> availableGroups = new();
    
    // 篩選條件
    private string searchTerm = string.Empty;
    private string filterGroup = string.Empty;
    private EntityStatus? filterStatus;
    
    // 狀態管理
    private bool isLoading = true;
    private bool isInitializing = false;
    private string errorMessage = string.Empty;
    private string successMessage = string.Empty;

    protected override async Task OnInitializedAsync()
    {
        await LoadPermissions();
    }    private async Task LoadPermissions()
    {
        try
        {
            isLoading = true;
            errorMessage = string.Empty;

            permissions = await PermissionManagementService.GetAllAsync();
            UpdateAvailableGroups();
            ApplyFilters();
        }
        catch (Exception ex)
        {
            errorMessage = $"載入權限資料時發生錯誤：{ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void UpdateAvailableGroups()
    {        if (permissions != null)
        {
            availableGroups = permissions
                .Where(p => !string.IsNullOrEmpty(p.PermissionGroup))
                .Select(p => p.PermissionGroup!)
                .Distinct()
                .OrderBy(g => g)
                .ToList();
        }
    }

    private void ApplyFilters()
    {
        if (permissions == null)
        {
            filteredPermissions = null;
            return;
        }

        var query = permissions.AsQueryable();

        // 搜尋關鍵字
        if (!string.IsNullOrEmpty(searchTerm))
        {
            query = query.Where(p => 
                p.PermissionName.Contains(searchTerm, StringComparison.OrdinalIgnoreCase) ||
                p.PermissionCode.Contains(searchTerm, StringComparison.OrdinalIgnoreCase));
        }        // 群組篩選
        if (!string.IsNullOrEmpty(filterGroup))
        {
            query = query.Where(p => p.PermissionGroup == filterGroup);
        }

        // 狀態篩選
        if (filterStatus.HasValue)
        {
            query = query.Where(p => p.Status == filterStatus.Value);
        }

        filteredPermissions = query.OrderBy(p => p.PermissionGroup).ThenBy(p => p.PermissionCode).ToList();
    }    private Task OnSearchChanged(string newSearchTerm)
    {
        searchTerm = newSearchTerm;
        ApplyFilters();
        return Task.CompletedTask;
    }private Task OnFilterChanged()
    {
        ApplyFilters();
        return Task.CompletedTask;
    }

    private Task OnClearFilters()
    {
        searchTerm = string.Empty;
        filterGroup = string.Empty;
        filterStatus = null;
        ApplyFilters();
        return Task.CompletedTask;
    }

    private async Task InitializeDefaultPermissions()
    {
        try
        {
            isInitializing = true;
            errorMessage = string.Empty;
            successMessage = string.Empty;

            var result = await PermissionManagementService.InitializeDefaultPermissionsAsync();
            if (result.IsSuccess)
            {
                successMessage = "預設權限初始化成功";
                await LoadPermissions();
            }
            else
            {
                errorMessage = result.ErrorMessage ?? "初始化預設權限失敗";
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"初始化預設權限時發生錯誤：{ex.Message}";
        }
        finally
        {
            isInitializing = false;
        }
    }

    private void ShowCreateModal()
    {
        // TODO: 實作新增權限模態視窗
        Console.WriteLine("顯示新增權限模態視窗");
    }

    private void EditPermission(int permissionId)
    {
        // TODO: 實作編輯權限功能
        Console.WriteLine($"編輯權限 ID: {permissionId}");
    }    private Task DeletePermission(int permissionId)
    {
        // TODO: 實作刪除權限功能
        Console.WriteLine($"刪除權限 ID: {permissionId}");
        return Task.CompletedTask;
    }
}
