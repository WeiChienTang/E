@page "/examples/pagination-table"
@using ERPCore2.Data.Entities.Customers
@using ERPCore2.Services
@using ERPCore2.Components.Shared.Tables
@inject CustomerService CustomerService
@inject IJSRuntime JSRuntime

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h3>
                <i class="fas fa-table text-primary me-2"></i>
                分頁表格示例
            </h3>
            <p class="text-muted mb-0">演示 GenericTableComponent 的分頁功能</p>
        </div>
    </div>

    <!-- 分頁表格 -->
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h5 class="card-title mb-0">
                <i class="fas fa-users me-2"></i>
                客戶資料 (分頁顯示)
            </h5>
        </div>
        <div class="card-body">
            <GenericTableComponent TItem="Customer"
                                 Items="customers"
                                 ColumnDefinitions="GetColumnDefinitions()"
                                 EnablePagination="true"
                                 CurrentPage="currentPage"
                                 PageSize="pageSize"
                                 TotalItems="totalItems"
                                 OnPageChanged="HandlePageChanged"
                                 OnPageSizeChanged="HandlePageSizeChanged"
                                 ShowPageSizeSelector="true"
                                 PageSizeOptions="pageSizeOptions"
                                 MaxDisplayedPages="5"
                                 IsStriped="true"
                                 IsHoverable="true"
                                 EmptyMessage="目前沒有客戶資料" />
        </div>
    </div>

    <!-- 控制面板 -->
    <div class="card mt-4">
        <div class="card-header">
            <h6 class="card-title mb-0">分頁控制資訊</h6>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <strong>當前頁數:</strong> @currentPage
                </div>
                <div class="col-md-3">
                    <strong>每頁筆數:</strong> @pageSize
                </div>
                <div class="col-md-3">
                    <strong>總筆數:</strong> @totalItems
                </div>
                <div class="col-md-3">
                    <strong>總頁數:</strong> @((int)Math.Ceiling((double)totalItems / pageSize))
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private List<Customer> customers = new();
    private int currentPage = 1;
    private int pageSize = 10;
    private int totalItems = 0;
    private List<int> pageSizeOptions = new() { 5, 10, 20, 50 };

    protected override async Task OnInitializedAsync()
    {
        await LoadCustomers();
    }    private async Task LoadCustomers()
    {
        try
        {
            // 使用服務的分頁方法（CustomerService 繼承自 GenericManagementService）
            var result = await CustomerService.GetPagedAsync(currentPage, pageSize);
            customers = result.Items;
            totalItems = result.TotalCount;
            
            StateHasChanged();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", $"載入客戶資料時發生錯誤: {ex.Message}");
        }
    }

    private async Task HandlePageChanged(int newPage)
    {
        currentPage = newPage;
        await LoadCustomers();
    }

    private async Task HandlePageSizeChanged(int newPageSize)
    {
        pageSize = newPageSize;
        currentPage = 1; // 重設為第一頁
        await LoadCustomers();
    }

    private List<TableColumnDefinition> GetColumnDefinitions()
    {
        return new List<TableColumnDefinition>
        {
            new TableColumnDefinition
            {
                PropertyName = "CustomerCode",
                Title = "客戶代碼",
                DataType = ColumnDataType.Text,
                IsSortable = true,
                HeaderCssClass = "text-center",
                CellCssClass = "text-center font-monospace"
            },
            new TableColumnDefinition
            {
                PropertyName = "CustomerName",
                Title = "客戶名稱",
                DataType = ColumnDataType.Text,
                IsSortable = true
            },
            new TableColumnDefinition
            {
                PropertyName = "CustomerType.TypeName",
                Title = "客戶類型",
                DataType = ColumnDataType.Text,
                NullDisplayText = "未分類"
            },
            new TableColumnDefinition
            {
                PropertyName = "ContactPerson",
                Title = "聯絡人",
                DataType = ColumnDataType.Text,
                NullDisplayText = "-"
            },
            new TableColumnDefinition
            {
                PropertyName = "Phone",
                Title = "電話",
                DataType = ColumnDataType.Text,
                NullDisplayText = "-"
            },
            new TableColumnDefinition
            {
                PropertyName = "Status",
                Title = "狀態",
                DataType = ColumnDataType.Status,
                StatusBadgeMap = new Dictionary<object, string>
                {
                    { ERPCore2.Data.Enums.EntityStatus.Active, "bg-success" },
                    { ERPCore2.Data.Enums.EntityStatus.Inactive, "bg-secondary" },
                    { ERPCore2.Data.Enums.EntityStatus.Archived, "bg-warning" }
                }
            },
            new TableColumnDefinition
            {
                PropertyName = "CreatedAt",
                Title = "建立時間",
                DataType = ColumnDataType.DateTime,
                Format = "yyyy/MM/dd"
            }
        };
    }
}
