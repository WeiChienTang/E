@page "/materials/detail/{materialId:int}"
@using ERPCore2.Components.Shared
@using ERPCore2.Components.Shared.Details
@using ERPCore2.Components.Shared.Badges
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Data.Entities
@using ERPCore2.Data.Enums
@inject IMaterialService MaterialService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>材質詳細資料</PageTitle>

<GenericDetailPageComponent TEntity="Material" 
                           TService="IMaterialService"
                           EntityId="@MaterialId"
                           Entity="@material"
                           Service="@MaterialService"
                           EntityName="材質"
                           EntityNamePlural="材質"
                           IndexRoute="/materials"
                           EditRoute="/materials/edit"
                           LoadingText="載入材質資料中..."
                           BreadcrumbItems="@breadcrumbItems"
                           DataLoader="@LoadMaterialDataAsync"
                           AdditionalDataLoader="@LoadAdditionalDataAsync"
                           EntityTitleSelector="@(m => m.Name)"
                           EntitySubtitleSelector="@(m => $"材質代碼：{m.Code ?? "未設定"}")"
                           EntityDisplayNameSelector="@(m => m.Name)"
                           OnDataLoaded="@OnMaterialDataLoaded"
                           UseTabLayout="true"
                           TabSections="@GetTabSections()">
</GenericDetailPageComponent>

@code {
    [Parameter] public int MaterialId { get; set; }

    private Material? material;
    private bool _isLoading = false;

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("基礎資料", "#"),
        new("材質管理", "/materials"),
        new("材質詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<Material?> LoadMaterialDataAsync()
    {
        if (_isLoading)
        {
            Console.WriteLine("[MaterialDetail] 載入中，跳過重複調用");
            return material;
        }
        
        try
        {
            _isLoading = true;
            if (MaterialId <= 0) return null;
            
            var result = await MaterialService.GetByIdAsync(MaterialId);
            material = result;
            return result;
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"[MaterialDetail] 載入材質資料失敗：{ex.Message}");
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private Task LoadAdditionalDataAsync()
    {
        return Task.CompletedTask;
    }

    private Task OnMaterialDataLoaded()
    {
        StateHasChanged();
        return Task.CompletedTask;
    }

    // 設定標籤頁結構
    private List<GenericDetailPageComponent<Material, IMaterialService>.TabSection> GetTabSections()
    {
        return new List<GenericDetailPageComponent<Material, IMaterialService>.TabSection>
        {            new GenericDetailPageComponent<Material, IMaterialService>.TabSection
            {
                Id = "basic",
                Title = "基本資料",
                Content = @<div>
                    <BasicInfoDisplayComponent 
                        Title="材質基本資訊"
                        IconClass="fas fa-cube"
                        IconColor="text-primary"
                        Fields="@GetMaterialBasicFields()" />
                </div>
            },
            
            new GenericDetailPageComponent<Material, IMaterialService>.TabSection
            {
                Id = "physical",
                Title = "物理特性",
                Content = @<div class="row">
                    @if (material?.Density.HasValue == true)
                    {
                        <DetailFieldComponent Label="密度" Value="@($"{material.Density} g/cm³")" />
                    }
                    @if (material?.MeltingPoint.HasValue == true)
                    {
                        <DetailFieldComponent Label="熔點" Value="@($"{material.MeltingPoint}°C")" />
                    }
                    @if (material?.Density == null && material?.MeltingPoint == null)
                    {
                        <div class="text-muted p-3 text-center col-12">
                            <i class="fas fa-flask fa-2x mb-2 d-block"></i>
                            尚未設定物理特性
                        </div>
                    }
                </div>
            },
              new GenericDetailPageComponent<Material, IMaterialService>.TabSection
            {
                Id = "system",
                Title = "系統資訊",
                Content = @<div>
                    <SystemInfoDisplayComponent 
                        CreatedAt="@(material?.CreatedAt ?? DateTime.MinValue)"
                        UpdatedAt="@material?.UpdatedAt"
                        CreatedBy="@material?.CreatedBy"
                        UpdatedBy="@material?.UpdatedBy"
                        Remarks="@material?.Remarks"
                        ShowTimeline="true"
                        ShowRemarks="true" />
                </div>
            }        };
    }

    // 取得材質基本資料欄位
    private IEnumerable<BasicInfoDisplayComponent.BasicInfoField> GetMaterialBasicFields()
    {
        return new List<BasicInfoDisplayComponent.BasicInfoField>
        {
            new()
            {
                Label = "材質代碼",
                Value = material?.Code,
                IsPrimary = true,
                ValueBold = true,
                EmptyText = "未設定",
                IconClass = "fas fa-barcode",
                IconBgClass = "bg-primary bg-opacity-10",
                IconTextClass = "text-primary",
                ColSize = 6
            },
            new()
            {
                Label = "材質名稱",
                Value = material?.Name,
                ValueBold = true,
                IconClass = "fas fa-cube",
                IconBgClass = "bg-info bg-opacity-10",
                IconTextClass = "text-info",
                ColSize = 6
            },
            new()
            {
                Label = "材質類別",
                Value = material?.Category,
                IconClass = "fas fa-tags",
                IconBgClass = "bg-warning bg-opacity-10",
                IconTextClass = "text-warning",
                ColSize = 6,
                VisibilityCondition = () => !string.IsNullOrEmpty(material?.Category)
            },
            new()
            {
                Label = "環保材質",
                CustomContent = @<div>
                    @if (material?.IsEcoFriendly == true)
                    {
                        <span class="badge bg-success">是</span>
                    }
                    else
                    {
                        <span class="badge bg-secondary">否</span>
                    }
                </div>,
                IconClass = "fas fa-leaf",
                IconBgClass = "bg-success bg-opacity-10",
                IconTextClass = "text-success",
                ColSize = 6
            },
            new()
            {
                Label = "狀態",
                CustomContent = @<div>
                    @if (material?.Status != null)
                    {
                        <StatusBadgeComponent Status="@material.Status" />
                    }
                </div>,
                IconClass = "fas fa-toggle-on",
                IconBgClass = "bg-info bg-opacity-10",
                IconTextClass = "text-info",
                ColSize = 6
            },
            new()
            {
                Label = "描述",
                Value = material?.Description,
                Format = BasicInfoDisplayComponent.FieldFormat.MultiLine,
                IconClass = "fas fa-align-left",
                IconBgClass = "bg-secondary bg-opacity-10",
                IconTextClass = "text-secondary",
                ColSize = 12,
                VisibilityCondition = () => !string.IsNullOrEmpty(material?.Description)
            },
            new()
            {
                Label = "備註",
                Value = material?.Remarks,
                Format = BasicInfoDisplayComponent.FieldFormat.MultiLine,
                IconClass = "fas fa-sticky-note",
                IconBgClass = "bg-warning bg-opacity-10",
                IconTextClass = "text-warning",
                ColSize = 12,
                VisibilityCondition = () => !string.IsNullOrEmpty(material?.Remarks)
            }
        };
    }
}
