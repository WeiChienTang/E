@page "/customer-types/detail/{customerTypeId:int}"
@using ERPCore2.Components.Shared
@using ERPCore2.Components.Shared.Details
@using ERPCore2.Components.Shared.Badges
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Data.Entities
@using ERPCore2.Data.Enums
@using ERPCore2.Services
@inject ICustomerTypeService CustomerTypeService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>客戶類型詳細資料</PageTitle>

<GenericDetailPageComponent TEntity="CustomerType" 
                           TService="ICustomerTypeService"
                           EntityId="@CustomerTypeId"
                           Entity="@customerType"
                           Service="@CustomerTypeService"
                           EntityName="客戶類型"
                           EntityNamePlural="客戶類型"
                           IndexRoute="/customer-types"
                           EditRoute="/customer-types/edit"
                           LoadingText="載入客戶類型資料中..."
                           BreadcrumbItems="@breadcrumbItems"
                           DataLoader="@LoadCustomerTypeDataAsync"
                           EntityTitleSelector="@(ct => ct.TypeName)"
                           EntitySubtitleSelector="@(ct => $"描述：{ct.Description ?? "未設定"}")"                           EntityDisplayNameSelector="@(ct => ct.TypeName)"
                           OnDataLoaded="@OnCustomerTypeDataLoaded"                           UseTabLayout="true"
                           TabSections="@GetTabSections()">
</GenericDetailPageComponent>

@code {
    [Parameter] public int CustomerTypeId { get; set; }

    private CustomerType? customerType;
    private bool _isLoading = false; // 防止重複載入

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("客戶管理", "/customers"),
        new("客戶類型管理", "/customer-types"),
        new("客戶類型詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<CustomerType?> LoadCustomerTypeDataAsync()
    {
        // 防止重複載入
        if (_isLoading)
        {
            Console.WriteLine("[CustomerTypeDetail] 載入中，跳過重複調用");
            return customerType;
        }
        
        try
        {
            _isLoading = true;
            if (CustomerTypeId <= 0) return null;
              var result = await CustomerTypeService.GetByIdAsync(CustomerTypeId);
            customerType = result; // 保持本地變數同步
            
            return result;
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"[CustomerTypeDetail] 載入客戶類型資料失敗：{ex.Message}");
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private Task OnCustomerTypeDataLoaded()
    {
        // 資料載入完成後的處理
        StateHasChanged();
        return Task.CompletedTask;
    }

    // 設定標籤頁結構
    private List<GenericDetailPageComponent<CustomerType, ICustomerTypeService>.TabSection> GetTabSections()
    {
        return new List<GenericDetailPageComponent<CustomerType, ICustomerTypeService>.TabSection>
        {
            new GenericDetailPageComponent<CustomerType, ICustomerTypeService>.TabSection
            {
                Id = "basic",
                Title = "基本資料",
                Content = @<div class="row">
                    <DetailFieldComponent Label="類型名稱" Value="@customerType?.TypeName" IsPrimary="true" IsBold="true" />
                    <DetailFieldComponent Label="描述" Value="@customerType?.Description" EmptyText="未設定" ColSize="12" />
                    <DetailFieldComponent Label="狀態">
                        @if (customerType?.Status != null)
                        {
                            <StatusBadgeComponent Status="@customerType.Status" />
                        }
                    </DetailFieldComponent>
                    @if (!string.IsNullOrEmpty(customerType?.Remarks))
                    {
                        <DetailFieldComponent Label="備註" Value="@customerType.Remarks" ColSize="12" />
                    }
                </div>
            },
            
            new GenericDetailPageComponent<CustomerType, ICustomerTypeService>.TabSection
            {
                Id = "statistics",
                Title = "使用統計",
                Content = @<div>
                    <div class="row mb-3">
                        <DetailFieldComponent Label="使用此類型的客戶數" Value="@(customerType?.Customers?.Count().ToString() ?? "0")" IsBold="true" />
                    </div>
                    @if (customerType?.Customers?.Any() == true)
                    {
                        <div class="row">
                            @foreach (var customer in customerType.Customers.Take(10))
                            {
                                <div class="col-md-6 mb-2">
                                    <a href="/customers/detail/@customer.Id" class="btn btn-outline-primary btn-sm w-100">
                                        <i class="fas fa-building me-1"></i> @customer.CompanyName
                                    </a>
                                </div>
                            }
                            @if (customerType.Customers.Count() > 10)
                            {
                                <div class="col-12">
                                    <div class="text-muted mt-2 text-center">
                                        還有 @(customerType.Customers.Count() - 10) 個客戶使用此類型...
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-muted p-3 text-center">
                            <i class="fas fa-users fa-2x mb-2 d-block"></i>
                            目前沒有客戶使用此類型
                        </div>
                    }
                </div>
            },
              new GenericDetailPageComponent<CustomerType, ICustomerTypeService>.TabSection
            {
                Id = "system",
                Title = "系統資訊",
                Content = @<div>
                    <SystemInfoDisplayComponent 
                        CreatedAt="@(customerType?.CreatedAt ?? DateTime.MinValue)"
                        UpdatedAt="@customerType?.UpdatedAt"
                        CreatedBy="@customerType?.CreatedBy"
                        UpdatedBy="@customerType?.UpdatedBy"
                        Remarks="@customerType?.Remarks"
                        ShowTimeline="true"
                        ShowRemarks="true" />
                </div>
            }
        };
    }
}
