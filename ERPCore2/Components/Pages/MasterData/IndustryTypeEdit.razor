@page "/industrytypes/edit"
@page "/industrytypes/edit/{id:int?}"

@inject IIndustryTypeService IndustryTypeService
@inject INotificationService NotificationService
@rendermode InteractiveServer

<PageTitle>@(Id.HasValue ? "編輯行業類型" : "新增行業類型")</PageTitle>

<GenericEditPageComponent TEntity="IndustryType" 
                         TService="IIndustryTypeService"
                         Id="@Id"
                         Entity="@industryType"
                         Service="@IndustryTypeService"
                         EntityName="行業類型"
                         EntityNamePlural="行業類型"                         
                         FormTitle="基本資料"
                         FormSubtitle="行業類型的基本分類資訊"
                         IndexRoute="/industrytypes"
                         RequiredPermission="@(Id.HasValue ? "IndustryType.Update" : "IndustryType.Create")"
                         UseGenericForm="true"
                         FormFields="@formFields"
                         FormSections="@formSections"
                         BreadcrumbItems="@breadcrumbItems"                         
                         DataLoader="@LoadIndustryTypeData"
                         SaveHandler="@SaveIndustryType"
                         @ref="editComponent" />

@code {
    [Parameter] public int? Id { get; set; }
    
    // 組件參考
    private GenericEditPageComponent<IndustryType, IIndustryTypeService> editComponent = default!;
    
    // 資料模型
    private IndustryType industryType = new() { Status = EntityStatus.Active };
    
    // 表單欄位定義
    private List<FormFieldDefinition> formFields = new();
    private Dictionary<string, string> formSections = new();
    
    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new();

    protected override void OnInitialized()
    {
        InitializeBreadcrumbs();
        InitializeFormFields();
    }

    private void InitializeBreadcrumbs()
    {
        try
        {
            breadcrumbItems = new List<GenericHeaderComponent.BreadcrumbItem>
            {
                new("首頁", "/"),
                new("行業類型管理", "/industrytypes"),
                new(Id.HasValue ? "編輯行業類型" : "新增行業類型")
            };
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex,
                nameof(InitializeBreadcrumbs),
                GetType()
            );
        }
    }

    private void InitializeFormFields()
    {
        try
        {
            // 狀態選項
            var statusOptions = new List<SelectOption>
            {
                new() { Value = EntityStatus.Active.ToString(), Text = "啟用" },
                new() { Value = EntityStatus.Inactive.ToString(), Text = "停用" }
            };        formFields = new List<FormFieldDefinition>
            {
                new()
                {
                    PropertyName = nameof(IndustryType.IndustryTypeCode),
                    Label = "行業類型代碼",
                    FieldType = FormFieldType.Text,
                    ContainerCssClass = "col-md-4",
                    Placeholder = "請輸入行業類型代碼",
                    IsRequired = false,
                    MaxLength = 10,
                    HelpText = "行業類型的簡短代碼（選填）"
                },
                new()
                {
                    PropertyName = nameof(IndustryType.IndustryTypeName),
                    Label = "行業類型名稱",
                    FieldType = FormFieldType.Text,
                    ContainerCssClass = "col-md-8",
                    Placeholder = "請輸入行業類型名稱",
                    IsRequired = true,
                    MaxLength = 100,
                    HelpText = "行業類型的完整名稱（必填）"
                },
                new()
                {
                    PropertyName = nameof(IndustryType.Status),
                    Label = "狀態",
                    FieldType = FormFieldType.Select,
                    ContainerCssClass = "col-md-6",
                    Options = statusOptions,
                    IsRequired = true,
                    HelpText = "行業類型的狀態"
                },
                new()
                {
                    PropertyName = nameof(IndustryType.Remarks),
                    Label = "備註",
                    FieldType = FormFieldType.TextArea,
                    ContainerCssClass = "col-12",
                    Placeholder = "請輸入行業類型相關備註",
                    Rows = 3,
                    HelpText = "輸入行業類型的相關備註資訊"
                }
            };

            formSections = new Dictionary<string, string>
            {
                { nameof(IndustryType.IndustryTypeCode), "基本資訊" },
                { nameof(IndustryType.IndustryTypeName), "基本資訊" },
                { nameof(IndustryType.Status), "設定" },
                { nameof(IndustryType.Remarks), "額外資訊" }
            };
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex,
                nameof(InitializeFormFields),
                GetType()
            );
        }
    }
    
    private async Task<IndustryType?> LoadIndustryTypeData()
    {
        try
        {
            if (!Id.HasValue) 
            {
                // 新增模式
                industryType = new IndustryType { Status = EntityStatus.Active };
                return industryType;
            }

            // 編輯模式 - 載入現有資料
            var loadedIndustryType = await IndustryTypeService.GetByIdAsync(Id.Value);
            if (loadedIndustryType != null)
            {
                industryType = loadedIndustryType;
                return industryType;
            }            else
            {
                // 如果找不到行業類型，建立新的預設行業類型
                return new IndustryType
                {
                    Status = EntityStatus.Active
                };
            }
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex,
                nameof(LoadIndustryTypeData),
                GetType(),
                NotificationService
            );
            
            // 設定安全的預設值，確保程式不會崩潰
            return new IndustryType
            {
                IndustryTypeName = "ERROR",
                Status = EntityStatus.Active
            };
        }
    }
    
    private async Task<bool> SaveIndustryType(IndustryType entity)
    {
        try
        {            // 驗證基本資料
            if (string.IsNullOrWhiteSpace(entity.IndustryTypeName))
            {
                await NotificationService.ShowErrorAsync("行業類型名稱為必填欄位");
                return false;
            }

            ServiceResult result;
            
            if (Id.HasValue)
            {
                // 更新
                result = await IndustryTypeService.UpdateAsync(entity);
            }
            else
            {
                // 新增
                result = await IndustryTypeService.CreateAsync(entity);
            }            if (result.IsSuccess)
            {
                await NotificationService.ShowSuccessAsync(Id.HasValue ? "行業類型更新成功" : "行業類型新增成功");
                // 不再自動跳轉，讓使用者決定是否繼續編輯
                return true;
            }
            else
            {
                await NotificationService.ShowErrorAsync($"儲存失敗：{result.ErrorMessage}");
                return false;
            }
        }        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex,
                nameof(SaveIndustryType),
                GetType()
            );
            return false;
        }
    }
}
