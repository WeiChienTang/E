@page "/industrytypes"
@using ERPCore2.Data.Entities
@using ERPCore2.Services
@using ERPCore2.Data.Enums
@using ERPCore2.Components.Shared.Forms
@using ERPCore2.Components.Shared.Tables
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Components.Shared.PageModels
@inject IIndustryTypeService IndustryTypeService
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime
@rendermode InteractiveServer

<PageTitle>行業類型維護</PageTitle>

<GenericIndexPageComponent TEntity="IndustryType" 
                          TService="IIndustryTypeService"
                          Service="@IndustryTypeService"
                          EntityBasePath="/industrytypes"                          PageTitle="行業類型維護"
                          PageSubtitle="管理所有行業類型分類與相關設定"
                          AddButtonText="新增行業類型"
                          AddButtonTitle="新增行業類型資料"
                          SearchSectionTitle="行業類型搜尋與管理"
                          EmptyMessage="沒有找到符合條件的行業類型資料"
                          BreadcrumbItems="@breadcrumbItems"
                          FilterDefinitions="@filterDefinitions"
                          ColumnDefinitions="@columnDefinitions"
                          DataLoader="@LoadIndustryTypesAsync"
                          FilterApplier="@ApplyIndustryTypeFilters"
                          AutoSearch="true"
                          ShowSearchButton="true"
                          ShowAdvancedToggle="true"
                          SearchDelayMs="500"
                          EntityName="行業類型"
                          GetEntityDisplayName="@(industryType => industryType.IndustryTypeName)"
                          DeleteSuccessMessage="行業類型刪除成功"
                          DeleteConfirmMessage="確定要刪除行業類型「{0}」嗎？"
                          EnableStandardActions="true"
                          ShowViewButton="true"
                          ShowEditButton="true"
                          ShowDeleteButton="true"
                          @ref="indexComponent" />

@code {
    // 組件參考
    private GenericIndexPageComponent<IndustryType, IIndustryTypeService> indexComponent = default!;
    
    // 配置相關
    private List<SearchFilterDefinition> filterDefinitions = new();
    private List<TableColumnDefinition> columnDefinitions = new();
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new();

    protected override void OnInitialized()
    {
        InitializeBreadcrumbs();
        InitializeFilters();
        InitializeTableColumns();
    }

    private void InitializeBreadcrumbs()
    {
        breadcrumbItems = new List<GenericHeaderComponent.BreadcrumbItem>
        {
            new("首頁", "/"),
            new("行業類型管理")
        };
    }

    // 載入行業類型資料
    private async Task<List<IndustryType>> LoadIndustryTypesAsync()
    {
        try
        {
            return await IndustryTypeService.GetAllAsync();
        }
        catch (Exception ex)
        {
            await JSRuntime.InvokeVoidAsync("console.error", "載入行業類型資料失敗：", ex.Message);
            return new List<IndustryType>();
        }
    }

    private void InitializeFilters()
    {
        // 準備狀態選項
        var statusOptions = new List<SelectOption>
        {
            new() { Text = "啟用", Value = EntityStatus.Active.ToString() },
            new() { Text = "停用", Value = EntityStatus.Inactive.ToString() }
        };

        // 建立篩選定義
        filterDefinitions = new SearchFilterBuilder<SearchFilterModel>()
            .AddText("IndustryTypeName", "行業類型名稱", "輸入行業類型名稱搜尋")
            .AddText("IndustryTypeCode", "行業類型代碼", "輸入行業類型代碼搜尋", isAdvanced: true)
            .AddSelect("Status", "狀態", statusOptions, isAdvanced: true)
            .Build();
    }

    private void InitializeTableColumns()
    {
        columnDefinitions = new List<TableColumnDefinition>
        {
            TableColumnDefinition.Text("行業類型代碼", nameof(IndustryType.IndustryTypeCode)),
            TableColumnDefinition.Text("行業類型名稱", nameof(IndustryType.IndustryTypeName)),
            TableColumnDefinition.Status("狀態", nameof(IndustryType.Status), new Dictionary<object, string>
            {
                { EntityStatus.Active, "bg-success" },
                { EntityStatus.Inactive, "bg-secondary" }
            }),
            TableColumnDefinition.Date("建立日期", nameof(IndustryType.CreatedAt), "yyyy/MM/dd"),
            TableColumnDefinition.Date("更新日期", nameof(IndustryType.UpdatedAt), "yyyy/MM/dd")
        };
    }

    // 自定義篩選邏輯
    private IQueryable<IndustryType> ApplyIndustryTypeFilters(SearchFilterModel searchModel, IQueryable<IndustryType> query)
    {
        // 行業類型名稱篩選
        var industryTypeNameFilter = searchModel.GetFilterValue("IndustryTypeName")?.ToString();
        if (!string.IsNullOrWhiteSpace(industryTypeNameFilter))
        {
            query = query.Where(it => 
                it.IndustryTypeName.Contains(industryTypeNameFilter, StringComparison.OrdinalIgnoreCase));
        }

        // 行業類型代碼篩選
        var industryTypeCodeFilter = searchModel.GetFilterValue("IndustryTypeCode")?.ToString();
        if (!string.IsNullOrWhiteSpace(industryTypeCodeFilter))
        {
            query = query.Where(it => 
                !string.IsNullOrEmpty(it.IndustryTypeCode) && 
                it.IndustryTypeCode.Contains(industryTypeCodeFilter, StringComparison.OrdinalIgnoreCase));
        }

        // 狀態篩選
        var statusFilter = searchModel.GetFilterValue("Status")?.ToString();
        if (!string.IsNullOrWhiteSpace(statusFilter) && Enum.TryParse<EntityStatus>(statusFilter, out var status))
        {
            query = query.Where(it => it.Status == status);
        }

        return query.OrderBy(it => it.IndustryTypeName);
    }
}
