@page "/supplier-types/detail/{supplierTypeId:int}"
@using ERPCore2.Components.Shared
@using ERPCore2.Components.Shared.Details
@using ERPCore2.Components.Shared.Badges
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Data.Entities
@using ERPCore2.Data.Enums
@using ERPCore2.Services
@inject ISupplierTypeService SupplierTypeService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>廠商類型詳細資料</PageTitle>

<GenericDetailPageComponent TEntity="SupplierType" 
                           TService="ISupplierTypeService"
                           EntityId="@SupplierTypeId"
                           Entity="@supplierType"
                           Service="@SupplierTypeService"
                           EntityName="廠商類型"
                           EntityNamePlural="廠商類型"
                           IndexRoute="/supplier-types"
                           EditRoute="/supplier-types/edit"
                           LoadingText="載入廠商類型資料中..."
                           BreadcrumbItems="@breadcrumbItems"
                           DataLoader="@LoadSupplierTypeDataAsync"
                           EntityTitleSelector="@(st => st.TypeName)"
                           EntitySubtitleSelector="@(st => $"描述：{st.Description ?? "未設定"}")"                           
                           EntityDisplayNameSelector="@(st => st.TypeName)"
                           OnDataLoaded="@OnSupplierTypeDataLoaded"                           
                           UseTabLayout="true"
                           TabSections="@GetTabSections()">
</GenericDetailPageComponent>

@code {
    [Parameter] public int SupplierTypeId { get; set; }

    private SupplierType? supplierType;
    private bool _isLoading = false; // 防止重複載入

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("基礎資料", "/"),
        new("廠商類型管理", "/supplier-types"),
        new("廠商類型詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<SupplierType?> LoadSupplierTypeDataAsync()
    {
        // 防止重複載入
        if (_isLoading)
        {
            Console.WriteLine("[SupplierTypeDetail] 載入中，跳過重複調用");
            return supplierType;
        }
        
        try
        {
            _isLoading = true;
            if (SupplierTypeId <= 0) return null;
              
            var result = await SupplierTypeService.GetByIdAsync(SupplierTypeId);
            supplierType = result; // 保持本地變數同步
            
            return result;
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"[SupplierTypeDetail] 載入廠商類型資料失敗：{ex.Message}");
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private Task OnSupplierTypeDataLoaded()
    {
        // 資料載入完成後的處理
        StateHasChanged();
        return Task.CompletedTask;
    }

    // 設定標籤頁結構
    private List<GenericDetailPageComponent<SupplierType, ISupplierTypeService>.TabSection> GetTabSections()
    {
        return new List<GenericDetailPageComponent<SupplierType, ISupplierTypeService>.TabSection>
        {
            new GenericDetailPageComponent<SupplierType, ISupplierTypeService>.TabSection
            {
                Id = "basic",
                Title = "基本資料",
                Content = @<div class="row">
                    <DetailFieldComponent Label="類型名稱" Value="@supplierType?.TypeName" IsPrimary="true" IsBold="true" />
                    <DetailFieldComponent Label="描述" Value="@supplierType?.Description" EmptyText="未設定" ColSize="12" />
                    <DetailFieldComponent Label="狀態">
                        @if (supplierType?.Status != null)
                        {
                            <StatusBadgeComponent Status="@supplierType.Status" />
                        }
                    </DetailFieldComponent>
                    @if (!string.IsNullOrEmpty(supplierType?.Remarks))
                    {
                        <DetailFieldComponent Label="備註" Value="@supplierType.Remarks" ColSize="12" />
                    }
                </div>
            },
            
            new GenericDetailPageComponent<SupplierType, ISupplierTypeService>.TabSection
            {
                Id = "statistics",
                Title = "使用統計",                Content = @<div class="row">
                    <DetailFieldComponent Label="使用此類型的廠商數" Value="@(supplierType?.Suppliers?.Count().ToString() ?? "0")" IsBold="true" />
                    @if (supplierType?.Suppliers?.Any() == true)
                    {
                        <div class="row">
                            @foreach (var supplier in supplierType.Suppliers.Take(10))
                            {
                                <div class="col-md-6 mb-2">
                                    <a href="/suppliers/detail/@supplier.Id" class="btn btn-outline-primary btn-sm w-100">
                                        <i class="fas fa-building me-1"></i> @supplier.CompanyName
                                    </a>
                                </div>
                            }
                            @if (supplierType.Suppliers.Count() > 10)
                            {
                                <div class="col-12">
                                    <div class="text-muted mt-2 text-center">
                                        還有 @(supplierType.Suppliers.Count() - 10) 個廠商使用此類型...
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-muted p-3 text-center">
                            <i class="fas fa-industry fa-2x mb-2 d-block"></i>
                            目前沒有廠商使用此類型
                        </div>
                    }
                </div>
            },
            
            new GenericDetailPageComponent<SupplierType, ISupplierTypeService>.TabSection
            {
                Id = "system",
                Title = "系統資訊",
                Content = @<div class="row">
                    <DetailFieldComponent Label="建立時間" Value="@supplierType?.CreatedAt.ToString("yyyy/MM/dd HH:mm")" />
                    <DetailFieldComponent Label="建立者" Value="@supplierType?.CreatedBy" EmptyText="系統" />
                    @if (supplierType?.UpdatedAt.HasValue == true)
                    {
                        <DetailFieldComponent Label="更新時間" Value="@supplierType.UpdatedAt.Value.ToString("yyyy/MM/dd HH:mm")" />
                        <DetailFieldComponent Label="更新者" Value="@supplierType?.UpdatedBy" EmptyText="系統" />
                    }
                </div>
            }
        };
    }
}
