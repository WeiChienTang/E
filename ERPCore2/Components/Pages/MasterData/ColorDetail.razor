@page "/colors/detail/{colorId:int}"
@using ERPCore2.Components.Shared
@using ERPCore2.Components.Shared.Details
@using ERPCore2.Components.Shared.Badges
@using ERPCore2.Components.Shared.Headers
@using ERPCore2.Data.Entities
@using ERPCore2.Data.Enums
@using ERPCore2.Helpers
@inject IColorService ColorService
@inject IJSRuntime JSRuntime
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>顏色詳細資料</PageTitle>

<GenericDetailPageComponent TEntity="Color" 
                           TService="IColorService"
                           EntityId="@ColorId"
                           Entity="@color"
                           Service="@ColorService"
                           EntityName="顏色"
                           EntityNamePlural="顏色"
                           IndexRoute="/colors"
                           EditRoute="/colors/edit"
                           LoadingText="載入顏色資料中..."
                           BreadcrumbItems="@breadcrumbItems"
                           DataLoader="@LoadColorDataAsync"
                           AdditionalDataLoader="@LoadAdditionalDataAsync"
                           EntityTitleSelector="@(c => c.Name)"
                           EntitySubtitleSelector="@(c => $"顏色代碼：{c.Code ?? "未設定"}")"
                           EntityDisplayNameSelector="@(c => c.Name)"
                           OnDataLoaded="@OnColorDataLoaded"
                           UseTabLayout="true"
                           TabSections="@GetTabSections()">
</GenericDetailPageComponent>

@code {
    [Parameter] public int ColorId { get; set; }

    private Color? color;
    private bool _isLoading = false;

    // 麵包屑導航
    private List<GenericHeaderComponent.BreadcrumbItem> breadcrumbItems = new()
    {
        new("首頁", "/"),
        new("基礎資料", "#"),
        new("顏色管理", "/colors"),
        new("顏色詳細資料")
    };

    // GenericDetailPageComponent 需要的方法
    private async Task<Color?> LoadColorDataAsync()
    {
        if (_isLoading)
        {
            return color;
        }
        
        try
        {
            _isLoading = true;
            if (ColorId <= 0) return null;
            
            var result = await ColorService.GetByIdAsync(ColorId);
            color = result;
            return result;
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(LoadColorDataAsync),
                GetType(),
                additionalData: new { ColorId }
            );
            throw;
        }
        finally
        {
            _isLoading = false;
        }
    }

    private Task LoadAdditionalDataAsync()
    {
        try
        {
            return Task.CompletedTask;
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(LoadAdditionalDataAsync),
                typeof(ColorDetail),
                additionalData: new { ColorId }
            );
            throw;
        }
    }

    private Task OnColorDataLoaded()
    {
        try
        {
            StateHasChanged();
            return Task.CompletedTask;
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(OnColorDataLoaded),
                typeof(ColorDetail),
                additionalData: new { ColorId }
            );
            throw;
        }
    }    // 設定標籤頁結構
    private List<GenericDetailPageComponent<Color, IColorService>.TabSection> GetTabSections()
    {
        try
        {
            return new List<GenericDetailPageComponent<Color, IColorService>.TabSection>
            {            new GenericDetailPageComponent<Color, IColorService>.TabSection
                {
                    Id = "basic",
                    Title = "基本資料",
                    Content = @<div>
                        <BasicInfoDisplayComponent 
                            Title="顏色基本資訊"
                            IconClass="fas fa-palette"
                            IconColor="text-primary"
                            Fields="@GetColorBasicFields()"
                            ShowFieldCount="false"
                            DefaultColSize="6" />
                    </div>
                },
                  new GenericDetailPageComponent<Color, IColorService>.TabSection
                {
                    Id = "system",
                    Title = "系統資訊",
                    Content = @<div>
                        <SystemInfoDisplayComponent 
                            CreatedAt="@(color?.CreatedAt ?? DateTime.MinValue)"
                            UpdatedAt="@color?.UpdatedAt"
                            CreatedBy="@color?.CreatedBy"
                            UpdatedBy="@color?.UpdatedBy"
                            Remarks="@color?.Remarks"
                            ShowTimeline="true"
                            ShowRemarks="true" />
                    </div>
                }
            };
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(GetTabSections),
                typeof(ColorDetail),
                additionalData: new { ColorId }
            );
            throw;
        }
    }

    // 取得顏色基本資料欄位
    private IEnumerable<BasicInfoDisplayComponent.BasicInfoField> GetColorBasicFields()
    {
        try
        {
            return new List<BasicInfoDisplayComponent.BasicInfoField>
            {
                new()
                {
                    Label = "顏色代碼",
                    Value = color?.Code,
                    IsPrimary = true,
                    EmptyText = "未設定",
                    IconClass = "fas fa-barcode",
                    IconBgClass = "bg-primary bg-opacity-10",
                    IconTextClass = "text-primary",
                    ColSize = 6
                },
                new()
                {
                    Label = "顏色名稱",
                    Value = color?.Name,
                    ValueBold = true,
                    IconClass = "fas fa-palette",
                    IconBgClass = "bg-info bg-opacity-10",
                    IconTextClass = "text-info",
                    ColSize = 6
                },
                new()
                {
                    Label = "狀態",
                    Type = BasicInfoDisplayComponent.FieldType.Status,
                    Value = color?.Status,
                    IconClass = "fas fa-flag",
                    IconBgClass = "bg-success bg-opacity-10",
                    IconTextClass = "text-success",
                    ColSize = 6
                },
                new()
                {
                    Label = "描述",
                    Value = color?.Description,
                    VisibilityCondition = () => !string.IsNullOrEmpty(color?.Description),
                    IconClass = "fas fa-align-left",
                    IconBgClass = "bg-info bg-opacity-10",
                    IconTextClass = "text-info",
                    ColSize = 12
                },
                new()
                {
                    Label = "備註",
                    Value = color?.Remarks,
                    VisibilityCondition = () => !string.IsNullOrEmpty(color?.Remarks),
                    IconClass = "fas fa-sticky-note",
                    IconBgClass = "bg-secondary bg-opacity-10",
                    IconTextClass = "text-secondary",
                    ColSize = 12
                }
            };
        }
        catch (Exception ex)
        {
            _ = ErrorHandlingHelper.HandlePageErrorAsync(
                ex, 
                nameof(GetColorBasicFields),
                typeof(ColorDetail),
                additionalData: new { ColorId }
            );
            throw;
        }
    }
}
