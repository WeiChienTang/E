@* Edit 頁面動作按鈕組件 - 提供統一的儲存和取消按鈕 *@
@using ERPCore2.Components.Shared.Buttons

<div class="edit-action-buttons-container">
    <GenericButtonComponent Variant="ButtonVariant.Success" Text="@SaveButtonText" 
                           OnClick="HandleSaveClick" IsDisabled="@(IsSubmitting || IsLoading || !IsFormValid)" 
                           IsLoading="@IsSubmitting" CssClass="edit-action-btn edit-save-btn" />

    @if (ShowCancelButton)
    {
        <GenericButtonComponent Variant="ButtonVariant.OutlineDanger" Text="@CancelButtonText" 
                               OnClick="HandleCancelClick" IsDisabled="@IsSubmitting" 
                               CssClass="edit-action-btn edit-cancel-btn" />
    }

    @if (CustomButtons != null)
    {
        @CustomButtons
    }
</div>

@code {
    [Parameter] public string SaveButtonText { get; set; } = "儲存";
    [Parameter] public string SaveButtonIcon { get; set; } = "bi-check-circle";
    [Parameter] public string CancelButtonText { get; set; } = "取消";
    [Parameter] public string CancelButtonIcon { get; set; } = "bi-x-circle";
    [Parameter] public bool IsSubmitting { get; set; } = false;
    [Parameter] public bool IsLoading { get; set; } = false;
    [Parameter] public bool IsFormValid { get; set; } = true;
    [Parameter] public bool ShowCancelButton { get; set; } = true;
    [Parameter] public EventCallback OnSaveClick { get; set; }
    [Parameter] public EventCallback OnCancelClick { get; set; }
    [Parameter] public RenderFragment? CustomButtons { get; set; }

    private async Task HandleSaveClick()
    {
        if (OnSaveClick.HasDelegate)
        {
            await OnSaveClick.InvokeAsync();
        }
    }

    private async Task HandleCancelClick()
    {
        if (OnCancelClick.HasDelegate)
        {
            await OnCancelClick.InvokeAsync();
        }
    }
}
