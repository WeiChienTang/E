@* 統一按鈕組件 - 取代所有HTML button標籤的主要共享組件 *@
@using ERPCore2.Components.Shared.Buttons

<button class="@GetFullButtonClass()" 
        type="@(IsSubmit ? "submit" : Type)"
        title="@(string.IsNullOrEmpty(Title) ? Text : Title)"
        disabled="@IsDisabled"
        @onclick="HandleClick"
        @onclick:stopPropagation="StopPropagation"
        @attributes="AdditionalAttributes">
    @if (!string.IsNullOrEmpty(IconClass))
    {
        <i class="@IconClass @(string.IsNullOrEmpty(Text) ? "" : "me-2")"></i>
    }
    @if (IsLoading)
    {
        <span class="spinner-border spinner-border-sm me-2" role="status"></span>
    }
    @Text
    @ChildContent
</button>

@code {
    /// <summary>
    /// 按鈕顯示文字 - 主要參數
    /// </summary>
    [Parameter] public string Text { get; set; } = string.Empty;
    
    /// <summary>
    /// 按鈕類型 - 主要參數，決定按鈕的顏色和樣式
    /// </summary>
    [Parameter] public ButtonVariant Variant { get; set; } = ButtonVariant.Primary;
    
    /// <summary>
    /// 按鈕尺寸
    /// </summary>
    [Parameter] public ButtonSize Size { get; set; } = ButtonSize.Normal;
    
    /// <summary>
    /// 點擊事件處理
    /// </summary>
    [Parameter] public EventCallback OnClick { get; set; }
    
    /// <summary>
    /// 自定義CSS類別
    /// </summary>
    [Parameter] public string CssClass { get; set; } = string.Empty;
    
    /// <summary>
    /// 按鈕標題提示
    /// </summary>
    [Parameter] public string Title { get; set; } = string.Empty;
    
    /// <summary>
    /// 按鈕HTML類型
    /// </summary>
    [Parameter] public string Type { get; set; } = "button";
    
    /// <summary>
    /// 是否禁用
    /// </summary>
    [Parameter] public bool IsDisabled { get; set; } = false;
    
    /// <summary>
    /// 是否顯示載入狀態
    /// </summary>
    [Parameter] public bool IsLoading { get; set; } = false;
    
    /// <summary>
    /// 是否為提交按鈕
    /// </summary>
    [Parameter] public bool IsSubmit { get; set; } = false;
    
    /// <summary>
    /// 圖示CSS類別
    /// </summary>
    [Parameter] public string IconClass { get; set; } = string.Empty;
    
    /// <summary>
    /// 是否阻止事件冒泡
    /// </summary>
    [Parameter] public bool StopPropagation { get; set; } = false;
    
    /// <summary>
    /// 子內容
    /// </summary>
    [Parameter] public RenderFragment? ChildContent { get; set; }
    
    /// <summary>
    /// 其他HTML屬性
    /// </summary>
    [Parameter(CaptureUnmatchedValues = true)] 
    public Dictionary<string, object>? AdditionalAttributes { get; set; }    
    private async Task HandleClick()
    {        
        if (IsDisabled || IsLoading)
            return;
            
        try
        {
            if (OnClick.HasDelegate)
            {
                await OnClick.InvokeAsync();
            }
        }
        catch (Exception)
        {
            // 在生產環境中，這裡應該使用適當的日誌記錄
        }
    }
    
    /// <summary>
    /// 取得完整的按鈕 CSS 類別，處理特殊情況（如 btn-close）
    /// </summary>
    private string GetFullButtonClass()
    {
        var classes = new List<string>();
        
        // 特殊處理：如果 CssClass 包含 "btn-close"，則不添加 "btn" 和其他變體類別
        if (!string.IsNullOrEmpty(CssClass) && CssClass.Contains("btn-close"))
        {
            // btn-close 是獨立的按鈕樣式，不需要其他類別
            classes.Add("btn-close");
            // 添加白色變體（用於深色背景）
            classes.Add("btn-close-white");
            return string.Join(" ", classes);
        }
        
        // 一般按鈕需要基礎 btn 類別
        classes.Add("btn");
        
        // 添加變體樣式
        classes.Add(GetVariantClass());
        
        // 添加尺寸樣式
        var sizeClass = GetSizeClass();
        if (!string.IsNullOrEmpty(sizeClass))
        {
            classes.Add(sizeClass);
        }
        
        // 添加自定義 CSS 類別（排除 btn-close，因為已在上面處理）
        if (!string.IsNullOrEmpty(CssClass) && !CssClass.Contains("btn-close"))
        {
            classes.Add(CssClass);
        }
        
        return string.Join(" ", classes);
    }
    
    /// <summary>
    /// 取得按鈕變體的 CSS 類別
    /// </summary>
    private string GetVariantClass()
    {
        return Variant switch
        {
            ButtonVariant.Primary => "btn-primary",
            ButtonVariant.Secondary => "btn-secondary",
            ButtonVariant.Success => "btn-success",
            ButtonVariant.Warning => "btn-warning",
            ButtonVariant.Danger => "btn-danger",
            ButtonVariant.Info => "btn-info",
            ButtonVariant.OutlinePrimary => "btn-outline-primary",
            ButtonVariant.OutlineSecondary => "btn-outline-secondary",
            ButtonVariant.OutlineSuccess => "btn-outline-success",
            ButtonVariant.OutlineWarning => "btn-outline-warning",
            ButtonVariant.OutlineDanger => "btn-outline-danger",
            ButtonVariant.OutlineInfo => "btn-outline-info",
            _ => "btn-primary"
        };
    }
    
    /// <summary>
    /// 取得按鈕尺寸的 CSS 類別
    /// </summary>
    private string GetSizeClass()
    {
        return Size switch
        {
            ButtonSize.Small => "btn-sm",
            ButtonSize.Large => "btn-lg",
            ButtonSize.Normal => string.Empty,
            _ => string.Empty
        };
    }
}
