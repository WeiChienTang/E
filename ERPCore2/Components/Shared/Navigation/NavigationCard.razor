@using ERPCore2.Models
@inject NavigationManager Navigation

<div class="card h-100 navigation-card" @onclick="() => HandleCardClick(Item)">
    <div class="card-body d-flex flex-column">
        <div class="d-flex align-items-start mb-3">
            <div class="flex-shrink-0 me-3">
                <div class="icon-wrapper">
                    <i class="@Item.IconClass text-primary fs-2"></i>
                </div>
            </div>
            <div class="flex-grow-1">
                <h5 class="card-title mb-2">@Item.Name</h5>
                <p class="card-text text-muted small mb-2">@Item.Description</p>
                @if (!string.IsNullOrEmpty(Item.Category))
                {
                    <span class="badge bg-secondary">@Item.Category</span>
                }
            </div>
        </div>
        
        @if (ShowRoute && !string.IsNullOrEmpty(Item.Route) && Item.Route != "#")
        {
            <div class="mt-auto">
                <small class="text-muted">
                    <i class="bi bi-link-45deg me-1"></i>
                    @Item.Route
                </small>
            </div>
        }
    </div>
    
    @if (ShowActionButton && !string.IsNullOrEmpty(Item.Route) && Item.Route != "#")
    {
        <div class="card-footer bg-transparent border-0 pt-0">
            <button class="btn btn-primary btn-sm w-100" @onclick:stopPropagation="true" @onclick="() => HandleCardClick(Item)">
                <i class="bi bi-arrow-right me-1"></i>
                前往
            </button>
        </div>
    }
</div>

<style>
    .navigation-card {
        transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        cursor: pointer;
        border: 1px solid #dee2e6;
    }

    .navigation-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        border-color: #0d6efd;
    }

    .navigation-card .icon-wrapper {
        width: 60px;
        height: 60px;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f8f9fa;
        border-radius: 12px;
    }

    .navigation-card .card-title {
        color: #495057;
        font-weight: 600;
    }

    .navigation-card:hover .card-title {
        color: #0d6efd;
    }

    .navigation-card .card-text {
        line-height: 1.4;
    }

    .navigation-card .badge {
        font-size: 0.7rem;
    }
</style>

@code {
    [Parameter] public NavigationItem Item { get; set; } = new();
    [Parameter] public bool ShowRoute { get; set; } = false;
    [Parameter] public bool ShowActionButton { get; set; } = false;
    [Parameter] public EventCallback<NavigationItem> OnCardClick { get; set; }

    private async Task HandleCardClick(NavigationItem item)
    {
        if (OnCardClick.HasDelegate)
        {
            await OnCardClick.InvokeAsync(item);
        }
        else if (!string.IsNullOrEmpty(item.Route) && item.Route != "#")
        {
            Navigation.NavigateTo(item.Route);
        }
    }
}