@* 帶有字數統計功能的 TextArea 元件 *@
@inject IJSRuntime JSRuntime

<div class="character-count-textarea-container">
    <textarea class="@CssClass" 
              id="@Id"
              placeholder="@Placeholder"
              readonly="@IsReadOnly"
              disabled="@IsDisabled"
              rows="@Rows"
              maxlength="@MaxCharacters"
              @bind="@CurrentValue"
              @bind:event="oninput">@CurrentValue</textarea>
    
    <div class="character-count-info d-flex justify-content-between align-items-center mt-1">
        <div class="form-text">
            @if (!string.IsNullOrEmpty(HelpText))
            {
                <span>@HelpText</span>
            }
        </div>
        <small class="@GetCounterCssClass()">
            @CharacterCount / @MaxCharacters 字
        </small>
    </div>
</div>

@code {
    [Parameter] public string? Value { get; set; }
    [Parameter] public EventCallback<string> ValueChanged { get; set; }
    [Parameter] public string? Id { get; set; }
    [Parameter] public string? CssClass { get; set; } = "form-control";
    [Parameter] public string? Placeholder { get; set; }
    [Parameter] public string? HelpText { get; set; }
    [Parameter] public bool IsReadOnly { get; set; } = false;
    [Parameter] public bool IsDisabled { get; set; } = false;
    [Parameter] public int Rows { get; set; } = 3;
    [Parameter] public int MaxCharacters { get; set; } = 120;  // 統一預設為 120 字元
    [Parameter] public int MaxBytes { get; set; } = 500; // 資料庫位元組限制

    private string _currentValue = string.Empty;
    private string CurrentValue
    {
        get => _currentValue;
        set
        {
            if (_currentValue != value)
            {
                _currentValue = value ?? string.Empty;
                ValueChanged.InvokeAsync(_currentValue);
            }
        }
    }

    private int CharacterCount => CurrentValue?.Length ?? 0;

    protected override void OnParametersSet()
    {
        if (Value != _currentValue)
        {
            _currentValue = Value ?? string.Empty;
        }
    }

    private string GetCounterCssClass()
    {
        // 達到字元限制時顯示紅色
        if (CharacterCount >= MaxCharacters)
            return "text-danger fw-bold";
        // 90% 時顯示警告
        else if (CharacterCount >= MaxCharacters * 0.9)
            return "text-warning";
        else
            return "text-muted";
    }
}