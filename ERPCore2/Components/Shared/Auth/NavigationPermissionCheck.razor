@using ERPCore2.Services
@inject INavigationPermissionService NavigationPermissionService

@if (isAuthorized)
{
    @ChildContent
}

@code {
    [Parameter] public RenderFragment? ChildContent { get; set; }
    [Parameter] public string? Permission { get; set; }
    [Parameter] public string? Module { get; set; }
    [Parameter] public string[]? AnyPermissions { get; set; }
    [Parameter] public bool RequireAll { get; set; } = false;

    private bool isAuthorized = false;

    protected override async Task OnParametersSetAsync()
    {
        // 每次參數變更時重新檢查權限，避免快取問題
        isAuthorized = await CheckPermissionAsync();
    }

    private async Task<bool> CheckPermissionAsync()
    {
        try
        {
            // 總是優先檢查 System.Admin 權限
            if (await NavigationPermissionService.CanAccessAsync("System.Admin"))
                return true;

            // 如果指定了模組，檢查模組權限
            if (!string.IsNullOrEmpty(Module))
            {
                return await NavigationPermissionService.CanAccessModuleAsync(Module);
            }

            // 如果指定了單一權限，檢查該權限
            if (!string.IsNullOrEmpty(Permission))
            {
                return await NavigationPermissionService.CanAccessAsync(Permission);
            }

            // 如果指定了多個權限，根據 RequireAll 決定檢查邏輯
            if (AnyPermissions != null && AnyPermissions.Any())
            {
                if (RequireAll)
                {
                    // 需要所有權限
                    foreach (var permission in AnyPermissions)
                    {
                        if (!await NavigationPermissionService.CanAccessAsync(permission))
                            return false;
                    }
                    return true;
                }
                else
                {
                    // 只需要任一權限
                    foreach (var permission in AnyPermissions)
                    {
                        if (await NavigationPermissionService.CanAccessAsync(permission))
                            return true;
                    }
                    return false;
                }
            }

            // 如果沒有指定任何權限要求，檢查用戶是否已認證
            var employeeId = await NavigationPermissionService.GetCurrentEmployeeIdAsync();
            return employeeId > 0;
        }
        catch (Exception)
        {
            // 記錄錯誤，但不顯示給使用者
            return false;
        }
    }
}
