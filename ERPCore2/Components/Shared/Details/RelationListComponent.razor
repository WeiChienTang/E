@* 通用關聯列表顯示元件 *@
@typeparam TRelationEntity where TRelationEntity : class
@typeparam TTargetEntity where TTargetEntity : class

@if (RelationItems?.Any() == true)
{
    <div class="row g-3">
        @foreach (var item in RelationItems.OrderByDescending(r => GetIsPrimary?.Invoke(r) ?? false))
        {
            @if (CardTemplate != null)
            {
                @CardTemplate(item)
            }
            else
            {
                @* 預設卡片樣式 *@
                <div class="col-12">
                    <div class="card h-100 relation-card" 
                         @onclick="() => HandleItemClick(item)" 
                         @onclick:stopPropagation="true">
                        <div class="card-body p-3">
                            <div class="d-flex justify-content-between align-items-start">
                                <div class="flex-grow-1">
                                    <h6 class="card-title mb-1 text-truncate" title="@GetItemDisplayName(item)">
                                        <i class="fas fa-eye me-1"></i>@GetItemDisplayName(item)
                                    </h6>
                                    @if (GetIsPrimary?.Invoke(item) == true || (PrimaryTargetId.HasValue && GetTargetId(item) == PrimaryTargetId.Value))
                                    {
                                        <span class="badge bg-primary">主要</span>
                                    }
                                </div>
                            </div>
                            
                            @* 額外內容區域 *@
                            @if (ExtraContentTemplate != null)
                            {
                                @ExtraContentTemplate(item)
                            }
                        </div>
                    </div>
                </div>
            }
        }
    </div>
}
else
{
    <div class="@EmptyMessageClass">
        <i class="@EmptyIcon fa-2x mb-2 d-block"></i>
        @EmptyMessage
    </div>
}

@code {
    // 基本參數
    [Parameter] public IEnumerable<TRelationEntity>? RelationItems { get; set; }
    [Parameter] public int? PrimaryTargetId { get; set; }
    [Parameter] public EventCallback<int> OnItemClick { get; set; }
    
    // 委派參數
    [Parameter] public Func<TRelationEntity, int> GetTargetId { get; set; } = default!;
    [Parameter] public Func<TRelationEntity, bool>? GetIsPrimary { get; set; }
    [Parameter] public Func<TRelationEntity, string>? GetDisplayName { get; set; }
    
    // 樣板參數
    [Parameter] public RenderFragment<TRelationEntity>? CardTemplate { get; set; }
    [Parameter] public RenderFragment<TRelationEntity>? ExtraContentTemplate { get; set; }
    
    // 空資料顯示參數
    [Parameter] public string EmptyMessage { get; set; } = "尚未設定相關資料";
    [Parameter] public string EmptyIcon { get; set; } = "fas fa-info-circle";
    [Parameter] public string EmptyMessageClass { get; set; } = "no-suppliers-message";

    private async Task HandleItemClick(TRelationEntity item)
    {
        if (OnItemClick.HasDelegate)
        {
            var targetId = GetTargetId(item);
            await OnItemClick.InvokeAsync(targetId);
        }
    }

    private string GetItemDisplayName(TRelationEntity item)
    {
        return GetDisplayName?.Invoke(item) ?? "未知項目";
    }
}
