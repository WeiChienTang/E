@* 地址資料顯示組件 *@
@using Microsoft.JSInterop
@using ERPCore2.Components.Shared.Details
@inject IJSRuntime JSRuntime

@if (Addresses?.Any() == true)
{
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-gradient bg-light border-0">
            <h6 class="mb-0 d-flex align-items-center">
                <i class="fas fa-map-marker-alt text-danger me-2"></i>
                @(Title ?? "地址資料")
                <span class="badge bg-secondary ms-auto">@Addresses.Count() 筆</span>
            </h6>
        </div>
        <div class="card-body p-0">
            <div class="list-group list-group-flush">
                @foreach (var address in Addresses.OrderBy(a => a.AddressType?.SortOrder ?? 0))
                {
                    <div class="list-group-item py-3">
                        <div class="d-flex align-items-start">
                            <div class="flex-shrink-0 me-3">
                                <div class="icon-box @GetAddressTypeIconClass(address.AddressType?.TypeName) rounded-circle d-flex align-items-center justify-content-center" style="width: 45px; height: 45px;">
                                    <i class="@GetAddressTypeIcon(address.AddressType?.TypeName) text-white"></i>
                                </div>
                            </div>
                            <div class="flex-grow-1">
                                <div class="d-flex justify-content-between align-items-start mb-2">
                                    <h6 class="mb-0 fw-bold">
                                        @(address.AddressType?.TypeName ?? "地址")
                                    </h6>
                                    <div class="text-end">
                                        @if (address.IsPrimary)
                                        {
                                            <span class="badge bg-primary me-1">主要</span>
                                        }
                                        @if (ShowStatus && address.Status != null)
                                        {
                                            <span class="badge @(address.Status == true ? "bg-success" : "bg-secondary")">
                                                @(address.Status == true ? "有效" : "無效")
                                            </span>
                                        }
                                    </div>
                                </div>
                                
                                <div class="address-content">
                                    <div class="d-flex align-items-center mb-2">
                                        <i class="fas fa-map-pin text-muted me-2"></i>
                                        <span class="fw-semibold">@BuildFullAddress(address)</span>
                                    </div>
                                    
                                    @if (ShowAddressDetails)
                                    {
                                        <div class="row g-2 mt-2">
                                            @if (!string.IsNullOrEmpty(address.PostalCode))
                                            {
                                                <div class="col-auto">
                                                    <small class="text-muted">郵遞區號：</small>
                                                    <span class="badge bg-light text-dark">@address.PostalCode</span>
                                                </div>
                                            }
                                            @if (!string.IsNullOrEmpty(address.City))
                                            {
                                                <div class="col-auto">
                                                    <small class="text-muted">城市：</small>
                                                    <span class="text-dark">@address.City</span>
                                                </div>
                                            }
                                            @if (!string.IsNullOrEmpty(address.District))
                                            {
                                                <div class="col-auto">
                                                    <small class="text-muted">區域：</small>
                                                    <span class="text-dark">@address.District</span>
                                                </div>
                                            }
                                        </div>
                                    }
                                    
                                    @if (!string.IsNullOrEmpty(address.Remarks))
                                    {
                                        <div class="mt-2">
                                            <small class="text-muted">
                                                <i class="fas fa-sticky-note me-1"></i>
                                                @address.Remarks
                                            </small>
                                        </div>
                                    }
                                </div>
                                
                                @if (ShowMapLink)
                                {
                                    <div class="mt-3">
                                        <button type="button" class="btn btn-outline-primary btn-sm" @onclick="() => OpenMap(address)">
                                            <i class="fas fa-map me-1"></i>
                                            在地圖中檢視
                                        </button>
                                        <button type="button" class="btn btn-outline-secondary btn-sm ms-1" @onclick="() => CopyAddress(address)">
                                            <i class="fas fa-copy me-1"></i>
                                            複製地址
                                        </button>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        
        @if (ShowStatistics)
        {
            <div class="card-footer bg-light border-0">
                <div class="row text-center">
                    <div class="col">
                        <small class="text-muted">總計</small>
                        <div class="fw-bold">@Addresses.Count()</div>
                    </div>
                    <div class="col">
                        <small class="text-muted">主要地址</small>
                        <div class="fw-bold">@Addresses.Count(a => a.IsPrimary)</div>
                    </div>
                    @if (ShowStatus)
                    {
                        <div class="col">
                            <small class="text-muted">有效</small>
                            <div class="fw-bold">@Addresses.Count(a => a.Status == true)</div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="card border-0 shadow-sm">
        <div class="card-body text-center py-5">
            <div class="text-muted">
                <i class="fas fa-map-marker-alt-slash fa-3x mb-3 d-block text-secondary"></i>
                <h5>@(EmptyTitle ?? "尚未設定地址")</h5>
                <p class="mb-0">@(EmptyMessage ?? "目前沒有任何地址資料")</p>
            </div>
            
            @if (ShowCreateButton && OnCreateClick.HasDelegate)
            {
                <button type="button" class="btn btn-outline-primary mt-3" @onclick="OnCreateClick">
                    <i class="fas fa-plus me-1"></i>
                    新增地址
                </button>
            }
        </div>
    </div>
}

@code {
    [Parameter] public IEnumerable<IAddressEntity>? Addresses { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? EmptyTitle { get; set; }
    [Parameter] public string? EmptyMessage { get; set; }
    [Parameter] public bool ShowStatus { get; set; } = true;
    [Parameter] public bool ShowStatistics { get; set; } = false;
    [Parameter] public bool ShowAddressDetails { get; set; } = true;
    [Parameter] public bool ShowMapLink { get; set; } = true;
    [Parameter] public bool ShowCreateButton { get; set; } = false;
    [Parameter] public EventCallback OnCreateClick { get; set; }    [Parameter] public EventCallback<IAddressEntity> OnMapClick { get; set; }
    [Parameter] public EventCallback<IAddressEntity> OnCopyClick { get; set; }

    // 建立完整地址文字
    private string BuildFullAddress(IAddressEntity address)
    {
        var parts = new List<string>();
        
        if (!string.IsNullOrEmpty(address.PostalCode))
            parts.Add($"({address.PostalCode})");
        
        if (!string.IsNullOrEmpty(address.City))
            parts.Add(address.City);
        
        if (!string.IsNullOrEmpty(address.District))
            parts.Add(address.District);
        
        if (!string.IsNullOrEmpty(address.Address))
            parts.Add(address.Address);
        
        return parts.Any() ? string.Join(" ", parts) : "地址不完整";
    }

    // 取得地址類型圖示
    private string GetAddressTypeIcon(string? typeName)
    {
        return typeName?.ToLower() switch
        {
            "公司" or "辦公室" or "office" => "fas fa-building",
            "住家" or "家庭" or "home" => "fas fa-home",
            "工廠" or "factory" => "fas fa-industry",
            "倉庫" or "warehouse" => "fas fa-warehouse",
            "分店" or "分公司" or "branch" => "fas fa-store",
            "郵寄" or "通訊" or "mailing" => "fas fa-mailbox",
            "發票" or "帳單" or "billing" => "fas fa-file-invoice",
            "配送" or "送貨" or "delivery" => "fas fa-truck",
            _ => "fas fa-map-marker-alt"
        };
    }

    // 取得地址類型背景顏色
    private string GetAddressTypeIconClass(string? typeName)
    {
        return typeName?.ToLower() switch
        {
            "公司" or "辦公室" or "office" => "bg-primary",
            "住家" or "家庭" or "home" => "bg-success",
            "工廠" or "factory" => "bg-warning",
            "倉庫" or "warehouse" => "bg-info",
            "分店" or "分公司" or "branch" => "bg-secondary",
            "郵寄" or "通訊" or "mailing" => "bg-danger",
            "發票" or "帳單" or "billing" => "bg-dark",
            "配送" or "送貨" or "delivery" => "bg-success",
            _ => "bg-secondary"
        };
    }

    // 開啟地圖
    private async Task OpenMap(IAddressEntity address)
    {
        if (OnMapClick.HasDelegate)
        {
            await OnMapClick.InvokeAsync(address);
        }
        else
        {
            // 預設行為：在Google Maps中開啟
            var fullAddress = BuildFullAddress(address);
            var encodedAddress = Uri.EscapeDataString(fullAddress);
            var mapUrl = $"https://www.google.com/maps/search/?api=1&query={encodedAddress}";
            await JSRuntime.InvokeAsync<object>("open", mapUrl, "_blank");
        }
    }

    // 複製地址
    private async Task CopyAddress(IAddressEntity address)
    {
        if (OnCopyClick.HasDelegate)
        {
            await OnCopyClick.InvokeAsync(address);
        }
        else
        {
            // 預設行為：複製到剪貼簿
            var fullAddress = BuildFullAddress(address);            
            await JSRuntime.InvokeVoidAsync("navigator.clipboard.writeText", fullAddress);
            // 這裡可以加入通知提示
        }
    }
}