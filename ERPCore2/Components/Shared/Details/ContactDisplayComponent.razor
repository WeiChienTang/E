@* 聯絡方式顯示組件 *@

@if (Contacts?.Any() == true)
{
    <div class="card border-0 shadow-sm">
        <div class="card-header bg-gradient bg-light border-0">
            <h6 class="mb-0 d-flex align-items-center">
                <i class="fas fa-phone text-success me-2"></i>
                @(Title ?? "聯絡方式")
                <span class="badge bg-secondary ms-auto">@Contacts.Count() 筆</span>
            </h6>
        </div>
        <div class="card-body p-0">
            <div class="list-group list-group-flush">
                @foreach (var contact in Contacts.OrderBy(c => c.ContactType?.SortOrder ?? 0))
                {
                    <div class="list-group-item d-flex align-items-center py-3">
                        <div class="flex-shrink-0 me-3">
                            <div class="icon-box @GetContactTypeIconClass(contact.ContactType?.TypeName) rounded-circle d-flex align-items-center justify-content-center" style="width: 45px; height: 45px;">
                                <i class="@GetContactTypeIcon(contact.ContactType?.TypeName) text-white"></i>
                            </div>
                        </div>
                        <div class="flex-grow-1">
                            <div class="d-flex justify-content-between align-items-start">
                                <div>
                                    <h6 class="mb-1 fw-bold">
                                        @(contact.ContactType?.TypeName ?? "聯絡方式")
                                    </h6>
                                    <div class="contact-value">
                                        @if (IsEmail(contact.ContactValue))
                                        {
                                            <a href="mailto:@contact.ContactValue" class="text-decoration-none">
                                                <i class="fas fa-envelope me-1 text-muted"></i>
                                                @contact.ContactValue
                                            </a>
                                        }
                                        else if (IsPhone(contact.ContactValue))
                                        {
                                            <a href="tel:@contact.ContactValue" class="text-decoration-none">
                                                <i class="fas fa-phone me-1 text-muted"></i>
                                                @FormatPhone(contact.ContactValue)
                                            </a>
                                        }
                                        else if (IsUrl(contact.ContactValue))
                                        {
                                            <a href="@contact.ContactValue" target="_blank" class="text-decoration-none">
                                                <i class="fas fa-external-link-alt me-1 text-muted"></i>
                                                @contact.ContactValue
                                            </a>
                                        }
                                        else
                                        {
                                            <span class="text-dark">@contact.ContactValue</span>
                                        }
                                    </div>
                                    @if (!string.IsNullOrEmpty(contact.Remarks))
                                    {
                                        <small class="text-muted d-block mt-1">
                                            <i class="fas fa-sticky-note me-1"></i>
                                            @contact.Remarks
                                        </small>
                                    }
                                </div>
                                <div class="text-end">
                                    @if (contact.IsPrimary)
                                    {
                                        <span class="badge bg-primary">主要</span>
                                    }                                    @if (ShowStatus && contact.Status != null)
                                    {
                                        <span class="badge @(contact.Status == true ? "bg-success" : "bg-secondary")">
                                            @(contact.Status == true ? "有效" : "無效")
                                        </span>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        
        @if (ShowStatistics)
        {
            <div class="card-footer bg-light border-0">
                <div class="row text-center">
                    <div class="col">
                        <small class="text-muted">總計</small>
                        <div class="fw-bold">@Contacts.Count()</div>
                    </div>
                    <div class="col">
                        <small class="text-muted">主要聯絡方式</small>
                        <div class="fw-bold">@Contacts.Count(c => c.IsPrimary)</div>
                    </div>
                    @if (ShowStatus)
                    {
                        <div class="col">
                            <small class="text-muted">有效</small>
                            <div class="fw-bold">@Contacts.Count(c => c.Status == true)</div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="card border-0 shadow-sm">
        <div class="card-body text-center py-5">
            <div class="text-muted">
                <i class="fas fa-phone-slash fa-3x mb-3 d-block text-secondary"></i>
                <h5>@(EmptyTitle ?? "尚未設定聯絡方式")</h5>
                <p class="mb-0">@(EmptyMessage ?? "目前沒有任何聯絡方式資料")</p>
            </div>
            
            @if (ShowCreateButton && OnCreateClick.HasDelegate)
            {
                <button type="button" class="btn btn-outline-primary mt-3" @onclick="OnCreateClick">
                    <i class="fas fa-plus me-1"></i>
                    新增聯絡方式
                </button>
            }
        </div>
    </div>
}

@code {
    [Parameter] public IEnumerable<IContactEntity>? Contacts { get; set; }
    [Parameter] public string? Title { get; set; }
    [Parameter] public string? EmptyTitle { get; set; }
    [Parameter] public string? EmptyMessage { get; set; }
    [Parameter] public bool ShowStatus { get; set; } = true;
    [Parameter] public bool ShowStatistics { get; set; } = false;
    [Parameter] public bool ShowCreateButton { get; set; } = false;
    [Parameter] public EventCallback OnCreateClick { get; set; }

    // 取得聯絡方式類型圖示
    private string GetContactTypeIcon(string? typeName)
    {
        return typeName?.ToLower() switch
        {
            "電話" or "phone" => "fas fa-phone",
            "手機" or "mobile" => "fas fa-mobile-alt",
            "傳真" or "fax" => "fas fa-fax",
            "電子郵件" or "email" => "fas fa-envelope",
            "網站" or "website" => "fas fa-globe",
            "line" => "fab fa-line",
            "微信" or "wechat" => "fab fa-weixin",
            "skype" => "fab fa-skype",
            "facebook" => "fab fa-facebook",
            "linkedin" => "fab fa-linkedin",
            "twitter" => "fab fa-twitter",
            _ => "fas fa-address-book"
        };
    }

    // 取得聯絡方式類型背景顏色
    private string GetContactTypeIconClass(string? typeName)
    {
        return typeName?.ToLower() switch
        {
            "電話" or "phone" => "bg-success",
            "手機" or "mobile" => "bg-primary",
            "傳真" or "fax" => "bg-secondary",
            "電子郵件" or "email" => "bg-danger",
            "網站" or "website" => "bg-info",
            "line" => "bg-success",
            "微信" or "wechat" => "bg-success",
            "skype" => "bg-info",
            "facebook" => "bg-primary",
            "linkedin" => "bg-primary",
            "twitter" => "bg-info",
            _ => "bg-secondary"
        };
    }

    // 判斷是否為電子郵件
    private bool IsEmail(string? value)
    {
        if (string.IsNullOrEmpty(value)) return false;
        return value.Contains("@") && value.Contains(".");
    }

    // 判斷是否為電話號碼
    private bool IsPhone(string? value)
    {
        if (string.IsNullOrEmpty(value)) return false;
        return value.Any(char.IsDigit) && (value.Contains("-") || value.Contains("(") || value.Length >= 8);
    }

    // 判斷是否為網址
    private bool IsUrl(string? value)
    {
        if (string.IsNullOrEmpty(value)) return false;
        return value.StartsWith("http://") || value.StartsWith("https://") || value.StartsWith("www.");
    }

    // 格式化電話號碼
    private string FormatPhone(string? phone)
    {
        if (string.IsNullOrEmpty(phone)) return string.Empty;
        
        // 移除所有非數字字符進行檢查
        var digits = new string(phone.Where(char.IsDigit).ToArray());
        
        // 如果是台灣手機號碼格式 (09xxxxxxxx)
        if (digits.StartsWith("09") && digits.Length == 10)
        {
            return $"{digits.Substring(0, 4)}-{digits.Substring(4, 3)}-{digits.Substring(7, 3)}";
        }
        
        // 如果是台灣市話格式 (02xxxxxxxx 或 其他區碼)
        if (digits.Length >= 8 && digits.Length <= 10)
        {
            if (digits.StartsWith("02") && digits.Length == 9)
            {
                return $"({digits.Substring(0, 2)}) {digits.Substring(2, 4)}-{digits.Substring(6, 3)}";
            }
            else if ((digits.StartsWith("03") || digits.StartsWith("04") || digits.StartsWith("05") || 
                     digits.StartsWith("06") || digits.StartsWith("07") || digits.StartsWith("08")) && digits.Length == 9)
            {
                return $"({digits.Substring(0, 2)}) {digits.Substring(2, 3)}-{digits.Substring(5, 4)}";
            }
        }        
        // 如果已經有格式化，直接返回
        return phone;
    }
}