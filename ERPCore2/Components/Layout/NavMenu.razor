@rendermode @(new Microsoft.AspNetCore.Components.Web.InteractiveServerRenderMode())
@using Microsoft.AspNetCore.Components.Authorization
@using ERPCore2.Components.Shared
@using ERPCore2.Components.Shared.NavMenus
@using ERPCore2.Components.Shared.Auth
@using ERPCore2.Data.Navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject IJSRuntime JSRuntime

<div class="nav-menu-container">
    @* 手機版選單切換按鈕 - 必須在外層才能與 nav-scrollable 成為兄弟元素 *@
    <input type="checkbox" title="Navigation menu" class="navbar-toggler" id="nav-toggle" />
    
    <div class="top-row navbar navbar-dark">
        <div class="top-row-content">
            <nav class="nav flex-column user-info-nav">
                @* 使用者資訊選單 *@
                <AuthorizeView>
                    <Authorized>
                        <NavMenuItem Text="@(context.User.FindFirst(System.Security.Claims.ClaimTypes.GivenName)?.Value ?? context.User.Identity?.Name ?? "使用者")" 
                                    IconClass="bi bi-person-circle" 
                                    ShowDropdownArrow ="false"
                                    AutoDetectPermissions="false">
                            <DropdownItems>
                                <NavDropdownItem Text="個人資料" 
                                               Url="#" 
                                               IconClass="bi bi-person" />
                                <NavDropdownItem Text="登出" 
                                               Url="/auth/signout" 
                                               IconClass="bi bi-box-arrow-right" />
                            </DropdownItems>
                        </NavMenuItem>
                    </Authorized>
                    <NotAuthorized>
                        <NavMenuItem Text="登入" 
                                    IconClass="bi bi-box-arrow-in-right" 
                                    Url="/auth/login" />
                    </NotAuthorized>
                </AuthorizeView>
            </nav>
            
            @* 切換按鈕的視覺 label *@
            <label for="nav-toggle" class="navbar-toggler-label" title="切換導航選單">
                <span class="navbar-toggler-icon"></span>
            </label>
        </div>
    </div>

    <div class="nav-scrollable">    
        <nav class="nav flex-column">
            @foreach (var menuItem in NavigationConfig.GetMenuGroups())
            {
                @if (menuItem.IsParent && menuItem.Children.Any())
                {
                    <!-- 有子選單的項目 -->
                    <NavMenuItem Text="@menuItem.Name" 
                                IconClass="@menuItem.IconClass" 
                                MenuKey="@menuItem.MenuKey">
                        <DropdownItems>
                            @foreach (var child in menuItem.Children)
                            {
                                <NavDropdownItem Text="@child.Name" 
                                               Url="@child.Route" 
                                               RequiredPermission="@child.RequiredPermission" 
                                               ParentMenuKey="@menuItem.MenuKey" 
                                               IconClass="@child.IconClass" />
                            }
                        </DropdownItems>
                    </NavMenuItem>
                }
                else
                {
                    <!-- 單一連結項目 -->
                    <NavMenuItem Text="@menuItem.Name" 
                                IconClass="@menuItem.IconClass" 
                                Url="@menuItem.Route" />
                }
            }
        </nav>
    </div>
</div>

@code {
    // ===== 事件處理 =====
    
    private async Task ShowUnderConstructionMessage()
    {
        await JSRuntime.InvokeVoidAsync("alert", "此功能還在設計中");
    }
}
